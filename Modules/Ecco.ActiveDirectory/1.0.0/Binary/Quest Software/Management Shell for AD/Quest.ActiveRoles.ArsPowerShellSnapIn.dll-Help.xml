<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Add one or more objects to a group in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add objects to a group in Active Directory. You can specify a list of objects to add, separating the list entries by commas.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group to which you want to add members.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Member</maml:name>
				<maml:description>
					<maml:para>Specify a list of objects you want this cmdlet to add to the group. Each list entry is the DN, SID, GUID, UPN or Domain\Name of an object to add to the group. Separate the list entries by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group to which you want to add members.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Member</maml:name>
			<maml:description>
				<maml:para>Specify a list of objects you want this cmdlet to add to the group. Each list entry is the DN, SID, GUID, UPN or Domain\Name of an object to add to the group. Separate the list entries by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;add-QADGroupMember -identity &#39;CN=group1,OU=companyOU,DC=company,DC=com&#39; -member &#39;company\jsmith&#39;,&#39;S-1-5-21-1279736177-1630491018-182859109-1215&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, add two objects (the first one specified by Domain\Name, the second one specified by SID) to the group, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
add-QADGroupMember &#39;&lt;DN of group&gt;&#39; -Service &#39;server.domain.local:389&#39; -Member &#39;&lt;DN of object&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS group by DN, and add the object with a certain DN to the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$user = Get-QADUser domainName\userName -Service foreign.domain.com

C:\PS&gt;Add-QADGroupMember domainName\groupName $user                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add a user from an external trusted domain to a group (the user and the group are located in different forests).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADMemberOf
		</command:name>
		<maml:description>
			<maml:para>Make a particular object a member of particular groups in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADMemberOf</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add a single object to groups in Active Directory. You can specify a list of groups to which you want to add the object, separating the list entries by commas. The cmdlet also provides the option to remove the object from all groups other than those specified.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted since a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADMemberOf</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QAD cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group or groups to which you want the cmdlet to add the object specified by the Identity parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the cmdlet to remove the object specified by the Identity parameter from all groups except those specified by the Group parameter.

If this parameter is omitted, the cmdlet adds the object to the groups specified and retains the object in all groups in which the object already has membership. If this parameter is supplied, the cmdlet adds the object to the groups specified and removes the object from any other groups.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Group</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group or groups to which you want the cmdlet to add the object specified by the Identity parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QAD cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the cmdlet to remove the object specified by the Identity parameter from all groups except those specified by the Group parameter.

If this parameter is omitted, the cmdlet adds the object to the groups specified and retains the object in all groups in which the object already has membership. If this parameter is supplied, the cmdlet adds the object to the groups specified and removes the object from any other groups.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADMemberOf &#39;domainName\userName&#39; -Group &#39;domainName\groupName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add a particular user to a particular group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADMemberOf &#39;domainName\userName&#39; -Group &#39;domainName\groupName&#39; -Replace                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add a particular user to a particular group and remove that user from the other groups.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADPasswordSettingsObjectAppliesTo
		</command:name>
		<maml:description>
			<maml:para>Add PSO links on a Password Settings object. Active Directory version of Windows Server 2008 or later is required.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADPasswordSettingsObjectAppliesTo</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to apply a Password Settings object to users or global security groups. You can specify a list of users and groups, separating the list entries by commas. The cmdlet adds (appends) the specified distinguished names of the users or groups to the &#39;msDS-PSOAppliesTo&#39; attribute of the Password Settings object, without removing the names that already exist in the attribute.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADPasswordSettingsObjectAppliesTo</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN or GUID of the Password Settings object.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADPasswordSettingsObject cmdlet, to have that object identify the Password Settings object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Specify a list of users and groups to which you want the Password Settings object to apply. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>Specify a list of users and groups to which you want the Password Settings object to apply. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN or GUID of the Password Settings object.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADPasswordSettingsObject cmdlet, to have that object identify the Password Settings object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPasswordSettingsObjectAppliesTo &#39;myPso1&#39; -AppliesTo &#39;JSmith&#39; | Format-List                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Apply the Password Settings object to the user object, and display operation results.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingsObject -Name &#39;myPso1&#39; | Add-QADPasswordSettingsObjectAppliesTo -AppliesTo &#39;JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find a Password Settings object by name and add a PSO link that points to a particular user object (so the Password Settings object applies to that user).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADPermission
		</command:name>
		<maml:description>
			<maml:para>Add access control entries (ACEs) to the discretionary access control list (DACL) of a certain directory object or objects.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADPermission</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add access control entries (ACEs) to the discretionary access control list (DACL) of a given object or objects in the directory (directory objects).

The directory objects can be specified using the Identity parameter. Another option is to use pipelining: pass the output of the appropriate Get-QAD cmdlet to this cmdlet, with the -SecurityMask Dacl parameter supplied for the Get- cmdlet (see examples).

The objects representing ACEs to add can be either passed to this cmdlet through the pipeline or created by the cmdlet itself. In the latter case you use cmdlet parameters to configure the ACEs that you want the cmdlet to add. If you opt to use pipelining, you can have Get-QADPermission retrieve ACEs and then pass the output of that cmdlet to the Add-QADPermission cmdlet so as to copy certain ACEs from one directory object to another directory object (see examples).

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADPermission</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputPermission</maml:name>
				<maml:description>
					<maml:para>This parameter is used to identify the object or objects representing ACEs to add. The parameter accepts parameter values from the pipeline. Thus, when you use pipelining to pass to this cmdlet the objects returned by the Get-QADPermission cmdlet, you should not supply this parameter on the command line. Another option is to save the object in a variable and then supply that variable as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsPermission</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-QADPermission</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will add access control entries (ACEs) to the discretionary access control list (DACL) in the security descriptor of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Account</maml:name>
				<maml:description>
					<maml:para>Supply the identity (such as name, distinguished name, domain\name, SID, etc.) of a security principal (user, group, computer account, enc.). The cmdlet will add ACEs that determine access rights of that account on the directory objects specified. You can supply identities of multiple accounts.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ApplyTo</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that have a certain inheritance type set (other than &#39;All&#39;, which is the default setting). Valid parameter values are:

 &#39;ThisObjectOnly&#39; - Indicates no inheritance. The ACE information is only used on the object
                    on which the ACE is set. 
                    ACE information is not inherited by any descendents of the object.

 &#39;All&#39; - Indicates inheritance that includes the object on which the ACE is set, 
         the object&#39;s immediate children, and the descendents of the object&#39;s children.

 &#39;ChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children
                  and the descendants of the object&#39;s children, but not the object itself.

 &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself
                                        and its immediate children. 
                                        It does not include the descendents of its children.

 &#39;ImmediateChildObjectsOnly&#39; - Indicates inheritance that includes the object&#39;s immediate children only, 
                               not the object itself or the descendents of its children.

If you do not supply this parameter, the cmdlet configures ACEs with the inheritance type set to &#39;All&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsSecurityInheritance</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ApplyToType</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that can be inherited by objects of specific classes (rather than all classes). Parameter value is a string array of LDAP display names, each of which identifies the classSchema object for the object class you want. If you do not supply this parameter, the cmdlet configures ACEs that can be inherited by objects of any class. (This parameter causes the cmdlet to search by the InheritedObjectType setting on the ACEs.)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChildType</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that control the right to create or delete child objects of specific classes (rather than all classes). Parameter value is a string array of LDAP display names, each of which identifies the classSchema object for a child object&#39;s class you want. If you do not supply this parameter, the cmdlet configures ACEs to control the right to create or delete child objects of any class. (This parameter causes the cmdlet to configure the ObjectType setting on the ACEs).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Deny</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that deny (rather than allow) access. If you do not supply this parameter, the cmdlet configures ACEs to allow access.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExtendedRight</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that determine specific extended rights on the directory objects. Parameter value is a string array of the names of the extended rights you want. For a list of possible extended rights, see the topic &quot;Extended Rights&quot; in the MSDN Library at http://msdn.microsoft.com. For more information about extended rights, see the topic &quot;Control Access Rights&quot; in the MSDN Library.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if want the cmdlet to add ACEs that determine access to specific properties of the directory objects (rather than all properties). Parameter value is a string array of the LDAP display names of the properties you want.

If you supply neither this parameter nor the PropertySet parameter, the cmdlet configures ACEs to determine access to all properties.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PropertySet</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if want the cmdlet to add ACEs that determine access to specific property sets of the directory objects (rather than all properties). Parameter value is a string array of the names of the property sets you want. For a list of possible property sets, see the topic &quot;Property Sets&quot; in the MSDN Library at http://msdn.microsoft.com.

If you supply neither this parameter nor the Property parameter, the cmdlet configures ACEs to determine access to all properties.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Rights</maml:name>
				<maml:description>
					<maml:para>Add ACEs with certain access rights set. Valid parameter values are (for descriptions of these access rights see the topic &quot;ActiveDirectoryRights Enumeration&quot; in the MSDN Library at http://msdn.microsoft.com):

 &#39;Delete&#39;
 &#39;ReadControl&#39;
 &#39;WriteDacl&#39;
 &#39;WriteOwner&#39;
 &#39;Synchronize&#39; 
 &#39;AccessSystemSecurity&#39;
 &#39;GenericRead&#39;
 &#39;GenericWrite&#39;
 &#39;GenericExecute&#39; 
 &#39;GenericAll&#39;
 &#39;CreateChild&#39;
 &#39;DeleteChild&#39;
 &#39;ListChildren&#39;
 &#39;Self&#39;
 &#39;ReadProperty&#39;
 &#39;WriteProperty&#39;
 &#39;DeleteTree&#39;
 &#39;ListObject&#39;
 &#39;ExtendedRight&#39;

Parameter value can be any combination of the listed values, separated by commas. For example, the parameter value of &#39;ReadProperty,WriteProperty&#39; causes the cmdlet to add ACEs that have both the ReadProperty and WriteProperty access rights set.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >CreateChild</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DeleteChild</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ListChildren</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Self</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ReadProperty</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteProperty</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DeleteTree</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ListObject</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ExtendedRight</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Delete</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ReadControl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericExecute</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericWrite</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericRead</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteDacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteOwner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericAll</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Synchronize</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >AccessSystemSecurity</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ValidatedWrite</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to add ACEs that determine specific validated writes on the directory objects. Parameter value is a string array of the names of the validated writes you want. For a list of possible validated writes, see the topic &quot;Validated Writes&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Account</maml:name>
			<maml:description>
				<maml:para>Supply the identity (such as name, distinguished name, domain\name, SID, etc.) of a security principal (user, group, computer account, enc.). The cmdlet will add ACEs that determine access rights of that account on the directory objects specified. You can supply identities of multiple accounts.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApplyTo</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that have a certain inheritance type set (other than &#39;All&#39;, which is the default setting). Valid parameter values are:

 &#39;ThisObjectOnly&#39; - Indicates no inheritance. The ACE information is only used on the object
                    on which the ACE is set. 
                    ACE information is not inherited by any descendents of the object.

 &#39;All&#39; - Indicates inheritance that includes the object on which the ACE is set, 
         the object&#39;s immediate children, and the descendents of the object&#39;s children.

 &#39;ChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children
                  and the descendants of the object&#39;s children, but not the object itself.

 &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself
                                        and its immediate children. 
                                        It does not include the descendents of its children.

 &#39;ImmediateChildObjectsOnly&#39; - Indicates inheritance that includes the object&#39;s immediate children only, 
                               not the object itself or the descendents of its children.

If you do not supply this parameter, the cmdlet configures ACEs with the inheritance type set to &#39;All&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsSecurityInheritance</command:parameterValue>
			<dev:type>
				<maml:name>ArsSecurityInheritance</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApplyToType</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that can be inherited by objects of specific classes (rather than all classes). Parameter value is a string array of LDAP display names, each of which identifies the classSchema object for the object class you want. If you do not supply this parameter, the cmdlet configures ACEs that can be inherited by objects of any class. (This parameter causes the cmdlet to search by the InheritedObjectType setting on the ACEs.)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChildType</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that control the right to create or delete child objects of specific classes (rather than all classes). Parameter value is a string array of LDAP display names, each of which identifies the classSchema object for a child object&#39;s class you want. If you do not supply this parameter, the cmdlet configures ACEs to control the right to create or delete child objects of any class. (This parameter causes the cmdlet to configure the ObjectType setting on the ACEs).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Deny</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that deny (rather than allow) access. If you do not supply this parameter, the cmdlet configures ACEs to allow access.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExtendedRight</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that determine specific extended rights on the directory objects. Parameter value is a string array of the names of the extended rights you want. For a list of possible extended rights, see the topic &quot;Extended Rights&quot; in the MSDN Library at http://msdn.microsoft.com. For more information about extended rights, see the topic &quot;Control Access Rights&quot; in the MSDN Library.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will add access control entries (ACEs) to the discretionary access control list (DACL) in the security descriptor of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputPermission</maml:name>
			<maml:description>
				<maml:para>This parameter is used to identify the object or objects representing ACEs to add. The parameter accepts parameter values from the pipeline. Thus, when you use pipelining to pass to this cmdlet the objects returned by the Get-QADPermission cmdlet, you should not supply this parameter on the command line. Another option is to save the object in a variable and then supply that variable as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsPermission</command:parameterValue>
			<dev:type>
				<maml:name>ArsPermission</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Property</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if want the cmdlet to add ACEs that determine access to specific properties of the directory objects (rather than all properties). Parameter value is a string array of the LDAP display names of the properties you want.

If you supply neither this parameter nor the PropertySet parameter, the cmdlet configures ACEs to determine access to all properties.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PropertySet</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if want the cmdlet to add ACEs that determine access to specific property sets of the directory objects (rather than all properties). Parameter value is a string array of the names of the property sets you want. For a list of possible property sets, see the topic &quot;Property Sets&quot; in the MSDN Library at http://msdn.microsoft.com.

If you supply neither this parameter nor the Property parameter, the cmdlet configures ACEs to determine access to all properties.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Rights</maml:name>
			<maml:description>
				<maml:para>Add ACEs with certain access rights set. Valid parameter values are (for descriptions of these access rights see the topic &quot;ActiveDirectoryRights Enumeration&quot; in the MSDN Library at http://msdn.microsoft.com):

 &#39;Delete&#39;
 &#39;ReadControl&#39;
 &#39;WriteDacl&#39;
 &#39;WriteOwner&#39;
 &#39;Synchronize&#39; 
 &#39;AccessSystemSecurity&#39;
 &#39;GenericRead&#39;
 &#39;GenericWrite&#39;
 &#39;GenericExecute&#39; 
 &#39;GenericAll&#39;
 &#39;CreateChild&#39;
 &#39;DeleteChild&#39;
 &#39;ListChildren&#39;
 &#39;Self&#39;
 &#39;ReadProperty&#39;
 &#39;WriteProperty&#39;
 &#39;DeleteTree&#39;
 &#39;ListObject&#39;
 &#39;ExtendedRight&#39;

Parameter value can be any combination of the listed values, separated by commas. For example, the parameter value of &#39;ReadProperty,WriteProperty&#39; causes the cmdlet to add ACEs that have both the ReadProperty and WriteProperty access rights set.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>CreateChild</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DeleteChild</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ListChildren</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Self</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ReadProperty</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteProperty</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DeleteTree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ListObject</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ExtendedRight</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Delete</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ReadControl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericExecute</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericWrite</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericRead</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteDacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteOwner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericAll</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Synchronize</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>AccessSystemSecurity</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ValidatedWrite</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to add ACEs that determine specific validated writes on the directory objects. Parameter value is a string array of the names of the validated writes you want. For a list of possible validated writes, see the topic &quot;Validated Writes&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPermission &#39;DistinguishedNameOfTheOU&#39; -Account &#39;domainName\groupName&#39; -Rights &#39;GenericAll&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Give a certain group full access to a certain organizational unit (OU) and all objects in that OU.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPermission &#39;domainName\userName&#39; -Deny -Account &#39;domainName\groupName&#39; -Rights &#39;WriteProperty&#39; -PropertySet (&#39;General-Information&#39;,&#39;Web-Information&#39;) -Property &#39;sAMAccountName&#39; -ApplyTo &#39;ThisObjectOnly&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Deny a certain group permission to modify the sAMAccountName property as well as the properties that are part of the General Information or Web Information property set on a certain user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPermission &#39;DistinguishedNameOfTheOU&#39; -Account &#39;domainName\groupName&#39; -Rights &#39;CreateChild&#39; -ChildType &#39;user&#39; -ApplyTo &#39;ThisObjectAndImmediateChildObjects&#39; -ApplyToType &#39;organizationalUnit&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Authorize a given group to create user accounts in a given organizational unit (OU) or in organizational units that are immediate children of that OU.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPermission &#39;DistinguishedNameOfTheOU&#39; -Account &#39;domainName\groupName&#39; -Rights &#39;ReadProperty,WriteProperty&#39; -Property &#39;member&#39; -ApplyToType &#39;group&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Authorize a given group to view or modify the group membership list of any group in a given organizational unit (OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADGroup -SearchRoot &#39;DistinguishedNameOfTheOU&#39; -SecurityMask &#39;Dacl&#39; | Add-QADPermission -Account &#39;domainName\UserName&#39; -Deny -Rights &#39;WriteProperty&#39; -Property &#39;member&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Deny a given user account permission to modify the group membership list of any group in a given organizational unit (OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Add-QADPermission &#39;DistinguishedNameOfTheOU&#39; -Account &#39;domainName\groupName&#39; -Rights &#39;ReadProperty,WriteProperty&#39; -PropertySet &#39;Personal-Information&#39; -ApplyTo &#39;ChildObjects&#39; -ApplyToType &#39;user&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Authorize a given group to view or modify any property that is part of the Personal Information property set on any user account in a given organizational unit (OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPermission &#39;DistinguishedNameOfSourceObject&#39; | Add-QADPermission &#39;DistinguishedNameOfDestinationObject&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Copy the ACEs that are configured on a given directory object (not including the inherited ACEs or the schema default ACEs) to another directory object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Approve-QARSApprovalTask
		</command:name>
		<maml:description>
			<maml:para>Apply the Approve resolution on approval tasks for which you are assigned to the Approver role in Quest One ActiveRoles.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Approve</command:verb>
		<command:noun>QARSApprovalTask</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to approve change requests that require your approval in Quest One ActiveRoles. You can take an object returned by the Get-QARSApprovalTask cmdlet and pipe that object into this cmdlet in order to complete the respective approval task with the Approve resolution.

Every change request that requires your approval has an approval task for you to allow or deny the requested changes. When you complete your approval task with the Approve resolution, you allow the changes. Note that the changes may also require approval by other persons. In this case, the changes are applied only after all approval tasks (including yours) are completed with the Approve resolution. For more information about approval tasks, see description of the Get-QARSApprovalTask cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Approve-QARSApprovalTask</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Task</maml:name>
				<maml:description>
					<maml:para>Pass an object returned by the Get-QARSApprovalTask cmdlet to this parameter. This parameter also accepts the numeric ID of an approval task (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TaskIdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Reason</maml:name>
				<maml:description>
					<maml:para>Supply any text you want to comment your decision. This text is saved by Quest One ActiveRoles for reporting and audit purposes, and can be accesses through the respective property of the ApprovalTask object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Reason</maml:name>
			<maml:description>
				<maml:para>Supply any text you want to comment your decision. This text is saved by Quest One ActiveRoles for reporting and audit purposes, and can be accesses through the respective property of the ApprovalTask object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Task</maml:name>
			<maml:description>
				<maml:para>Pass an object returned by the Get-QARSApprovalTask cmdlet to this parameter. This parameter also accepts the numeric ID of an approval task (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TaskIdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>TaskIdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -ApproverIsMe -TaskStatus Pending | Approve-QARSApprovalTask                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Approve all changes that are awaiting approval by the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -TargetObject &#39;domainName\userName&#39; -OperationStatus Pending | %{Get-QARSApprovalTask -Operation $_ -ApproverIsMe} | Approve-QARSApprovalTask                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Approve all changes to a particular user account that are awaiting approval by the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Connect-QADService
		</command:name>
		<maml:description>
			<maml:para>Connect to the ActiveRoles Administration Service via the ActiveRoles ADSI Provider, or to a certain Active Directory domain controller or a certain server running an Active Directory Lightweight Directory Services (AD LDS) instance via the regular LDAP ADSI Provider.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Connect</command:verb>
		<command:noun>QADService</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>This cmdlet establishes a connection to any available Administration Service, to a specific Administration Service, or directly to a specific Active Directory domain controller or a server running an Active Directory Lightweight Directory Services (AD LDS) instance, with the credentials of the locally logged on user or with the credentials of a specified user. A connection determines the default connection parameters (the server and the security context) for the operations that are performed by the other cmdlets. The default connection parameters are effective until the connection is closed either explicitly or by establishing a new connection, and can be overridden on a per-cmdlet basis.

The cmdlet establishes a connection in the security context of a certain user, so some user credentials must be provided in order to authenticate the user. The cmdlet makes it possible to specify user credentials in a number of ways through the use of the credential-related parameters -ConnectionAccount, -ConnectionPassword, -Credential, and -Connection:

 * If no connection-related parameters are specified,
   the cmdlet uses the credentials of the locally logged on user.

 * If the -Credential parameter is specified,
   the credentials provided by this parameter are used regardless
   of whether any other credential-related parameters are specified.

 * If the -ConnectionAccount and -ConnectionPassword parameters
   are specified while the -Credential parameter is omitted, 
   the specified user name and password are passed to the cmdlet 
   as the user credentials regardless of whether the -Connection 
   parameter is specified.

 * If the -Connection parameter is specified while all the other
   credential-related parameters are omitted, the cmdlet re-uses
   the credentials that were used to open the existing connection.

The object that is returned by this cmdlet can be passed as the value of the Connection parameter to any other cmdlet in this snap-in in order to re-use the connection parameters of the existing connection. Note that the object includes information not only about the user credentials or security context, but also about the server to which the connection is established. So, if you pass the object to a cmdlet and omit the Service parameter, the cmdlet will use the server specified by the object you have passed to the cmdlet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Connect-QADService</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>The fully qualified domain name, NetBIOS name or IP address of the computer running the Administration Service to connect to, or, if the Proxy parameter is not specified, the fully qualified domain name, NetBIOS name or IP address of the AD domain controller or AD LDS server to connect to. In case of AD LDS server, the fully qualified domain name of the server should be specified, with the appropriate port number added to the server name (see examples).

If this parameter is not specified, the -Proxy parameter will cause the cmdlet to attempt a connection to any available Administration Service. If both the -Service and -Proxy parameters are not specified, the cmdlet attempts to connect to any available domain controller in the domain of the computer running the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>With this parameter, the user name and password of an earlier established connection can be re-used to establish a new connection (for example, to a different server). Save in a certain variable the AdsiConnection object returned by the Connect-QADService cmdlet, and then pass that object to this parameter when establishing a new connection.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>This is the user logon name of the account with which you want to connect, in the form DomainName\UserName. If this parameter is omitted, a connection is established with the credentials of the account under which the cmdlet is running.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>The password of the user account with which you want to connect. The parameter value must be a SecureString object. Use the Read-Host cmdlet provided by Windows PowerShell to pass a SecureString object to this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>The user name and password of the user account with which you want to connect, in the form of a PSCredential object. Use the Get-Credential cmdlet provided by Windows PowerShell to pass a PSCredential object to this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>If this parameter is present, the cmdlet will use the ActiveRoles ADSI Provider, so as to establish a connection via Quest One ActiveRoles. Otherwise, the regular Microsoft LDAP ADSI Provider will be used, so as to establish a direct connection to an AD domain controller or AD LDS server.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>This parameter directs the cmdlet to connect to a domain controller that holds the role of the Global Catalog server. When the Proxy parameter is supplied on the command line, UseGlobalCatalog has no effect.

If UseGlobalCatalog is supplied together with the Service parameter that specifies a certain domain controller, the cmdlet connects to the specified domain controller if that domain controller is a Global Catalog server. If the Service parameter specifies a particular domain, then UseGlobalCatalog causes the cmdlet to connect to any available Global Catalog server in that domain. If the Service parameter is omitted, then UseGlobalCatalog causes the cmdlet to connect to any available Global Catalog server in the domain of the computer running the cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>With this parameter, the user name and password of an earlier established connection can be re-used to establish a new connection (for example, to a different server). Save in a certain variable the AdsiConnection object returned by the Connect-QADService cmdlet, and then pass that object to this parameter when establishing a new connection.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>This is the user logon name of the account with which you want to connect, in the form DomainName\UserName. If this parameter is omitted, a connection is established with the credentials of the account under which the cmdlet is running.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>The password of the user account with which you want to connect. The parameter value must be a SecureString object. Use the Read-Host cmdlet provided by Windows PowerShell to pass a SecureString object to this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>The user name and password of the user account with which you want to connect, in the form of a PSCredential object. Use the Get-Credential cmdlet provided by Windows PowerShell to pass a PSCredential object to this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>If this parameter is present, the cmdlet will use the ActiveRoles ADSI Provider, so as to establish a connection via Quest One ActiveRoles. Otherwise, the regular Microsoft LDAP ADSI Provider will be used, so as to establish a direct connection to an AD domain controller or AD LDS server.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>The fully qualified domain name, NetBIOS name or IP address of the computer running the Administration Service to connect to, or, if the Proxy parameter is not specified, the fully qualified domain name, NetBIOS name or IP address of the AD domain controller or AD LDS server to connect to. In case of AD LDS server, the fully qualified domain name of the server should be specified, with the appropriate port number added to the server name (see examples).

If this parameter is not specified, the -Proxy parameter will cause the cmdlet to attempt a connection to any available Administration Service. If both the -Service and -Proxy parameters are not specified, the cmdlet attempts to connect to any available domain controller in the domain of the computer running the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>This parameter directs the cmdlet to connect to a domain controller that holds the role of the Global Catalog server. When the Proxy parameter is supplied on the command line, UseGlobalCatalog has no effect.

If UseGlobalCatalog is supplied together with the Service parameter that specifies a certain domain controller, the cmdlet connects to the specified domain controller if that domain controller is a Global Catalog server. If the Service parameter specifies a particular domain, then UseGlobalCatalog causes the cmdlet to connect to any available Global Catalog server in that domain. If the Service parameter is omitted, then UseGlobalCatalog causes the cmdlet to connect to any available Global Catalog server in the domain of the computer running the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -service &#39;localhost&#39; -proxy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of the locally logged on user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Prompt the user for password within the console window (in text mode); then, connect to a specific domain controller with the user name and password specified.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cred = get-credential

C:\PS&gt;$conn = connect-QADService -service &#39;server.company.com&#39; -credential $cred                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Use a dialog box to request a user name and password; then, connect to a specific domain controller with those user name and password, and save the AdsiConnection object in a variable for later use.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Service &#39;server.domian.local:389&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Convert-QADAttributeValue
		</command:name>
		<maml:description>
			<maml:para>Convert attribute values of a directory object to the specified .NET type.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Convert</command:verb>
		<command:noun>QADAttributeValue</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to convert attribute values of directory objects returned by a cmdlet (for example, by a Get-QADUser cmdlet). You can convert:

 - Values of the byte[] type to the SecurityIdentifier or Guid type
 - Values of the IADsLargeInteger type to the Int64, DateTime,
   or TimeSpan type</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Convert-QADAttributeValue</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Input</maml:name>
				<maml:description>
					<maml:para>Specify the object representing the attribute value to convert. This parameter accepts pipeline input. This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OutputTypeName</maml:name>
				<maml:description>
					<maml:para>Specify the fully qualified name of the .NET type to convert the attribute value to. The assembly name and namespace indication can be omitted if the type is from the System namespace (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Input</maml:name>
			<maml:description>
				<maml:para>Specify the object representing the attribute value to convert. This parameter accepts pipeline input. This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OutputTypeName</maml:name>
			<maml:description>
				<maml:para>Specify the fully qualified name of the .NET type to convert the attribute value to. The assembly name and namespace indication can be omitted if the type is from the System namespace (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADuser &#39;MyDomain\JSmith&#39; | %{$_.DirectoryEntry.objectGuid} | convert-QADAttributeValue -outputTypeName &#39;Guid&#39; | Write-Host                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Convert the value of the objectGuid attribute to the Guid type, and display the value in the console window.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADuser &#39;MyDomain\JSmith&#39; | %{$_.DirectoryEntry.objectSid} | convert-QADAttributeValue -outputTypeName &#39;Security.Principal.SecurityIdentifier&#39; | Write-Host                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Convert the value of the objectSid attribute to the SecurityIdentifier type, and display the value in the console window.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADuser &#39;MyDomain\JSmith&#39; | %{$_.DirectoryEntry.lastLogon} | convert-QADAttributeValue -outputTypeName &#39;DateTime&#39; | Write-Host                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Convert the value of the lastLogon attribute to the DateTime type, and display the value in the console window.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -searchRoot &#39;mydomain.company.com/domain controllers&#39; | Select-Object Name,@{Name=&quot;Last Logon&quot;; Expression={%{ get-QADUser &#39;MyDomain\JSmith&#39; -Service $_.Name} | %{$_.DirectoryEntry.lastLogon} | convert-QADAttributeValue -outputTypeName &#39;DateTime&#39;}}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For each domain controller, retrieve the time that the user JSmith last logged on by using a given domain controller, and display the results in the console window.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Deprovision-QADUser
		</command:name>
		<maml:description>
			<maml:para>Request ActiveRoles to deprovision a user account. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Deprovision</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to deprovision a user account via Quest One ActiveRoles. Quest One ActiveRoles provides the ability to deprovision rather than delete or only disable user accounts. Deprovision refers to a set of actions being performed in order to revoke user access to resources. The deprovision operation on user objects triggers deprovision policies. Quest One ActiveRoles comes with a default policy to automate some commonly-used deprovisioning tasks, and allows the deprovision policies to be adjusted as needed.

This cmdlet originates a request to deprovision the user accounts specified. When processing the request, Quest One ActiveRoles performs all operations prescribed by the deprovision policies.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish the connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Deprovision-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to deprovision. This parameter can be omitted if you pipe into this cmdlet one or more objects returned by a Get- cmdlet, so as to have those objects identify the user accounts to deprovision.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ReportFile</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want to save a report on the deprovisioning results to a file in HTML or XML format. The parameter value must be a valid path to a file, including the file name. The cmdlet creates the file if necessary. Omit this parameter if you do not want to save the report in a file. Quest One ActiveRoles preserves the report data regardless of this parameter, so you always have the option to examine the deprovisioning results using the Quest One ActiveRoles console.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Xml</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want to save the report on the deprovisioning results in XML format. Omit this parameter if you want to save the report in HTML format.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to deprovision. This parameter can be omitted if you pipe into this cmdlet one or more objects returned by a Get- cmdlet, so as to have those objects identify the user accounts to deprovision.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ReportFile</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want to save a report on the deprovisioning results to a file in HTML or XML format. The parameter value must be a valid path to a file, including the file name. The cmdlet creates the file if necessary. Omit this parameter if you do not want to save the report in a file. Quest One ActiveRoles preserves the report data regardless of this parameter, so you always have the option to examine the deprovisioning results using the Quest One ActiveRoles console.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Xml</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want to save the report on the deprovisioning results in XML format. Omit this parameter if you want to save the report in HTML format.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
deprovision-QADUser &#39;MyDomain\JSmith&#39; -Proxy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available ActiveRoles Administration Service with the credentials of the locally logged on user and deprovision the user account identified by Domain\Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Service &#39;myserver.mydomain.lab&#39; -Proxy

C:\PS&gt;get-QADUser &#39;MyDomain\JSmith&#39; | deprovision-QADUser                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific Administration Service with the credentials of the locally logged on user, retrieve a user object using the get-QADUser cmdlet, and pipe the user object into the Deprovision-QADUser cmdlet to deprovision the user account represented by that object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Service &#39;myserver.mydomain.lab&#39; -Proxy

C:\PS&gt;get-QADUser &#39;MyDomain\JSmith&#39; | deprovision-QADUser -ReportFile &#39;C:\JSmith.html&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific Administration Service with the credentials of the locally logged on user, retrieve a user object using the get-QADUser cmdlet, and pipe the user object into the Deprovision-QADUser cmdlet to deprovision the user account represented by that object, with a report on the deprovisioning results being saved in a specific file in HTML format.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Service &#39;myserver.mydomain.lab&#39; -Proxy

C:\PS&gt;get-QADUser -SearchRoot &#39;mydomain.lab/retired&#39; | deprovision-QADUser -ReportFile {&#39;C:\DeprovisionReports\&#39; + $_.SamAccountName + &#39;.html&#39;}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific Administration Service with the credentials of the locally logged on user, and deprovision all user accounts found in a specific container, with a report on the deprovisioning results for each user account being saved in a separate file.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Disable a computer object in Active Directory Domain Services.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to disable a computer account in Active Directory.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-QADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to disable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to disable.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to disable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to disable.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
disable-QADComputer &#39;CN=LAB-SRV1,CN=Computers,DC=dom,DC=local&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Disable the computer account identified by its Distinguished Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -SearchRoot &#39;dom.local/labComputers&#39; | disable-QADComputer                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Disable all computer accounts in the container identified by its Canonical Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-QADDiagnosticLog
		</command:name>
		<maml:description>
			<maml:para>Turn off diagnostic logging in ActiveRoles Management Shell. Diagnostic logging is mainly intended to be used by support personnel for troubleshooting purposes.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>QADDiagnosticLog</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to turn off diagnostic logging that was turned on by using Enable-QADDiagnosticLog. Without the Global parameter, this cmdlet turns off diagnostic logging that was enabled only for the current session. Supply the Global parameter if you want to turn off diagnostic logging that was enabled for all sessions.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-QADDiagnosticLog</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Global</maml:name>
				<maml:description>
					<maml:para>Use this parameter to stop diagnostic logging that was earlier enabled with the use of the Global parameter.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Global</maml:name>
			<maml:description>
				<maml:para>Use this parameter to stop diagnostic logging that was earlier enabled with the use of the Global parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Disable-QADDiagnosticLog                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Turn off diagnostic logging that was earlier enabled for the current Management Shell session.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Disable-QADDiagnosticLog -Global                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Turn off diagnostic logging that was earlier enabled for all Management Shell sessions.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-QADUser
		</command:name>
		<maml:description>
			<maml:para>Disable a user account in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to disable a user account in Active Directory Domain Services or Active Directory Lightweight Directory Services.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to disable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to disable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
disable-QADUser &#39;MyDomain\JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user and disable the user account identified by Domain\Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
disable-QADUser &#39;&lt;DN of user account&gt;&#39; -Service &#39;server.domain.local:389&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and disable the AD LDS user account that is identified by DN.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disconnect-QADService
		</command:name>
		<maml:description>
			<maml:para>Close the connection, if any exists. A connection could be established by using the Connect-QADService cmdlet.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disconnect</command:verb>
		<command:noun>QADService</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Any connection established using the Connect-QADService cmdlet must be finally closed by executing the Disconnect-QADService cmdlet. The cmdlet closes the last open connection, if any.

This cmdlet takes the same optional connection parameters as the Connect-QADService cmdlet. If the -Connection parameter is present, the cmdlet closes both the last open connection and the connection specified by the value of that parameter. If no connection is currently open, the cmdlet attempts to establish a connection in accordance with the connection parameters specified, and then closes the connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disconnect-QADService</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Close the last open connection, if any.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
disconnect-QADService -connection $conn                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Close the last open connection and also close the connection defined by an AdsiConnection object that was earlier saved in the $conn variable.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Enable a disabled computer object in Active Directory Domain Services.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to re-enable a disabled computer account in Active Directory.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-QADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to enable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to enable.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to enable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to enable.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
enable-QADComputer &#39;CN=LAB-SRV1,CN=Computers,DC=dom,DC=local&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Enable the computer account identified by its Distinguished Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -SearchRoot &#39;dom.local/labComputers&#39; | enable-QADComputer                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Enable all computer accounts in the container identified by its Canonical Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-QADDiagnosticLog
		</command:name>
		<maml:description>
			<maml:para>Turn on diagnostic logging in ActiveRoles Management Shell. Diagnostic logging is mainly intended to be used by support personnel for troubleshooting purposes.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>QADDiagnosticLog</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to turn on diagnostic logging so as to have the ActiveRoles Management Shell cmdlets record diagnostic information to the file specified. When you use this cmdlet without the Global parameter, diagnostic logging is enabled only during the current session. If you want to keep diagnostic logging after you close and reopen Management Shell, use the Global parameter.

Note that the Global parameter does not have an effect on the current session if you have already enabled logging without the Global parameter. Similarly, when global logging is enabled, specifying a new log file by using this cmdlet without the Global parameter causes the current session diagnostic information to be redirected to the file specified.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-QADDiagnosticLog</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Specify the path and name of the log file to hold the diagnostic information.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Global</maml:name>
				<maml:description>
					<maml:para>Use this parameter to enable diagnostic logging for the current and future sessions. Without this parameter, diagnostic logging is enabled for the current session only.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Global</maml:name>
			<maml:description>
				<maml:para>Use this parameter to enable diagnostic logging for the current and future sessions. Without this parameter, diagnostic logging is enabled for the current session only.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Specify the path and name of the log file to hold the diagnostic information.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Enable-QADDiagnosticLog &#39;c:\temp\arsps.log&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Turn on diagnostic logging for the current Management Shell session, with the diagnostic information being recorded to the file c:\temp\arsps.log.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-QADUser
		</command:name>
		<maml:description>
			<maml:para>Enable a user account in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to re-enable a disabled user account in Active Directory Domain Services or Active Directory Lightweight Directory Services.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to enable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to enable.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
enable-QADUser &#39;MyDomain\JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user and enable the user account identified by Domain\Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
enable-QADUser &#39;&lt;DN of user account&gt;&#39; -Service &#39;server.domain.local:389&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and enable the AD LDS user account that is identified by DN.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Retrieve all computer objects in a domain or container that match the specified conditions.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search an Active Directory domain or container for computer objects that meet certain criteria, or to bind to a certain computer object by DN, SID, GUID, or Domain\Name. You can search by computer attributes or specify your search criteria by using an LDAP search filter. 

The output of the cmdlet is a collection of objects, with each object representing one of the computer objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the computer objects returned by this cmdlet.

The cmdlet takes a series of optional, attribute-specific parameters allowing you to search by computer attributes. The attribute-specific parameters have effect if SearchRoot is specified whereas Identity is not. If you specify SearchRoot only, then the cmdlet returns all computer objects found in the SearchRoot container.

You can use attribute-specific parameters to search for computer objects that have specific values of certain attributes. With more than one attribute-specific parameter supplied, the search conditions are combined by using the AND operator, so as to find the computer objects that meet all the specified conditions.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet searches for the attribute value specified by the attribute-specific parameter.

Each of the attribute-specific parameters accepts the * wildcard character in the parameter value to match zero or more characters (case-insensitive).

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADComputer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to find.

The cmdlet attempts to find the computer that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputerRole</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values: &#39;Member&#39; (to search for computers that are not domain controllers) or &#39;DomainController&#39; (to search for domain controllers only). If this parameter is omitted, the cmdlet searches for both domain controllers and computers that are not domain controllers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ComputerRole</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DnsName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;dNSHostName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Inactive</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve computer accounts that meet the default inactivity conditions. You can view or change the default inactivity conditions by using the Get-QADInactiveAccountsPolicy or Set-QADInactiveAccountsPolicy cmdlet, respectively. When considering whether an account is inactive, the cmdlet verifies each of these values:

 - The number of days that the account remains in the expired state
 - The number of days that the password of the account remains unchanged
 - The number of days that the account remains unused for logon

If any of these values exceeds a certain, default limit, then the account is considered inactive, and thus is retrieved by the Inactive parameter. The default limits can be overridden by supplying other account-inactivity related parameters, such as InactiveFor, ExpiredFor, NotLoggedOnFor, and PasswordNotChangedFor. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the Inactive parameter, the cmdlet searches for accounts that meet the default expiry-related or password-related inactivity condition, or have not been used to log on for 60 or more days.

To retrieve only those accounts that are not inactive, use the following syntax: -Inactive:$false</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InactiveFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve computer accounts that meet any of the following conditions:

 - The account remains in the expired state for at least the number of days specified by the parameter value
 - The account does not have its password changed for at least the number of days specified by the parameter value
 - The account has not been used to log on for at least the number of days specified by the parameter value

For example, the parameter value of 30 causes the cmdlet to search for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.

The value of this parameter overrides the default inactivity conditions, so the Inactive parameter has no effect when used together with this parameter. Similarly, the other account-inactivity related parameters such as ExpiredFor, NotLoggedOnFor and PasswordNotChangedFor override the corresponding conditions of this parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastKnownParent</maml:name>
				<maml:description>
					<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;location&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;managedBy&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotIndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotLoggedOnFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve computer accounts that have not been used to log on for at least the number of days specified by the parameter value. This parameter overrides the logon-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OSName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;operatingSystem&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OSServicePack</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;operatingSystemServicePack&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OSVersion</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;operatingSystemVersion&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotChangedFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve computer accounts whose password has not been changed for at least the number of days specified by the parameter value. This parameter overrides the password-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the PasswordNotChangedFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 60 or more days, or have not been used to log on for 30 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recycled</maml:name>
				<maml:description>
					<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecurityMask</maml:name>
				<maml:description>
					<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Owner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Group</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Dacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Sacl</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Tombstone</maml:name>
				<maml:description>
					<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally. if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComputerRole</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values: &#39;Member&#39; (to search for computers that are not domain controllers) or &#39;DomainController&#39; (to search for domain controllers only). If this parameter is omitted, the cmdlet searches for both domain controllers and computers that are not domain controllers.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ComputerRole</command:parameterValue>
			<dev:type>
				<maml:name>ComputerRole</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DnsName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;dNSHostName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to find.

The cmdlet attempts to find the computer that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inactive</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve computer accounts that meet the default inactivity conditions. You can view or change the default inactivity conditions by using the Get-QADInactiveAccountsPolicy or Set-QADInactiveAccountsPolicy cmdlet, respectively. When considering whether an account is inactive, the cmdlet verifies each of these values:

 - The number of days that the account remains in the expired state
 - The number of days that the password of the account remains unchanged
 - The number of days that the account remains unused for logon

If any of these values exceeds a certain, default limit, then the account is considered inactive, and thus is retrieved by the Inactive parameter. The default limits can be overridden by supplying other account-inactivity related parameters, such as InactiveFor, ExpiredFor, NotLoggedOnFor, and PasswordNotChangedFor. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the Inactive parameter, the cmdlet searches for accounts that meet the default expiry-related or password-related inactivity condition, or have not been used to log on for 60 or more days.

To retrieve only those accounts that are not inactive, use the following syntax: -Inactive:$false</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InactiveFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve computer accounts that meet any of the following conditions:

 - The account remains in the expired state for at least the number of days specified by the parameter value
 - The account does not have its password changed for at least the number of days specified by the parameter value
 - The account has not been used to log on for at least the number of days specified by the parameter value

For example, the parameter value of 30 causes the cmdlet to search for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.

The value of this parameter overrides the default inactivity conditions, so the Inactive parameter has no effect when used together with this parameter. Similarly, the other account-inactivity related parameters such as ExpiredFor, NotLoggedOnFor and PasswordNotChangedFor override the corresponding conditions of this parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastKnownParent</maml:name>
			<maml:description>
				<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;location&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;managedBy&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotIndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotLoggedOnFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve computer accounts that have not been used to log on for at least the number of days specified by the parameter value. This parameter overrides the logon-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OSName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;operatingSystem&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OSServicePack</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;operatingSystemServicePack&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OSVersion</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;operatingSystemVersion&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotChangedFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve computer accounts whose password has not been changed for at least the number of days specified by the parameter value. This parameter overrides the password-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the PasswordNotChangedFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 60 or more days, or have not been used to log on for 30 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recycled</maml:name>
			<maml:description>
				<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecurityMask</maml:name>
			<maml:description>
				<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecurityMasks</command:parameterValue>
			<dev:type>
				<maml:name>SecurityMasks</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Owner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Group</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Dacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Sacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tombstone</maml:name>
			<maml:description>
				<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally. if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer &#39;MyDomain\MyServer$&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Bind to a particular computer by Domain\Name, and display the computer&#39;s name and DN. In this example, the NetBIOS name of the domain is assumed to be &#39;MyDomain&#39; and the name of the computer is assumed to be &#39;MyServer&#39;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -SearchRoot &#39;company.com/computersOU&#39; -OSName &#39;*Vista*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find all computers that are located in a specific OU and run a particular version of the operating system, and list their names. The OU is identified by its canonical name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -computerRole &#39;DomainController&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find all domain controllers in your domain, and list their names and DNs.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADComputer | format-table -property computername, osname, osversion, osservicepack                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find all computers in your domain; for each computer found, display the pre-Windows 2000 computer name and operating system name, version, and service pack.

This command displays the computers in a table with four columns, &quot;ComputerName&quot;, &quot;OSName&quot;, &quot;OSVersion&quot; and &quot;OSServicePack. The command uses the Get-QADComputer cmdlet to get all of the computers. The pipeline operator (|) sends the results to the Format-Table cmdlet, which formats the output in a table. The Property parameter specifies the properties that appear in the table as columns. The name of the Property parameter is optional, so you can omit it (&quot;format-table computername, osname, osversion, osservicepack&quot;).

ComputerName, OSName, OSVersion and OSServicePack are just four of the properties of objects returned by the Get-QADComputer cmdlet. To see all of the properties, type &quot;get-qadcomputer | get-member&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;get-QADComputer &#39;company\computer$&#39; | ft computername, description

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain computer account by Domain\Name, display the computer name and description, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADComputer -SearchRoot &#39;company.com/ComputersOU&#39; -LdapFilter &#39;(description=a*)&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, search for computers in a specific container by using an LDAP search filter, and display the name and DN of each computer found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;get-QADComputer -SearchRoot &#39;company.com/ComputersOU&#39; -description &#39;&#39; | set-QADObject -description &#39;A description&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of a specific user, search a certain container to find all computers with empty description, set a description for each of those computers, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADDiagnosticLogStatus
		</command:name>
		<maml:description>
			<maml:para>Check to see if diagnostic logging is enabled or disabled in ActiveRoles Management Shell.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADDiagnosticLogStatus</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to view status information regarding diagnostic logging. The cmdlet output includes the following items:

  Local log: Enabled   Indicates that diagnostic logging for the current session was turned
                               on by using Enable-QADDiagnosticLog without the Global parameter.
                               The cmdlet also displays the path to the log file for the current
                               session (local log file). 

  Local log: Disabled  Indicates that diagnostic logging for the current session was not 
                               turned on by using Enable-QADDiagnosticLog without the Global
                               parameter. 

  Global log: Enabled  Indicates that diagnostic logging for the current and future sessions
                                was turned on by using Enable-QADDiagnosticLog with the Global
                                parameter. The cmdlet also displays the path to the global log file. 

  Global log: Disabled  Indicates that diagnostic logging for the future sessions was not
                                turned by using Enable-QADDiagnosticLog with the Global
                                parameter. 

  Active log: Path        Displays the path and name of the file that is currently used to store
                                diagnostic information. 

If both local log and global log are enabled, the local log option takes precedence and diagnostic information is recorded to the local rather than global log file.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADDiagnosticLogStatus                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Check whether diagnostic logging is turned on (enabled) or turned off (disabled).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADGroup
		</command:name>
		<maml:description>
			<maml:para>Retrieve all groups in a domain or container that match the specified conditions. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search an Active Directory domain or container for groups that meet certain search criteria, or to bind to a certain groups by DN, SID, GUID, or Domain\Name. You can search by group attributes or specify your search criteria by using an LDAP search filter.

The output of the cmdlet is a collection of objects, with each object representing one of the groups found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the groups returned by this cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADGroup</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group you want to find.

The cmdlet attempts to find the group that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;member&#39;). The cmdlet enumerates the distinguished name values of the attribute on the group specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The group to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;member&#39;, the cmdlet searches the collection of the objects that are members of the group defined by the SearchRoot parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ContainsIndirectMember</maml:name>
				<maml:description>
					<maml:para>Retrieve groups to which the object or objects specified by this parameter belong, whether directly or because of group nesting. The cmdlet returns a group if the object has direct or indirect membership in that group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ContainsMember</maml:name>
				<maml:description>
					<maml:para>Retrieve groups that hold the object or objects specified by this parameter. The cmdlet returns a group if the object is a direct member of that group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Dynamic</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those groups that are configured as Dynamic Groups in Quest One ActiveRoles. This parameter requires that the Proxy parameter be supplied, so as to establish a connection the ActiveRoles Administration Service.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Empty</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those groups that have no members (empty groups).

Note: A group is considered empty if it has the &quot;member&quot; attribute not set. So, this parameter can retrieve a group that has only those members for which the group is set as the primary group. An example is the Domain Users group, which normally is the primary group for any user account while having the &quot;member&quot; attribute not set.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>Specify the group scope of groups you want to find. Acceptable values are: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupType</maml:name>
				<maml:description>
					<maml:para>Specify the group type of groups you want to find. Acceptable values are: &#39;Security&#39;; &#39;Distribution&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Keywords</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;edsvaKeywords&#39; attribute. This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles. Parameter value is a string array that specifies one or more keywords to search for.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastKnownParent</maml:name>
				<maml:description>
					<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;managedBy&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user, group or contact that is specified in the &#39;managedBy&#39; attribute of the object to search for.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotContainsIndirectMember</maml:name>
				<maml:description>
					<maml:para>Retrieve groups to which the object or objects specified by this parameter do not belong directly or because of group nesting. The cmdlet returns a group if the object has neither direct nor indirect membership in that group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotContainsMember</maml:name>
				<maml:description>
					<maml:para>Retrieve groups that do not hold the object or objects specified by this parameter. The cmdlet returns a group if the object is not a direct member of that group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotIndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrimaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups that have any of the specified e-mail addresses.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Published</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;edsvaPublished&#39; attribute. When the attribute is set to $true, the group is published, which enables users to submit requests to join or leave that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the group publication status is stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recycled</maml:name>
				<maml:description>
					<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireManagerApproval</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. Parameter value ($true or $false) matches the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute value to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireSecondaryOwnerApproval</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. Parameter value ($true or $false) matches the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute value to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwner</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group that is specified in the &#39;edsvaSecondaryOwners&#39; attribute of the object to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecurityMask</maml:name>
				<maml:description>
					<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Owner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Group</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Dacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Sacl</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Tombstone</maml:name>
				<maml:description>
					<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;member&#39;). The cmdlet enumerates the distinguished name values of the attribute on the group specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The group to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;member&#39;, the cmdlet searches the collection of the objects that are members of the group defined by the SearchRoot parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ContainsIndirectMember</maml:name>
			<maml:description>
				<maml:para>Retrieve groups to which the object or objects specified by this parameter belong, whether directly or because of group nesting. The cmdlet returns a group if the object has direct or indirect membership in that group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ContainsMember</maml:name>
			<maml:description>
				<maml:para>Retrieve groups that hold the object or objects specified by this parameter. The cmdlet returns a group if the object is a direct member of that group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Dynamic</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those groups that are configured as Dynamic Groups in Quest One ActiveRoles. This parameter requires that the Proxy parameter be supplied, so as to establish a connection the ActiveRoles Administration Service.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Empty</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those groups that have no members (empty groups).

Note: A group is considered empty if it has the &quot;member&quot; attribute not set. So, this parameter can retrieve a group that has only those members for which the group is set as the primary group. An example is the Domain Users group, which normally is the primary group for any user account while having the &quot;member&quot; attribute not set.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>Specify the group scope of groups you want to find. Acceptable values are: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			<dev:type>
				<maml:name>GroupScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupType</maml:name>
			<maml:description>
				<maml:para>Specify the group type of groups you want to find. Acceptable values are: &#39;Security&#39;; &#39;Distribution&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			<dev:type>
				<maml:name>GroupType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group you want to find.

The cmdlet attempts to find the group that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Keywords</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;edsvaKeywords&#39; attribute. This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles. Parameter value is a string array that specifies one or more keywords to search for.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastKnownParent</maml:name>
			<maml:description>
				<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;managedBy&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user, group or contact that is specified in the &#39;managedBy&#39; attribute of the object to search for.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotContainsIndirectMember</maml:name>
			<maml:description>
				<maml:para>Retrieve groups to which the object or objects specified by this parameter do not belong directly or because of group nesting. The cmdlet returns a group if the object has neither direct nor indirect membership in that group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotContainsMember</maml:name>
			<maml:description>
				<maml:para>Retrieve groups that do not hold the object or objects specified by this parameter. The cmdlet returns a group if the object is not a direct member of that group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotIndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrimaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups that have any of the specified e-mail addresses.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Published</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;edsvaPublished&#39; attribute. When the attribute is set to $true, the group is published, which enables users to submit requests to join or leave that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the group publication status is stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recycled</maml:name>
			<maml:description>
				<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireManagerApproval</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. Parameter value ($true or $false) matches the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute value to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireSecondaryOwnerApproval</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. Parameter value ($true or $false) matches the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute value to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwner</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group that is specified in the &#39;edsvaSecondaryOwners&#39; attribute of the object to search for. This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mail-enabled (distribution) groups for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecurityMask</maml:name>
			<maml:description>
				<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecurityMasks</command:parameterValue>
			<dev:type>
				<maml:name>SecurityMasks</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Owner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Group</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Dacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Sacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tombstone</maml:name>
			<maml:description>
				<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
(get-QADGroup &#39;CN=Admins,OU=CompanyOU,DC=company,DC=com&#39;).DirectoryEntry.description                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific group by DN, and display the description of the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;(get-QADGroup -identity &#39;S-1-5-21-1279736177-1630491018-182859109-1305&#39;).DirectoryEntry.description

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain group by SID, display the description of the group, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroup -SearchRoot &#39;company.com/GroupsOU&#39; -LdapFilter &#39;(description=a*)&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, search for groups in a specific container by using an LDAP search filter, and display a list of the groups found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroup -SearchRoot &#39;company.com/GroupsOU&#39; -GroupType &#39;Distribution&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, find all distribution groups in a specific container, and display a list of the groups found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;get-QADGroup -SearchRoot &#39;company.com/GroupsOU&#39; -ObjectAttributes @{info=&#39;&#39;} | set-QADObject -ObjectAttributes @{info=&#39;A note&#39;} 

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of a specific user, search a certain container to find all groups with the empty Notes field, set a note for each of those groups, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroup -Service &#39;server.domain.local:389&#39; -SearchRoot &#39;&lt;DN of container&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, find all AD LDS groups in a specific container, and display a list of the groups found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroup -SearchRoot &#39;&lt;DN of container&gt;&#39; -ContainsIndirectMember &#39;domainName\userName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve groups from a particular container that have a particular user account as a direct or indirect member.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADProgressPolicy -ShowProgress $true -ProgressThreshold 2 | Out-Null

C:\PS&gt;Get-QADGroup -Activity &#39;Retrieving groups&#39; | Get-QADGroupMember -Activity &#39;Building list of group members&#39; | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Set the user preference for the progress bar appearance policy, to cause a progress bar to appear by default when a command takes longer than 2 seconds to finish; then, view progress of a command that retrieves domain groups, along with progress of a command that builds a list of members for each group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Retrieve the members of a group in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve the directory objects that are members of a certain group in Active Directory.

The output of the cmdlet is a collection of objects, with each object representing one of the directory objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the directory objects returned by this cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Disabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to retrieve only those accounts that are disabled.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to retrieve only those accounts that are enabled (not disabled).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Indirect</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the cmdlet to retrieve objects that belong to the specified group because of group nesting, in addition to objects that are direct members of the group. If this parameter is omitted, the cmdlet retrieves only those objects that are direct members of the group.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeepForeignSecurityPrincipals</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you do not want the cmdlet to resolve the retrieved foreign security principal objects by looking up the corresponding external security principals. Thus, when retrieving members of a group, the cmdlet may encounter a member represented by a foreign security principal object - an object in the forest of the group that represents a security principal (such as a user, computer, or group) that exists in a trusted domain located in a different forest. By default, the cmdlet attempts to look up that security principal based on the information held in the foreign security principal object, and, in case of a successful lookup, outputs the security principal data instead of the foreign security principal object data. The KeepForeignSecurityPrincipals parameter changes this behavior so that the cmdlet outputs the foreign security principal object data &quot;as is,&quot; without attempting to look up the corresponding (external) security principals.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria on the group memberships. Note that the search filter string is case-sensitive.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specify the type of directory objects to find. The cmdlet searches for objects that have one of the &#39;objectClass&#39; attribute values set to the Type parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to retrieve only those accounts that are disabled.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to retrieve only those accounts that are enabled (not disabled).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Indirect</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the cmdlet to retrieve objects that belong to the specified group because of group nesting, in addition to objects that are direct members of the group. If this parameter is omitted, the cmdlet retrieves only those objects that are direct members of the group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeepForeignSecurityPrincipals</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you do not want the cmdlet to resolve the retrieved foreign security principal objects by looking up the corresponding external security principals. Thus, when retrieving members of a group, the cmdlet may encounter a member represented by a foreign security principal object - an object in the forest of the group that represents a security principal (such as a user, computer, or group) that exists in a trusted domain located in a different forest. By default, the cmdlet attempts to look up that security principal based on the information held in the foreign security principal object, and, in case of a successful lookup, outputs the security principal data instead of the foreign security principal object data. The KeepForeignSecurityPrincipals parameter changes this behavior so that the cmdlet outputs the foreign security principal object data &quot;as is,&quot; without attempting to look up the corresponding (external) security principals.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria on the group memberships. Note that the search filter string is case-sensitive.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specify the type of directory objects to find. The cmdlet searches for objects that have one of the &#39;objectClass&#39; attribute values set to the Type parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroupMember &#39;company\administrators&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific group by Domain\Name, and display a list of members of the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADGroupMember &#39;&lt;DN of group&gt;&#39; -Service &#39;server.domain.local:389&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS group by DN, and display a list of members of the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADGroupMember &#39;domainName\groupName&#39; -Type &#39;user&#39; -Indirect                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve users that belong to a particular group (directly or because of group nesting).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADProgressPolicy -ShowProgress $true -ProgressThreshold 2 | Out-Null

C:\PS&gt;Get-QADGroup -Activity &#39;Retrieving groups&#39; | Get-QADGroupMember -Activity &#39;Building list of group members&#39; | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Set the user preference for the progress bar appearance policy, to cause a progress bar to appear by default when a command takes longer than 2 seconds to finish; then, view progress of a command that retrieves domain groups, along with progress of a command that builds a list of members for each group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADManagedObject
		</command:name>
		<maml:description>
			<maml:para>Retrieve objects for which a particular user, contact or group is the manager (primary owner) or a secondary owner.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADManagedObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>For a particular identity (user, group or contact), you can use this cmdlet to search an Active Directory domain or container for directory objects such as groups, computers or organizational units that:

 - Have the given identity designated as the manager in Active Directory
   (the identity is specified in the managedBy attribute of the object)

 - Have the given identity designated as a secondary owner in Quest One ActiveRoles
   (the identity is specified in the edsvaSecondaryOwners attribute of the object)

 - Have a group designated as the manager, with the given identity belonging
   to that group (so the identity inherits the manager role from the group)

 - Have a group designated as a secondary owner, with the given identity belonging
   to that group (so the identity inherits the secondary owner role from the group)

In Quest One ActiveRoles, the identity that is designated as the manager of an object is referred to as the primary owner of that object. The primary owner role may also be inherited from a group that is designated as the manager. The cmdlet allows you to retrieve the objects for which a particular identity holds the owner role, whether primary, secondary, or both. It is possible to specify whether you want the search results to include the objects for which the given identity inherits the owner role from a group.

By default, the cmdlet searches for only the objects that have the specified identity designated as the manager in Active Directory. You can broaden the search by using the ConsiderSecondaryOwnership or ConsiderInheritedOwnership parameter.

The output of the cmdlet is a collection of objects, with each object representing one of the directory objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the directory objects returned by this cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADManagedObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of a user, group or contact. The cmdlet searches for the objects for which the specified user, group or contact is the manager (primary owner) or a secondary owner.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConsiderInheritedOwnership</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to retrieve the objects for which the given identity inherits the owner role from a group that is assigned as an owner. Without this parameter, the cmdlet retrieves only the objects for which the identity itself is assigned as an owner (that is, specified in the &#39;managedBy&#39; or &#39;edsvaSecondaryOwners&#39; attribute of the object).

This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConsiderSecondaryOwnership</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to retrieve the objects for which the given identity is a manager (primary owner) or secondary owner. Without this parameter, the cmdlet retrieves only the objects for which that identity is a manager (primary owner).

This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name of objects you want to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specify the type of objects you want to find. The cmdlet searches for objects that have one of the objectClass attribute values set to the Type parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsiderInheritedOwnership</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to retrieve the objects for which the given identity inherits the owner role from a group that is assigned as an owner. Without this parameter, the cmdlet retrieves only the objects for which the identity itself is assigned as an owner (that is, specified in the &#39;managedBy&#39; or &#39;edsvaSecondaryOwners&#39; attribute of the object).

This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConsiderSecondaryOwnership</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to retrieve the objects for which the given identity is a manager (primary owner) or secondary owner. Without this parameter, the cmdlet retrieves only the objects for which that identity is a manager (primary owner).

This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of a user, group or contact. The cmdlet searches for the objects for which the specified user, group or contact is the manager (primary owner) or a secondary owner.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name of objects you want to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specify the type of objects you want to find. The cmdlet searches for objects that have one of the objectClass attribute values set to the Type parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADManagedObject &#39;domainName\userName&#39; -Type &#39;group&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the groups for which a given user is assigned as the manager.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADManagedObject &#39;domainName\userName&#39; -Type &#39;group&#39; -Proxy -ConsiderSecondaryOwnership                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the groups for which the specified user is assigned as the manager (primary owner) or as a secondary owner.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADManagedObject &#39;domainName\userName&#39; -Proxy -ConsiderInheritedOwnership                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the objects for which the specified user meets any of the following requirements:
 - The user is assigned as the manager of the object
 - The user belongs to any group that is assigned as
   the manager of the object</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADMemberOf
		</command:name>
		<maml:description>
			<maml:para>Retrieve all groups in a domain or container that match the specified conditions. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADMemberOf</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve the groups to which a particular object belongs in Active Directory. You can pass an object or one of its identity-related attributes to the Identity parameter and have the cmdlet return the object&#39;s groups that match the search conditions specified.

The output of the cmdlet is a collection of objects, with each object representing one of the groups found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADGroup, to make changes to the group objects returned by this cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted since a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADMemberOf</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to retrieve. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Indirect</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the cmdlet to retrieve groups to which the object specified by the Identity parameter belongs because of group nesting, in addition to groups of which the object is a direct member.

If this parameter is omitted, the cmdlet retrieves only those groups of which the object is a direct member. If this parameter is supplied, the cmdlet takes the immediate group membership list of the object and then also recursively expands each group in this list to determine its group memberships to arrive at a complete set of the groups.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to retrieve. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Indirect</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the cmdlet to retrieve groups to which the object specified by the Identity parameter belongs because of group nesting, in addition to groups of which the object is a direct member.

If this parameter is omitted, the cmdlet retrieves only those groups of which the object is a direct member. If this parameter is supplied, the cmdlet takes the immediate group membership list of the object and then also recursively expands each group in this list to determine its group memberships to arrive at a complete set of the groups.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADMemberOf &#39;domainName\userName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve groups of which a particular user is a direct member.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADMemberOf &#39;domainName\userName&#39; -Indirect -Name &#39;DL.Administration*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve groups whose names begin with DL.Administration and where a particular user has membership whether directly or because of group nesting.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADObject
		</command:name>
		<maml:description>
			<maml:para>Retrieve all directory objects in a domain or container that match the specified conditions. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search an Active Directory domain or container for directory objects that meet certain search criteria, or to bind to a certain object by DN, SID, GUID, UPN or Domain\Name. You can search by object attributes or specify your search criteria by using an LDAP search filter. 

The output of the cmdlet is a collection of objects, with each object representing one of the directory objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the directory objects returned by this cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADObject</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the directory object you want to find.

The cmdlet attempts to find the object that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastKnownParent</maml:name>
				<maml:description>
					<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name of objects you want to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotIndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrimaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients that have any of the specified e-mail addresses.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recycled</maml:name>
				<maml:description>
					<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResolveForeignSecurityPrincipals</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to resolve the retrieved foreign security principal objects by looking up the corresponding external security principals. Thus, when retrieving objects, the cmdlet may encounter a foreign security principal object - an object held in a domain within a given forest that represents a security principal (such as a user, computer, or group) that exists in a trusted domain located in a different forest. By default, the cmdlet outputs the foreign security principal object data &quot;as is,&quot; without attempting to look up the corresponding (external) security principal based on the data found in the foreign security principal object. With the ResolveForeignSecurityPrincipals parameter, once the cmdlet has encountered a foreign security principal object, it attempts to look up the external security principal represented by the foreign security principal object, and, in case of a successful lookup, outputs the security principal data instead of the foreign security principal object data.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecurityMask</maml:name>
				<maml:description>
					<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Owner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Group</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Dacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Sacl</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Tombstone</maml:name>
				<maml:description>
					<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specify the type of objects you want to find. The cmdlet searches for objects that have one of the objectClass attribute values set to the Type parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the directory object you want to find.

The cmdlet attempts to find the object that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastKnownParent</maml:name>
			<maml:description>
				<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name of objects you want to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotIndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrimaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients that have any of the specified e-mail addresses.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recycled</maml:name>
			<maml:description>
				<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResolveForeignSecurityPrincipals</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to resolve the retrieved foreign security principal objects by looking up the corresponding external security principals. Thus, when retrieving objects, the cmdlet may encounter a foreign security principal object - an object held in a domain within a given forest that represents a security principal (such as a user, computer, or group) that exists in a trusted domain located in a different forest. By default, the cmdlet outputs the foreign security principal object data &quot;as is,&quot; without attempting to look up the corresponding (external) security principal based on the data found in the foreign security principal object. With the ResolveForeignSecurityPrincipals parameter, once the cmdlet has encountered a foreign security principal object, it attempts to look up the external security principal represented by the foreign security principal object, and, in case of a successful lookup, outputs the security principal data instead of the foreign security principal object data.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange recipients for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecurityMask</maml:name>
			<maml:description>
				<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecurityMasks</command:parameterValue>
			<dev:type>
				<maml:name>SecurityMasks</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Owner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Group</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Dacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Sacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tombstone</maml:name>
			<maml:description>
				<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specify the type of objects you want to find. The cmdlet searches for objects that have one of the objectClass attribute values set to the Type parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
(get-QADObject &#39;CN=John Smith,OU=CompanyOU,DC=company,DC=com&#39;).DirectoryEntry.description                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific object by DN, and display the description of the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;(get-QADObject -identity &#39;S-1-5-21-1279736177-1630491018-182859109-1305&#39;).DirectoryEntry.description

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain object by SID, display the description of the object, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADObject -SearchRoot &#39;company.com/UsersOU&#39; -LdapFilter &#39;(description=a*)&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, search for objects in a specific container by using an LDAP search filter, and display a list of the objects found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADObject -SearchRoot &#39;company.com/ComputersOU&#39; -Type Computer                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, find all computer objects in a specific container, and display a list of the computer objects found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;get-QADObject -SearchRoot &#39;company.com/GroupsOU&#39; -Type Group -ObjectAttributes @{info=&#39;&#39;} | set-QADObject -ObjectAttributes @{info=&#39;A note&#39;} 

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of a specific user, search a certain container to find all groups with the empty Notes field, set a note for each of those groups, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject -Type &#39;organizationalUnit&#39; -IncludeAllProperties -ReturnPropertyNamesOnly | ForEach-Object {$_} | Sort-Object                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the names of all properties of organizationalUnit objects. Sort the list by property name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADObject -Service &#39;server.domain.local:389&#39; -SearchRoot &#39;&lt;DN of container&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, find all AD LDS objects in a specific container, and display a list of the objects found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject -Tombstone -LastChangedOn (get-date)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all objects that were deleted on the current date.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject -ResolveForeignSecurityPrincipals -Type foreignSecurityPrincipal                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all foreign security principal objects from the current domain, replacing each one, if possible, with the corresponding external security principal data in the output stream.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADObjectSecurity
		</command:name>
		<maml:description>
			<maml:para>Retrieve security information, such as the owner information or the security descriptor in a string format, from a directory object or objects.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADObjectSecurity</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve security information from an object in the directory (directory object). Thus, you can get an object representing the owner of a given directory object. You can also have this cmdlet return the security descriptor of a directory object in a string format defined by the security descriptor definition language (SDDL).

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADObjectSecurity</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will retrieve information from the security descriptor of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Owner</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to return an object that represents the owner of the given directory object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-QADObjectSecurity</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will retrieve information from the security descriptor of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Sddl</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to return the given directory object&#39;s security descriptor in a string format. The string format is defined by the security descriptor definition language (SDDL). You can use the string format to store or transmit the security descriptor. For a description of the string format, see the topic Security Descriptor Definition Language in the MSDN Library at http://msdn.microsoft.com</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will retrieve information from the security descriptor of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Owner</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to return an object that represents the owner of the given directory object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Sddl</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to return the given directory object&#39;s security descriptor in a string format. The string format is defined by the security descriptor definition language (SDDL). You can use the string format to store or transmit the security descriptor. For a description of the string format, see the topic Security Descriptor Definition Language in the MSDN Library at http://msdn.microsoft.com</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObjectSecurity &#39;domainName\groupName&#39; -Owner                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Get the object that represents the owner of a given group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObjectSecurity &#39;DistinguishedNameOfTheObject&#39; -SDDL                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given directory object, list the security descriptor in a string format.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADComputer -SearchRoot &#39;dom.lab.local/Computers&#39; -SecurityMask &#39;Owner&#39; | ForEach-Object {$computer=$_; Get-QADObjectSecurity $_ -Owner | Select-Object @{Name=&#39;Computer&#39;; Expression={$computer.DN}}, @{Name=&#39;Owner&#39;; Expression={$_.DN}}}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For every computer object held in the Computers container in domain dom.lab.local, list the distinguished name of the owner of the computer object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADPasswordSettingsObject
		</command:name>
		<maml:description>
			<maml:para>Retrieve Password Settings objects that match the specified conditions. Active Directory version of Windows Server 2008 or later is required.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADPasswordSettingsObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search an Active Directory domain or container for Password Settings objects that meet certain search criteria, or to bind to a certain Password Settings object by DN or GUID. You can search by object attributes or specify your search criteria by using an LDAP search filter.

The output of the cmdlet is a collection of objects, with each object representing one of the objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the Password Settings objects returned by this cmdlet.

The cmdlet takes a series of attribute-specific parameters allowing you to search by object attributes. The attribute-specific parameters have effect if SearchRoot is specified whereas Identity is not. If you specify SearchRoot only, then the cmdlet returns all Password Settings objects found in the SearchRoot container.

You can use attribute-specific parameters to search for objects that have specific values of certain attributes. Thus, to find all Password Settings objects that have the password settings precedence set to 1, you may add the following on the command line: &quot;-Precedence 1&quot;. To search for Password Settings objects that have a certain attribute not set specify &#39;&#39; (empty string) as the parameter value.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet searches for the attribute value specified by the attribute-specific parameter.

With more than one attribute-specific parameter supplied, the search conditions are combined by using the AND operator, so as to find the objects that meet all the specified conditions.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADPasswordSettingsObject</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, canonical name, or GUID of the Password Settings object you want to find.

The cmdlet attempts to find the object that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply this parameter on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;msDS-PSOAppliesTo&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;msDS-PSOAppliesTo&#39;, the cmdlet searches the collection of the users and security groups to which the SearchRoot object is applied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastKnownParent</maml:name>
				<maml:description>
					<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>Specify the lockout duration setting of the objects to find (search by the &#39;msDS-LockoutDuration&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TimeSpanAndMinutesParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>Specify the lockout threshold setting of the objects to find (search by the &#39;msDS-LockoutThreshold&#39; attribute).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaximumPasswordAge</maml:name>
				<maml:description>
					<maml:para>Specify the Maximum Password Age setting of the objects to find (search by the &#39;msDS-MaximumPasswordAge&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TimeSpanAndDaysParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumPasswordAge</maml:name>
				<maml:description>
					<maml:para>Specify the Minimum Password Age setting of the objects to find (search by the &#39;msDS-MinimumPasswordAge&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TimeSpanAndDaysParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumPasswordLength</maml:name>
				<maml:description>
					<maml:para>Specify the Minimum Password Length setting of the objects to find (search by the &#39;msDS-MinimumPasswordLength&#39; attribute).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name of objects you want to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotIndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to find the objects that enable or disable the password complexity requirements for user accounts (search by the &#39;msDS-PasswordComplexityEnabled&#39; attribute).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryLength</maml:name>
				<maml:description>
					<maml:para>Specify the Password History Length setting of the objects to find (search by the &#39;msDS-PasswordHistoryLength&#39; attribute).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>Specify the password settings precedence of the objects to find (search by the &#39;msDS-PasswordSettingsPrecedence&#39; attribute).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recycled</maml:name>
				<maml:description>
					<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResetLockoutCounterAfter</maml:name>
				<maml:description>
					<maml:para>Specify the Observation Window setting of the objects to find (search by the &#39;msDS-LockoutObservationWindow&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TimeSpanAndMinutesParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to find the objects that enable or disable password reversible encryption for user accounts (search by the &#39;msDS-PasswordReversibleEncryptionEnabled&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecurityMask</maml:name>
				<maml:description>
					<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Owner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Group</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Dacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Sacl</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Tombstone</maml:name>
				<maml:description>
					<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;msDS-PSOAppliesTo&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;msDS-PSOAppliesTo&#39;, the cmdlet searches the collection of the users and security groups to which the SearchRoot object is applied.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, canonical name, or GUID of the Password Settings object you want to find.

The cmdlet attempts to find the object that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply this parameter on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastKnownParent</maml:name>
			<maml:description>
				<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>Specify the lockout duration setting of the objects to find (search by the &#39;msDS-LockoutDuration&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TimeSpanAndMinutesParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndMinutesParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>Specify the lockout threshold setting of the objects to find (search by the &#39;msDS-LockoutThreshold&#39; attribute).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaximumPasswordAge</maml:name>
			<maml:description>
				<maml:para>Specify the Maximum Password Age setting of the objects to find (search by the &#39;msDS-MaximumPasswordAge&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TimeSpanAndDaysParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndDaysParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumPasswordAge</maml:name>
			<maml:description>
				<maml:para>Specify the Minimum Password Age setting of the objects to find (search by the &#39;msDS-MinimumPasswordAge&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TimeSpanAndDaysParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndDaysParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumPasswordLength</maml:name>
			<maml:description>
				<maml:para>Specify the Minimum Password Length setting of the objects to find (search by the &#39;msDS-MinimumPasswordLength&#39; attribute).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name of objects you want to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotIndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to find the objects that enable or disable the password complexity requirements for user accounts (search by the &#39;msDS-PasswordComplexityEnabled&#39; attribute).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryLength</maml:name>
			<maml:description>
				<maml:para>Specify the Password History Length setting of the objects to find (search by the &#39;msDS-PasswordHistoryLength&#39; attribute).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>Specify the password settings precedence of the objects to find (search by the &#39;msDS-PasswordSettingsPrecedence&#39; attribute).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Int32[]</command:parameterValue>
			<dev:type>
				<maml:name>Int32[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recycled</maml:name>
			<maml:description>
				<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResetLockoutCounterAfter</maml:name>
			<maml:description>
				<maml:para>Specify the Observation Window setting of the objects to find (search by the &#39;msDS-LockoutObservationWindow&#39; attribute). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TimeSpanAndMinutesParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndMinutesParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to find the objects that enable or disable password reversible encryption for user accounts (search by the &#39;msDS-PasswordReversibleEncryptionEnabled&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecurityMask</maml:name>
			<maml:description>
				<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecurityMasks</command:parameterValue>
			<dev:type>
				<maml:name>SecurityMasks</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Owner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Group</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Dacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Sacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tombstone</maml:name>
			<maml:description>
				<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingsObject -Name &#39;myPso1&#39; | Format-List                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find a Password Settings object by name, and display properties of the object found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingsObject -IncludedProperties &#39;msDS-PSOAppliesTo&#39; | Format-Table Name, &#39;msDS-PSOAppliesTo&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find all Password Settings objects in your domain, and, for each object found, list the users and groups that the object is applied to.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser &#39;john smith&#39; -DontUseDefaultIncludedProperties -IncludedProperties &#39;msDS-PSOApplied&#39; | Format-Table &#39;msDS-PSOApplied&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Query on the &#39;msDS-PSOApplied&#39; attribute to retrieve and display the distinguished names of the Password Settings objects that are (explicitly) applied to the user object specified.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$psos = (Get-QADUser &#39;john smith&#39; -DontUseDefaultIncludedProperties -IncludedProperties &#39;msDS-PSOApplied&#39;).&#39;msDS-PSOApplied&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Query on the &#39;msDS-PSOApplied&#39; attribute to retrieve the distinguished names of the Password Settings objects that are (explicitly) applied to the user object specified, and store the names in a variable named $psos.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser &#39;john smith&#39; -DontUseDefaultIncludedProperties -IncludedProperties &#39;msDS-ResultantPso&#39; | Format-Table &#39;msDS-ResultantPso&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Query on the &#39;msDS-ResultantPso&#39; attribute to retrieve the distinguished name of the PSO that ultimately applies to the user specified (based on the RSoP calculation rules). If there is no PSO that applies to the user, either directly or by virtue of group membership, the query returns NULL.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADPasswordSettingsObjectAppliesTo
		</command:name>
		<maml:description>
			<maml:para>Retrieve objects to which a particular Password Settings object is applied. Active Directory version of Windows Server 2008 or later is required.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADPasswordSettingsObjectAppliesTo</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve users or groups to which a particular Password Settings object is applied. The cmdlet searches the &#39;msDS-PSOAppliesTo&#39; attribute of the Password Settings object (supplied through the Identity parameter) for objects that meet the search conditions specified.

The output of the cmdlet is a collection of objects, with each object representing one of the directory objects found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADObject, to make changes to the directory objects found by this cmdlet.

The cmdlet takes a series of attribute-specific parameters allowing you to search by object attributes. The attribute-specific parameters have effect if SearchRoot is specified whereas Identity is not. If you specify SearchRoot only, then the cmdlet returns all Password Settings objects found in the SearchRoot container.

You can use attribute-specific parameters to search for objects that have specific values of certain attributes. Thus, to find all Password Settings objects that have the password settings precedence set to 1, you may add the following on the command line: &quot;-Precedence 1&quot;. To search for Password Settings objects that have a certain attribute not set specify &#39;&#39; (empty string) as the parameter value.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet searches for the attribute value specified by the attribute-specific parameter.

With more than one attribute-specific parameter supplied, the search conditions are combined by using the AND operator, so as to find the objects that meet all the specified conditions.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADPasswordSettingsObjectAppliesTo</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object you want the cmdlet to act upon. The cmdlet makes changes to, or otherwise manages, the object identified by this parameter value. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name of objects you want to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specify the type of directory objects to find. The cmdlet searches for objects that have one of the &#39;objectClass&#39; attribute values set to the Type parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object you want the cmdlet to act upon. The cmdlet makes changes to, or otherwise manages, the object identified by this parameter value. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name of objects you want to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specify the type of directory objects to find. The cmdlet searches for objects that have one of the &#39;objectClass&#39; attribute values set to the Type parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingsObjectAppliesTo &#39;MyPSO&#39; -Type &#39;Group&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all groups affected by the Password Settings object named MyPSO (the groups to which the Password Settings object applies).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingObjectAppliesTo &#39;MyPSO&#39; -Description &#39;*Administration*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve users and groups affected by the MyPSO Password Settings object that contains the word Administration somewhere in the Description attribute.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADPermission
		</command:name>
		<maml:description>
			<maml:para>Retrieve access control entries (ACEs) that meet the conditions you want. Every object returned by this cmdlet represents an access control entry (ACE) in the discretionary access control list (DACL) of a certain directory object.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADPermission</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve access control entries (ACEs) from the discretionary access control list (DACL) of a given object or objects in the directory (directory objects).

The directory objects can be specified using the Identity parameter. Another option is to use pipelining: pass the output of the appropriate Get-QAD cmdlet to this cmdlet, with the -SecurityMask Dacl parameter supplied for the Get- cmdlet.

The cmdlet returns the objects representing the ACEs that meet the conditions you define using parameters of the cmdlet. You can use pipelining to pass the objects returned by this cmdlet to another cmdlet. For example, you can pass them to the Remove-QADPermission cmdlet in order to delete the respective ACEs from the DACL.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADPermission</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will retrieve access control entries (ACEs) from the discretionary access control list (DACL) of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Account</maml:name>
				<maml:description>
					<maml:para>Supply the identity (such as name, distinguished name, domain\name, SID, etc.) of a security principal (user, group, computer account, enc.). The cmdlet will retrieve ACEs that determine access rights of that account on the directory object specified. You can supply identities of multiple accounts.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Allow</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that allow access to the directory object specified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ApplyTo</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that have a certain inheritance type set. Valid parameter values are:

 &#39;ThisObjectOnly&#39; - Indicates no inheritance. The ACE information is only used on the object
                    on which the ACE is set.
                    ACE information is not inherited by any descendents of the object.

 &#39;All&#39; - Indicates inheritance that includes the object on which the ACE is set,
         the object&#39;s immediate children, and the descendents of the object&#39;s children.

 &#39;ChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children
                  and the descendants of the object&#39;s children, but not the object itself.

 &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself
                                        and its immediate children. 
                                        It does not include the descendents of its children.

 &#39;ImmediateChildObjectsOnly&#39; - Indicates inheritance that includes the object&#39;s immediate children only,
                               not the object itself or the descendents of its children.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ArsSecurityInheritance[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ApplyToType</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that can be inherited by objects of a specified class. Property value is the LDAP display name of the classSchema object for the object class you want. (This parameter causes the cmdlet to search by the InheritedObjectType setting on the ACEs.)

You can specify multiple classes, separating the name of the classes by commas. If you do so, the cmdlet retrieves ACEs that can be inherited by objects of any of the classes specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChildType</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that control the right to create or delete child objects of a specified class. Parameter value is the LDAP display name of the classSchema object for the child object&#39;s class. (This parameter causes the cmdlet to search by the ObjectType setting on the ACEs).

You can specify multiple classes, separating the names of the classes by commas. If you do so, the cmdlet retrieves ACEs that control the right to create or delete child objects of any of the classes specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Deny</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that deny access to the directory object specified.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExtendedRight</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that determine the specified extended rights on the directory object. Specify the names of the extended rights you want, separating names by commas. For a list of possible extended rights, see the topic &quot;Extended Rights&quot; in the MSDN Library at http://msdn.microsoft.com. For more information about extended rights, see the topic &quot;Control Access Rights&quot; in the MSDN Library.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Inherited</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that come from security descriptors of the ancestors of the directory object (ACEs that are inherited from the parent container object).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Property</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that determine access to the specified properties of the directory object. Specify the LDAP display names of the properties you want, separating names by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PropertySet</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that determine access to the specified property sets of the directory object. Specify the names of the property sets you want, separating names by commas. For a list of possible property sets, see the topic &quot;Property Sets&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Rights</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that have certain access rights set.Valid parameter values are (for descriptions of these access rights see the topic &quot;ActiveDirectoryRights Enumeration&quot; in the MSDN Library at http://msdn.microsoft.com):

 &#39;Delete&#39;
 &#39;ReadControl&#39;
 &#39;WriteDacl&#39;
 &#39;WriteOwner&#39;
 &#39;Synchronize&#39; 
 &#39;AccessSystemSecurity&#39;
 &#39;GenericRead&#39;
 &#39;GenericWrite&#39;
 &#39;GenericExecute&#39; 
 &#39;GenericAll&#39;
 &#39;CreateChild&#39;
 &#39;DeleteChild&#39;
 &#39;ListChildren&#39;
 &#39;Self&#39;
 &#39;ReadProperty&#39;
 &#39;WriteProperty&#39;
 &#39;DeleteTree&#39;
 &#39;ListObject&#39;
 &#39;ExtendedRight&#39;

Parameter value can be any combination of the listed values, separated by commas. For example, the parameter value of &#39;ReadProperty,WriteProperty&#39; causes the cmdlet to retrieve ACEs that have both the ReadProperty and WriteProperty access rights set.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >CreateChild</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DeleteChild</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ListChildren</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Self</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ReadProperty</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteProperty</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DeleteTree</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ListObject</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ExtendedRight</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Delete</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >ReadControl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericExecute</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericWrite</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericRead</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteDacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >WriteOwner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >GenericAll</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Synchronize</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >AccessSystemSecurity</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SchemaDefault</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that came from the default security descriptor defined in the classSchema object for the directory object&#39;s class.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseExtendedMatch</maml:name>
				<maml:description>
					<maml:para>Retrieve not only ACEs with the specified access rights setting but also ACEs with other access rights settings that effectively give the same level of access as the rights setting specified.

For example, the -Rights &#39;ReadProperty&#39; parameter alone causes the cmdlet to retrieve only ACEs that have the ReadProperty access right set, whereas the combination of parameters such as -Rights &#39;ReadProperty&#39; -UseExtendedMatch also retrieves ACEs that have the  GenericRead or GeneriAll access right set.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseTokenGroups</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that apply not only to the specified account (SID) itself but also to any of the groups to which the account belongs whether directly or because of group nesting.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ValidatedWrite</maml:name>
				<maml:description>
					<maml:para>Retrieve ACEs that determine the specified validated writes on the directory object. Specify the names of the validated writes you want, separating names by commas. For a list of possible validated writes, see the topic &quot;Validated Writes&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Account</maml:name>
			<maml:description>
				<maml:para>Supply the identity (such as name, distinguished name, domain\name, SID, etc.) of a security principal (user, group, computer account, enc.). The cmdlet will retrieve ACEs that determine access rights of that account on the directory object specified. You can supply identities of multiple accounts.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Allow</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that allow access to the directory object specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApplyTo</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that have a certain inheritance type set. Valid parameter values are:

 &#39;ThisObjectOnly&#39; - Indicates no inheritance. The ACE information is only used on the object
                    on which the ACE is set.
                    ACE information is not inherited by any descendents of the object.

 &#39;All&#39; - Indicates inheritance that includes the object on which the ACE is set,
         the object&#39;s immediate children, and the descendents of the object&#39;s children.

 &#39;ChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children
                  and the descendants of the object&#39;s children, but not the object itself.

 &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself
                                        and its immediate children. 
                                        It does not include the descendents of its children.

 &#39;ImmediateChildObjectsOnly&#39; - Indicates inheritance that includes the object&#39;s immediate children only,
                               not the object itself or the descendents of its children.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ArsSecurityInheritance[]</command:parameterValue>
			<dev:type>
				<maml:name>ArsSecurityInheritance[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApplyToType</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that can be inherited by objects of a specified class. Property value is the LDAP display name of the classSchema object for the object class you want. (This parameter causes the cmdlet to search by the InheritedObjectType setting on the ACEs.)

You can specify multiple classes, separating the name of the classes by commas. If you do so, the cmdlet retrieves ACEs that can be inherited by objects of any of the classes specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChildType</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that control the right to create or delete child objects of a specified class. Parameter value is the LDAP display name of the classSchema object for the child object&#39;s class. (This parameter causes the cmdlet to search by the ObjectType setting on the ACEs).

You can specify multiple classes, separating the names of the classes by commas. If you do so, the cmdlet retrieves ACEs that control the right to create or delete child objects of any of the classes specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Deny</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that deny access to the directory object specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExtendedRight</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that determine the specified extended rights on the directory object. Specify the names of the extended rights you want, separating names by commas. For a list of possible extended rights, see the topic &quot;Extended Rights&quot; in the MSDN Library at http://msdn.microsoft.com. For more information about extended rights, see the topic &quot;Control Access Rights&quot; in the MSDN Library.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will retrieve access control entries (ACEs) from the discretionary access control list (DACL) of that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inherited</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that come from security descriptors of the ancestors of the directory object (ACEs that are inherited from the parent container object).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Property</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that determine access to the specified properties of the directory object. Specify the LDAP display names of the properties you want, separating names by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PropertySet</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that determine access to the specified property sets of the directory object. Specify the names of the property sets you want, separating names by commas. For a list of possible property sets, see the topic &quot;Property Sets&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Rights</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that have certain access rights set.Valid parameter values are (for descriptions of these access rights see the topic &quot;ActiveDirectoryRights Enumeration&quot; in the MSDN Library at http://msdn.microsoft.com):

 &#39;Delete&#39;
 &#39;ReadControl&#39;
 &#39;WriteDacl&#39;
 &#39;WriteOwner&#39;
 &#39;Synchronize&#39; 
 &#39;AccessSystemSecurity&#39;
 &#39;GenericRead&#39;
 &#39;GenericWrite&#39;
 &#39;GenericExecute&#39; 
 &#39;GenericAll&#39;
 &#39;CreateChild&#39;
 &#39;DeleteChild&#39;
 &#39;ListChildren&#39;
 &#39;Self&#39;
 &#39;ReadProperty&#39;
 &#39;WriteProperty&#39;
 &#39;DeleteTree&#39;
 &#39;ListObject&#39;
 &#39;ExtendedRight&#39;

Parameter value can be any combination of the listed values, separated by commas. For example, the parameter value of &#39;ReadProperty,WriteProperty&#39; causes the cmdlet to retrieve ACEs that have both the ReadProperty and WriteProperty access rights set.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ActiveDirectoryRights</command:parameterValue>
			<dev:type>
				<maml:name>ActiveDirectoryRights</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>CreateChild</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DeleteChild</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ListChildren</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Self</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ReadProperty</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteProperty</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DeleteTree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ListObject</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ExtendedRight</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Delete</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ReadControl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericExecute</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericWrite</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericRead</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteDacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>WriteOwner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>GenericAll</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Synchronize</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>AccessSystemSecurity</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SchemaDefault</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that came from the default security descriptor defined in the classSchema object for the directory object&#39;s class.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseExtendedMatch</maml:name>
			<maml:description>
				<maml:para>Retrieve not only ACEs with the specified access rights setting but also ACEs with other access rights settings that effectively give the same level of access as the rights setting specified.

For example, the -Rights &#39;ReadProperty&#39; parameter alone causes the cmdlet to retrieve only ACEs that have the ReadProperty access right set, whereas the combination of parameters such as -Rights &#39;ReadProperty&#39; -UseExtendedMatch also retrieves ACEs that have the  GenericRead or GeneriAll access right set.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseTokenGroups</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that apply not only to the specified account (SID) itself but also to any of the groups to which the account belongs whether directly or because of group nesting.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ValidatedWrite</maml:name>
			<maml:description>
				<maml:para>Retrieve ACEs that determine the specified validated writes on the directory object. Specify the names of the validated writes you want, separating names by commas. For a list of possible validated writes, see the topic &quot;Validated Writes&quot; in the MSDN Library at http://msdn.microsoft.com.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &#39;DistinguishedNameOfTheObject&#39; -SecurityMask Dacl | Get-QADPermission                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the ACEs that are explicitly set on a given object (the ACEs that are neither inherited from the parent container nor received from the default security descriptor of the respective classSchema object).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &#39;DistinguishedNameOfTheObject&#39; -SecurityMask Dacl | Get-QADPermission -Inherited -SchemaDefault                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all ACEs from the DACL of a given object (including the ACEs that are inherited from the parent container or received from the default security descriptor of the respective classSchema object).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &#39;DistinguishedNameOfTheObject&#39; -SecurityMask Dacl | Get-QADPermission -Account (&#39;domainName\groupName1&#39;,&#39;domainName\groupName2&#39;)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the ACEs on a given object that have any of the specified groups set as the trustee.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &#39;DistinguishedNameOfTheObject&#39; -SecurityMask Dacl | Get-QADPermission -Account &#39;domainName\userName&#39; -UseTokenGroups                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the ACEs on a given object that have the trustee set either to the specified user account or to any of the groups to which the user account belongs (whether directly or because of group nesting).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &#39;DistinguishedNameOfTheObject&#39; -SecurityMask Dacl | Get-QADPermission -Rights &#39;ReadProperty&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the ACEs on a given object that determine Read access to properties of the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser &#39;domain\user&#39; -SecurityMask Dacl | Get-QADPermission -Rights &#39;WriteProperty&#39; -Property (&#39;sAMAccountName&#39;,&#39;name&#39;)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the ACEs on a given user account that are configured with the WriteProperty access right for the &#39;sAMAccountName&#39; or &#39;name&#39; properties.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser &#39;domain\user&#39; -SecurityMask Dacl | Get-QADPermission -Rights &#39;WriteProperty&#39; -UseExtendedMatch -Inherited -SchemaDefault -Allow -Property (&#39;sAMAccountName&#39;,&#39;name&#39;)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the ACEs that allow write access to the &#39;sAMAccountName&#39; or &#39;name&#39; properties of a given user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPermission &#39;DistinguishedNameOfSourceObject&#39; | Add-QADPermission &#39;DistinguishedNameOfDestinationObject&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Copy the ACEs that are configured on a given directory object (not including the inherited ACEs or the schema default ACEs) to another directory object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPermission &#39;DistinguishedNameOfObject&#39; -Deny | Remove-QADPermission                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Delete all the deny-type ACEs that are configured on a given directory object (not including the inherited ACEs or the schema default ACEs).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADPSSnapinSettings
		</command:name>
		<maml:description>
			<maml:para>View default settings that apply to all cmdlets of this PowerShell snap-in.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADPSSnapinSettings</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>You can use this cmdlet to view some default settings that have effect within this PowerShell snap-in on any cmdlet where those settings are applicable. To change default settings, use the Set-QADPSSnapinSettings cmdlet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADPSSnapinSettings</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return a list of the attributes that are excluded from processing by the UseDefaultExcludedProperties parameter on any particular cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForAdObject</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return the default list of the object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for objects other than a User, Group, Computer, or Password Settings object.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForComputerObject</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return the default list of the Computer object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Computer objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForGroupObject</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return the default list of the Group object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Group objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForPasswordSettingsObject</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return the default list of the Password Settings object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Password Settings objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForUserObject</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return the default list of the User object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for User objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultPageSize</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line to view the default value of the -PageSize parameter that is used by the Get- cmdlets. This page size value is used if the -PageSize parameter is omitted.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultPropertiesExcludedFromNonBaseSearch</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return a list of the attributes that are not retrieved from the directory and stored in the local memory cache by any particular Get- cmdlet during a search with the search scope other than &#39;Base&#39;.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultSearchScope</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line to view the default value of the SearchScope parameter that is used by the Get- cmdlets. This search scope setting is used if the SearchScope parameter is omitted.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultSizeLimit</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line to view the default value of the -SizeLimit parameter that is used by the Get- cmdlets. This limitation on the size of the search result set is used if the -SizeLimit parameter is omitted.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultWildcardMode</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line to view the default value of the -WildcardMode parameter that is used by the Get- cmdlets. This wildcard mode setting is used if the -WildcardMode parameter is omitted.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Integer8AttributesThatContainDateTimes</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return a list of the Integer8 attributes whose values are represented as DateTime objects in the output of the Get- cmdlets by default. Each attribute is identified by its LDAP display name.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Integer8AttributesThatContainNegativeTimeSpans</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to return a list of the Integer8 attributes whose values are represented as TimeSpan objects in the output of the Get- cmdlets by default. Each attribute is identified by its LDAP display name.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return a list of the attributes that are excluded from processing by the UseDefaultExcludedProperties parameter on any particular cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForAdObject</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return the default list of the object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for objects other than a User, Group, Computer, or Password Settings object.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForComputerObject</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return the default list of the Computer object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Computer objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForGroupObject</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return the default list of the Group object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Group objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForPasswordSettingsObject</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return the default list of the Password Settings object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Password Settings objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForUserObject</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return the default list of the User object attributes that are retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for User objects.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultPageSize</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line to view the default value of the -PageSize parameter that is used by the Get- cmdlets. This page size value is used if the -PageSize parameter is omitted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultPropertiesExcludedFromNonBaseSearch</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return a list of the attributes that are not retrieved from the directory and stored in the local memory cache by any particular Get- cmdlet during a search with the search scope other than &#39;Base&#39;.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultSearchScope</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line to view the default value of the SearchScope parameter that is used by the Get- cmdlets. This search scope setting is used if the SearchScope parameter is omitted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultSizeLimit</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line to view the default value of the -SizeLimit parameter that is used by the Get- cmdlets. This limitation on the size of the search result set is used if the -SizeLimit parameter is omitted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultWildcardMode</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line to view the default value of the -WildcardMode parameter that is used by the Get- cmdlets. This wildcard mode setting is used if the -WildcardMode parameter is omitted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Integer8AttributesThatContainDateTimes</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return a list of the Integer8 attributes whose values are represented as DateTime objects in the output of the Get- cmdlets by default. Each attribute is identified by its LDAP display name.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Integer8AttributesThatContainNegativeTimeSpans</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to return a list of the Integer8 attributes whose values are represented as TimeSpan objects in the output of the Get- cmdlets by default. Each attribute is identified by its LDAP display name.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$list = Get-QADPSSnapinSettings -DefaultOutputPropertiesForUserObject

C:\PS&gt;$list += &#39;msDS-ReplAttributeMetaData&#39;

C:\PS&gt;Set-QADPSSnapinSettings -DefaultOutputPropertiesForUserObject $list                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Configure the Get- cmdlets to cache the &#39;msDS-ReplAttributeMetaData&#39; attribute when retrieving User objects from the directory, in addition to the other attributes that are cached by default.

Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. Thus, after you have changed configuration so as to cache the &#39;msDS-ReplAttributeMetaData&#39; attribute, you can view the value of that attribute on a user account by using the following command: Get-QADUser &#39;MyDomain\JSmith&#39; | Format-Table name, &#39;msDS-ReplAttributeMetaData&#39;</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADRootDSE
		</command:name>
		<maml:description>
			<maml:para>Retrieve the rootDSE object from the current directory server (domain controller).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADRootDSE</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>This cmdlet returns the rootDSE object containing data about the directory server. The rootDSE object is retrieved from a domain controller that is specific to the current connection. Thus, if connection parameters are supplied to choose a certain domain controller, the cmdlet retrieves the rootDSE object from that domain controller.

The cmdlet has connection parameters that determine the server and the security context for the operation. The connection parameters could be omitted as a connection to a server is established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

You can use the rootDSE object to get distinguished names of the domain, schema, and configuration containers, and other data about the directory server and the contents of its directory data tree. For information about attributes supported by rootDSE, refer to the &quot;RootDSE&quot; topic in the Active Directory Schema documentation in the MSDN Library (http://msdn.microsoft.com).

When connected to Quest One ActiveRoles, the cmdled retrieves the rootDSE object containing information about the ActiveRoles namespaces. For information about attributes supported by the ActiveRoles rootDSE, refer to the Quest One ActiveRoles SDK documentation (this documentation is normally installed with the ActiveRoles Administration Service).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADRootDSE</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADRootDSE | Format-List {$_[&quot;defaultNamingContext&quot;]},{$_[&quot;schemaNamingContext&quot;]},{$_[&quot;configurationNamingContext&quot;]}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the distinguished names of the domain, schema, and configuration containers for the current connection (this command displays the values of the defaultNamingContext, schemaNamingContext, and configurationNamingContext attributes retrieved from rootDSE).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
(get-QADRootDSE)[&quot;serverName&quot;]                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Identify the domain controller that is used by the current connection. The output of this command is the distinguished name of the server object for that domain controller in the configuration container (the command displays the value of the serverName attribute retrieved from rootDSE).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -proxy

C:\PS&gt;(get-QADRootDSE)[&quot;edsvaServiceFullDns&quot;]                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available ActiveRoles Administration Service and then retrieve the fully qualified domain name of the computer running the Administration Service to which you have connected.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADUser
		</command:name>
		<maml:description>
			<maml:para>Retrieve all users in a domain or container that match the specified conditions. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search an Active Directory domain or container for user accounts that meet certain search criteria, or to bind to a certain user account by DN, SID, GUID, UPN or Domain\UserName. You can search by user attributes or specify your search criteria by using an LDAP search filter.

The output of the cmdlet is a collection of objects, with each object representing one of the user accounts found by the cmdlet. You can pipe the output into another cmdlet, such as Set-QADUser, to make changes to the user accounts returned by this cmdlet.

The cmdlet takes a series of optional, attribute-specific parameters allowing you to search by user attributes. The attribute-specific parameters have effect if SearchRoot is specified  whereas Identity is not. If you specify SearchRoot only, then the cmdlet returns all users found in the SearchRoot container.

You can use attribute-specific parameters to search for user accounts that have specific values of certain attributes. Thus, to find all user accounts that have the givenName attribute set to Martin, you may add the following on the command line: &quot;-FirstName Martin&quot;. To search for user accounts that have a certain attribute not set specify &#39;&#39; (empty string) as the parameter value.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet searches for the attribute value specified by the attribute-specific parameter.

With more than one attribute-specific parameter supplied, the search conditions are combined by using the AND operator, so as to find the user accounts that meet all the specified conditions. Thus, if you supply both the -FirstName and -LastName parameters, the cmdlet searches for the user accounts that have the givenName attribute set to the FirstName parameter value and the sn attribute set to the LastName parameter value.

Each of the attribute-specific parameters accepts the * wildcard character in the parameter value to match zero or more characters (case-insensitive). For instance, a* matches A, ag, Amsterdam, and does not match New York.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADUser</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\UserName of the user account you want to find.

The cmdlet attempts to find the user that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiresAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve user accounts that are configured to expire after a certain date. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiresBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve user accounts that are configured to expire before a certain date. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNeverExpires</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those user accounts that are configured to never expire.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;l&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;company&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;department&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Disabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are disabled.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;mail&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are enabled (not disabled).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExpiredFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve accounts that remain in the expired state for at least the number of days specified by the parameter value. This parameter overrides the expiry-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the ExpiredFor value of 0 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are currently expired, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>FirstName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;givenName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;homeDirectory&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;homeDrive&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;homePhone&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Inactive</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve user accounts that meet the default inactivity conditions. You can view or change the default inactivity conditions by using the Get-QADInactiveAccountsPolicy or Set-QADInactiveAccountsPolicy cmdlet, respectively. When considering whether an account is inactive, the cmdlet verifies each of these values:

 - The number of days that the account remains in the expired state
 - The number of days that the password of the account remains unchanged
 - The number of days that the account remains unused for logon

If any of these values exceeds a certain, default limit, then the account is considered inactive, and thus is retrieved by the Inactive parameter. The default limits can be overridden by supplying other account-inactivity related parameters, such as InactiveFor, ExpiredFor, NotLoggedOnFor, and PasswordNotChangedFor. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the Inactive parameter, the cmdlet searches for accounts that meet the default expiry-related or password-related inactivity condition, or have not been used to log on for 60 or more days.

To retrieve only those accounts that are not inactive, use the following syntax: -Inactive:$false</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InactiveFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve user accounts that meet any of the following conditions:

 - The account remains in the expired state for at least the number of days specified by the parameter value
 - The account does not have its password changed for at least the number of days specified by the parameter value
 - The account has not been used to log on for at least the number of days specified by the parameter value

For example, the parameter value of 30 causes the cmdlet to search for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.

The value of this parameter overrides the default inactivity conditions, so the Inactive parameter has no effect when used together with this parameter. Similarly, the other account-inactivity related parameters such as ExpiredFor, NotLoggedOnFor and PasswordNotChangedFor override the corresponding conditions of this parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;initials&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastKnownParent</maml:name>
				<maml:description>
					<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;sn&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Locked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are locked out.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonScript</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;scriptPath&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;manager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;mobile&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;info&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotIndirectMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotLoggedOnFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve user accounts that have not been used to log on for at least the number of days specified by the parameter value. This parameter overrides the logon-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>NotMemberOf</maml:name>
				<maml:description>
					<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Pager</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;pager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those user accounts that have the password configured to never expire.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotChangedFor</maml:name>
				<maml:description>
					<maml:para>Use this parameter to retrieve user accounts whose password has not been changed for at least the number of days specified by the parameter value. This parameter overrides the password-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the PasswordNotChangedFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 60 or more days, or have not been used to log on for 30 or more days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PhoneNumber</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;telephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;postalCode&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostOfficeBox</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;postOfficeBox&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrimaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;profilePath&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users that have any of the specified e-mail addresses.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recycled</maml:name>
				<maml:description>
					<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryProxyAddress</maml:name>
				<maml:description>
					<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecurityMask</maml:name>
				<maml:description>
					<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Owner</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Group</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Dacl</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Sacl</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>StateOrProvince</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;st&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;streetAddress&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;title&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Tombstone</maml:name>
				<maml:description>
					<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;userPrincipalName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>WebPage</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;wWWHomePage&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiresAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve user accounts that are configured to expire after a certain date. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiresBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve user accounts that are configured to expire before a certain date. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNeverExpires</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those user accounts that are configured to never expire.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;l&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;company&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;department&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are disabled.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;mail&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are enabled (not disabled).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExpiredFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve accounts that remain in the expired state for at least the number of days specified by the parameter value. This parameter overrides the expiry-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the ExpiredFor value of 0 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are currently expired, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>FirstName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;givenName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;homeDirectory&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;homeDrive&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;homePhone&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\UserName of the user account you want to find.

The cmdlet attempts to find the user that is identified by the value of this parameter, disregarding the other parameters. If you want other parameters to have effect, do not supply any value of this parameter on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Inactive</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve user accounts that meet the default inactivity conditions. You can view or change the default inactivity conditions by using the Get-QADInactiveAccountsPolicy or Set-QADInactiveAccountsPolicy cmdlet, respectively. When considering whether an account is inactive, the cmdlet verifies each of these values:

 - The number of days that the account remains in the expired state
 - The number of days that the password of the account remains unchanged
 - The number of days that the account remains unused for logon

If any of these values exceeds a certain, default limit, then the account is considered inactive, and thus is retrieved by the Inactive parameter. The default limits can be overridden by supplying other account-inactivity related parameters, such as InactiveFor, ExpiredFor, NotLoggedOnFor, and PasswordNotChangedFor. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the Inactive parameter, the cmdlet searches for accounts that meet the default expiry-related or password-related inactivity condition, or have not been used to log on for 60 or more days.

To retrieve only those accounts that are not inactive, use the following syntax: -Inactive:$false</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InactiveFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve user accounts that meet any of the following conditions:

 - The account remains in the expired state for at least the number of days specified by the parameter value
 - The account does not have its password changed for at least the number of days specified by the parameter value
 - The account has not been used to log on for at least the number of days specified by the parameter value

For example, the parameter value of 30 causes the cmdlet to search for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.

The value of this parameter overrides the default inactivity conditions, so the Inactive parameter has no effect when used together with this parameter. Similarly, the other account-inactivity related parameters such as ExpiredFor, NotLoggedOnFor and PasswordNotChangedFor override the corresponding conditions of this parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has direct or indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;initials&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastKnownParent</maml:name>
			<maml:description>
				<maml:para>When searching for a deleted object by using the Tombstone parameter, specify the DN of the container the object was in before it became a tombstone. This allows you to find objects that were deleted from a particular container.

Note that the lastKnownParent attribute is only set if the object was deleted on a domain controller running Windows Server 2003 or later version of Microsoft Windows Server. Therefore, it is possible that the lastKnownParent attribute value is inaccurate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;sn&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Locked</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the search results produced by this cmdlet to include only those user accounts that are locked out.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonScript</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;scriptPath&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;manager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object has direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;mobile&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;info&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotIndirectMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that do not belong to the group or groups specified by this parameter, whether directly or because of group nesting. The cmdlet returns an object if the object has neither direct nor indirect membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotLoggedOnFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve user accounts that have not been used to log on for at least the number of days specified by the parameter value. This parameter overrides the logon-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the NotLoggedOnFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>NotMemberOf</maml:name>
			<maml:description>
				<maml:para>Retrieve objects that are not direct members of the group or groups specified by this parameter. The cmdlet returns an object if the object does not have direct membership in the group specified by this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Pager</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;pager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; if you want the cmdlet to retrieve only those user accounts that have the password configured to never expire.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotChangedFor</maml:name>
			<maml:description>
				<maml:para>Use this parameter to retrieve user accounts whose password has not been changed for at least the number of days specified by the parameter value. This parameter overrides the password-related inactivity condition of the Inactive or InactiveFor parameter. Thus, if the PasswordNotChangedFor value of 60 is supplied in conjunction with the InactiveFor value of 30, the cmdlet searches for accounts that are expired for 30 or more days, or have the password age of 60 or more days, or have not been used to log on for 30 or more days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PhoneNumber</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;telephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;postalCode&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostOfficeBox</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;postOfficeBox&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrimaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users for which any of the specified e-mail addresses is set as a primary (reply-to) e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;profilePath&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users that have any of the specified e-mail addresses.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recycled</maml:name>
			<maml:description>
				<maml:para>This parameter has an effect only if all of the following conditions are true:

 - A domain is supplied as the SearchRoot parameter value.
 - Active Directory Recycle Bin is enabled in that domain.

You can use this parameter in conjunction with the Tombstone parameter for the search results to include both the deleted and recycled objects that meet the search conditions. Without this parameter, the cmdlet returns only deleted objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryProxyAddress</maml:name>
			<maml:description>
				<maml:para>Specify one or more e-mail addresses to retrieve Exchange mailbox users for which any of the specified e-mail addresses is set as a non-primary e-mail address.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecurityMask</maml:name>
			<maml:description>
				<maml:para>Specify which elements of the object&#39;s security descriptor to retrieve. Valid parameter values are:
    &#39;None&#39; - do not retrieve any security data
    &#39;Owner&#39; - retrieve the owner data
    &#39;Group&#39; - retrieve the primary group data
    &#39;Dacl&#39; - retrieve the discretionary access-control list data
    &#39;Sacl&#39; - retrieve the system access-control list data
You can supply a combination of these values, separating them by commas. For example, you can supply the parameter value of &#39;Dacl,Sacl&#39; in order to retrieve both the discretionary and system access-control list data.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecurityMasks</command:parameterValue>
			<dev:type>
				<maml:name>SecurityMasks</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Owner</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Group</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Dacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Sacl</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>StateOrProvince</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;st&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;streetAddress&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;title&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Tombstone</maml:name>
			<maml:description>
				<maml:para>Search for deleted objects of the respective object class. The search output is normally intended to be passed (piped in) to the Restore-QADDeletedObject cmdlet for restoring deleted objects.

In a domain with Active Directory Recycle Bin (a feature of Windows Server 2008 R2) this parameter retrieves deleted objects (rather than tombstones, which in that case are referred to as recycled objects). Recycle Bin preserves all attributes on the deleted objects, so you can use a search filter based on any attributes.

In a domain without Active Directory Recycle Bin, deleting an object converts that object to a tombstone. A search using this parameter returns tombstone objects that meet the filtering criteria supplied. Upon deletion of an object only a small number of the object&#39;s attributes are saved in the tombstone, with most of the attributes being lost. To search for deleted objects, your search filter should be based on the attributes that are preserved in tombstones.

When the Tombstone parameter is supplied, the search results include the deleted objects or tombstones that match the specified search filter. However, a search filter that matches a live object may not work as expected after the object is deleted. This is because not all attributes are retained in the tombstone. For example, a filter such as (&amp;(objectClass=user)(objectCategory=person)) would not match any tombstone objects since the objectCategory attribute is removed upon object deletion. Conversely, the objectClass attribute is retained on tombstone objects, so a filter of (objectClass=user) would match deleted user objects.

The name of a tombstone object begins with the name of the deleted object, so a search using the Tombstone parameter can be refined by adding a filter based on object name. For example, to search for deleted objects with a name that begins with &quot;John&quot;, you can use a filter such as (cn=John*).

It is also possible to find a specific deleted object. If you know the name of the object and the Distinguished Name (DN) of the container the object was in before it was deleted, then you can pass the container&#39;s DN to the LastKnownParent parameter and apply a filter of (cn=&lt;name of the object&gt;*) in order to have the cmdlet retrieve that specific object. However, if an object is deleted, a new object with the same DN is created, and then deleted as well, the above search would return more than one object. The returned objects are distinguished by the GUIDs of the deleted objects, with the name of each ending in the GUID of the respective deleted object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;userPrincipalName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>WebPage</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;wWWHomePage&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
(get-QADUser &#39;CN=John Smith,OU=CompanyOU,DC=company,DC=com&#39;).DirectoryEntry.description                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific user account by DN, and display the user description.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;(get-QADUser -identity &#39;S-1-5-21-1279736177-1630491018-182859109-1305&#39;).DirectoryEntry.description 

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain user account by SID, display the user description, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser -SearchRoot &#39;company.com/UsersOU&#39; -LdapFilter &#39;(description=a*)&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, search for users in a specific container by using an LDAP search filter, and display a list of the users found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser -SearchRoot &#39;company.com/UsersOU&#39; | %{$_.DirectoryEntry.distinguishedName, $_.DirectoryEntry.description}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, find all users in a specific container, and display a list of the users found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;get-QADUser -SearchRoot &#39;company.com/UsersOU&#39; -title &#39;&#39; | set-QADUser -title &#39;A title&#39; 

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of a specific user, search a certain container to find all users with empty title, set a title for each of those users, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -service &#39;localhost&#39; -proxy

C:\PS&gt;get-QADUser -SearchRoot &#39;company.com/UsersOU&#39; -name &#39;a*&#39; -ObjectAttributes @{name=&#39;B*&#39;;title=&#39;*manager&#39;} | set-QADUser -description &#39;A manager whose name begins with A&#39; 

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of the locally logged on user, find all users whose names begin with &#39;A&#39; and titles end in &#39;Manager&#39; and modify the description for each of those users; then, disconnect.

Note that the condition based on the Name parameter overrides the condition imposed on the &#39;Name&#39; attribute by the ObjectAttributes parameter, so you could omit the Name parameter and type name=&#39;A*&#39; instead of name=&#39;B*&#39; in the value of the ObjectAttributes parameter, or you could only remove the name=&#39;B*&#39; entry from the value of the ObjectAttributes parameter.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -IncludeAllProperties -ReturnPropertyNamesOnly                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the names of the properties specific to a user object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser JSmith -IncludeAllProperties -SerializeValues | Format-List                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the values of all properties of the user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser jsmith -IncludeAllProperties -SerializeValues | Export-Clixml user.xml                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Export the user account to an XML file. Exported are the values of all properties.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -DontUseDefaultIncludedProperties -ObjectAttributes @{homeDirectory=&#39;*&#39;} -IncludedProperties &#39;msDS-ReplAttributeMetaData&#39;,homeDirectory | Format-Table name, homeDirectory, &#39;msDS-ReplAttributeMetaData&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find user objects with a non-empty value of the &#39;homeDirectory&#39; property, and display the values of the &#39;Name&#39;, &#39;HomeDirectory&#39; and &#39;msDS-ReplAttributeMetaData&#39; properties for each object found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADuser jsmith -SerializeValues | export-csv user.csv

C:\PS&gt;import-csv user.csv | New-QADUser -ParentContainer MyDomain.lab.local/MyOU -DeserializeValues -Name importedUser -LogonName importedUser -UserPassword &#39;P@ssw0rd&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Export the user object to a CSV file. Then, import that user object from that file.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 12 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -DontUseDefaultIncludedProperties -SizeLimit 0 | Measure-Object                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Count all user objects that exist in your Active Directory domain.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 13 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser -Service &#39;server.domain.local:389&#39; -SearchRoot &#39;&lt;DN of container&gt;&#39; -LdapFilter &#39;(description=a*)&#39; | Format-List name,description                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, search a specific container to find all AD LDS user objects matching a certain LDAP search filter, and display the name and description of each user object found.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 14 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser &#39;&lt;DN of user object&gt;&#39; -Service &#39;server.domain.local:389&#39; | Format-List name,description                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and display the name and description of the AD LDS user object that is identified by DN.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 15 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser -SearchRoot &#39;&lt;DN of container&gt;&#39; -IndirectMemberOf &#39;domainName\groupName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve user accounts from a particular container that are direct or indirect members of a particular group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 16 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastKnownParent &#39;&lt;DN of container&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all user accounts that were deleted from a particular container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 17 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -Name &#39;John Smith*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve deleted user accounts with the name (RDN) of John Smith.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 18 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastKnownParent &#39;&lt;DN of container&gt;&#39; -LastChangedOn (get-date)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all user accounts that were deleted from a particular container on the current date.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 19 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastChangedOn (get-date -year 2008 -month 9 -day 1)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all user accounts that were deleted on September 1, 2008.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 20 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -ShowProgress -Activity &#39;Retrieving all domain users&#39; -ProgressThreshold 0 | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>View progress of a command that retrieves all domain users.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 21 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Inactive                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that meet any of the default inactivity conditions (inactive accounts).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 22 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Inactive:$false                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that do not meet any of the default inactivity conditions (active accounts).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 23 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -InactiveFor 30                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that remain in the expired state for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 30 or more days.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 24 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Inactive -PasswordNotChangedFor 10                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that meet the default expiry-related or logon-related inactivity condition, or have the password unchanged for 10 or more days.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 25 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Inactive:$false -ExpiredFor 20                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that do not meet any of the default inactivity conditions, but remain in the expired state for 20 or more days.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 26 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -InactiveFor 30 -NotLoggedOnFor 60                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the user accounts that are expired for 30 or more days, or have the password age of 30 or more days, or have not been used to log on for 60 or more days.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 27 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser DomainName\UserName | Select-Object -ExpandProperty ProxyAddresses                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given mailbox user, list the e-mail addresses that are currently assigned to the mailbox.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSAccessTemplate
		</command:name>
		<maml:description>
			<maml:para>Retrieve Access Template objects from Quest One ActiveRoles. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSAccessTemplate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve Quest One ActiveRoles Access Template objects that meet the conditions you specify. Each Access Template object contains information about a certain Access Template. Access Template objects can be used as input to *-QARSAccessTemplateLink cmdlets for managing Access Template links. For background information about Access Templates, see the Quest One ActiveRoles Administrator Guide.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSAccessTemplate</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>If you want the cmdlet to retrieve a single Access Template, specify the name, canonical name, or distinguished name (DN) of the Access Template as the value of this parameter. If you want to search for Access Templates by other properties (for example, using an LDAP filter), omit this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &quot;member&quot; or &quot;memberOf&quot;). The cmdlet enumerates the Distinguished Name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the Distinguished Names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specify the description (or a part of description) of Access Templates you want the cmdlet to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Predefined</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Templates that are marked &quot;predefined&quot; in Quest One ActiveRoles. The predefined Access Templates are installed with Quest One ActiveRoles, and cannot be modified or deleted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID, or canonical name of the container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

  &#39;Base&#39; - Limits the search to the base (SearchRoot) object. The result contains a maximum of one object.
  &#39;OneLevel&#39; - Searches the immediate child objects of the base (SearchRoot) object, excluding the base object.
  &#39;Subtree&#39; - Searches the whole sub-tree, including the base (SearchRoot) object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, this parameter allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:

help about_wildcard
help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &quot;member&quot; or &quot;memberOf&quot;). The cmdlet enumerates the Distinguished Name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the Distinguished Names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specify the description (or a part of description) of Access Templates you want the cmdlet to retrieve.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>If you want the cmdlet to retrieve a single Access Template, specify the name, canonical name, or distinguished name (DN) of the Access Template as the value of this parameter. If you want to search for Access Templates by other properties (for example, using an LDAP filter), omit this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Predefined</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Templates that are marked &quot;predefined&quot; in Quest One ActiveRoles. The predefined Access Templates are installed with Quest One ActiveRoles, and cannot be modified or deleted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID, or canonical name of the container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

  &#39;Base&#39; - Limits the search to the base (SearchRoot) object. The result contains a maximum of one object.
  &#39;OneLevel&#39; - Searches the immediate child objects of the base (SearchRoot) object, excluding the base object.
  &#39;Subtree&#39; - Searches the whole sub-tree, including the base (SearchRoot) object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, this parameter allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:

help about_wildcard
help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplate -SearchRoot &#39;Configuration/Access Templates/Builtin&#39; -Predefined $true | format-List Name, ParentContainerDN                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available Administration Service and list the names of all pre-defined Access Templates located in a certain container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplate -SearchRoot &#39;Configuration/Access Templates/Active Directory&#39; -SearchScope &#39;OneLevel&#39; -Predefined $true | format-List Name                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all general-purpose Access Templates for Active Directory data management that are included with Quest One ActiveRoles by default.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSAccessTemplateLink
		</command:name>
		<maml:description>
			<maml:para>Retrieve Access Template Link objects from Quest One ActiveRoles. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSAccessTemplateLink</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve Quest One ActiveRoles Access Template Link objects (also referred to as Access Template links) that meet the conditions you specify. Each Access Template link contains information on how a certain Access Template is applied to determine access rights of a certain security principal (Trustee) on a certain directory object (securable object). Access Template Link objects can be used as input to *-QARSAccessTemplateLink cmdlets for managing Access Template link data. For background information about Access Templates, see the Quest One ActiveRoles Administrator Guide.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSAccessTemplateLink</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>If you want the cmdlet to retrieve a single Access Template Link object by name, specify the name, canonical name, or distinguished name (DN) of the respective AT Link object (located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace). If you want to search for AT Links by other properties, omit this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessTemplate</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template for the cmdlet to retrieve Access Template links that apply the Access Template specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AppliedTo</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to retrieve only those Access Template links that have specific settings for permission inheritance. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &quot;member&quot; or &quot;memberOf&quot;). The cmdlet enumerates the Distinguished Name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the Distinguished Names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Specify the description (or a part of description) of Access Template links you want the cmdlet to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DirectoryObject</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object for the cmdlet to retrieve Access Template links that determine the Quest One ActiveRoles security settings on that object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Disabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to retrieve only those Access Template links that are configured to have no effect in Quest One ActiveRoles (disabled links).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to retrieve only those Access Template links that are configured to have effect in Quest One ActiveRoles (enabled links).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Predefined</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Template links that are marked &quot;predefined&quot; in Quest One ActiveRoles. The predefined Access Template links are installed with Quest One ActiveRoles, and cannot be modified or deleted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name, Canonical Name, or GUID of the container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

  &#39;Base&#39; - Limits the search to the base (SearchRoot) object. The result contains a maximum of one object.
  &#39;OneLevel&#39; - Searches the immediate child objects of the base (SearchRoot) object, excluding the base object.
  &#39;Subtree&#39; - Searches the whole sub-tree, including the base (SearchRoot) object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, this parameter allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SynchronizedToAD</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Template links that are configured with the option to propagate permission settings to Active Directory. If you want the cmdlet to retrieve only those links that do not propagate permission settings to Active Directory, set the value of this parameter to &#39;false&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Trustee</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as user or group) for the cmdlet to retrieve Access Template links that determine access rights given to that object in Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:

help about_wildcard
help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccessTemplate</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template for the cmdlet to retrieve Access Template links that apply the Access Template specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AppliedTo</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to retrieve only those Access Template links that have specific settings for permission inheritance. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			<dev:type>
				<maml:name>ATLinkFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &quot;member&quot; or &quot;memberOf&quot;). The cmdlet enumerates the Distinguished Name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the Distinguished Names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Specify the description (or a part of description) of Access Template links you want the cmdlet to retrieve.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DirectoryObject</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object for the cmdlet to retrieve Access Template links that determine the Quest One ActiveRoles security settings on that object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to retrieve only those Access Template links that are configured to have no effect in Quest One ActiveRoles (disabled links).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to retrieve only those Access Template links that are configured to have effect in Quest One ActiveRoles (enabled links).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>If you want the cmdlet to retrieve a single Access Template Link object by name, specify the name, canonical name, or distinguished name (DN) of the respective AT Link object (located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace). If you want to search for AT Links by other properties, omit this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;name&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Predefined</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Template links that are marked &quot;predefined&quot; in Quest One ActiveRoles. The predefined Access Template links are installed with Quest One ActiveRoles, and cannot be modified or deleted.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see documentation on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name, Canonical Name, or GUID of the container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

  &#39;Base&#39; - Limits the search to the base (SearchRoot) object. The result contains a maximum of one object.
  &#39;OneLevel&#39; - Searches the immediate child objects of the base (SearchRoot) object, excluding the base object.
  &#39;Subtree&#39; - Searches the whole sub-tree, including the base (SearchRoot) object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, this parameter allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see documentation on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SynchronizedToAD</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to retrieve only those Access Template links that are configured with the option to propagate permission settings to Active Directory. If you want the cmdlet to retrieve only those links that do not propagate permission settings to Active Directory, set the value of this parameter to &#39;false&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Trustee</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as user or group) for the cmdlet to retrieve Access Template links that determine access rights given to that object in Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively. The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:

help about_wildcard
help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink | format-List DirectoryObject, AccessTemplate, Trustee                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available Administration Service and, for every Access Template link, list the distinguished names of the following entities:
  Directory object  The securable object to which the given link
                    applies an Access Template.
  Access Template   The Access Template that is applied
                    by the given link.
  Trustee           The security principal whose access rights
                    on the securable object are specified
                    by the given link.
Namely, this command retrieves and displays the values of the DirectoryObject, AccessTemplate, and Trustee properties of the objects returned by the cmdlet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AR Server Security - Active Directory Container&#39;| format-List DirectoryObject                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template, list all objects on which the Access Template determines security settings (for each link that is based on that Access Template, list the securable object to which the link is applied). This command retrieves and displays the value of the DirectoryObject property of the objects returned by the cmdlet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AR Server Security - Active Directory Container&#39;| format-List Trustee                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template, list all objects that have their access rights defined by using the given Access Template (for each link that is based on that Access Template, list the security principal to which the link points). This command retrieves and displays the value of the Trustee property of the objects returned by the cmdlet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -Trustee &#39;domainName\groupName&#39; | format-List DirectoryObject, AccessTemplate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the pre-Windows 2000 name of a group, list all the Access Templates that determine access rights of that group (find all Access Template links that have the given group set as the security principal, and then, for every such link, list the Access Template on which the link is based and the securable object to which the link is applied).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -DirectoryObject &#39;Configuration/Managed Units/ManagedUnitName&#39; | format-List Trustee, AccessTemplate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of a Quest One ActiveRoles Managed Unit (MU), list all the Access Templates that determine security settings on that MU (find all Access Template links that have the given MU set as the securable object, and then, for every such link, list the Access Template on which the link is based and the security principal to which the link points).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QADObject -SearchRoot &#39;OrganizationalUnitName&#39; | %{get-QARSAccessTemplateLink -DirectoryObject $_ -SynchronizedToAD $true | format-List AccessTemplate, DirectoryObject}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given organizational unit (OU), list the objects in that OU that have native Active Directory permission settings defined by using any Access Template (find all the Access Templates linked to any object in the OU with the option to synchronize the resulting permission settings to Active Directory).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -DirectoryObject &#39;OrganizationalUnitName&#39; -Predefined $false | remove-QARSAccessTemplateLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template and the name of an organizational unit (OU), remove all security settings on that OU that are determined by that Access Template (remove all links that are based on the given Access Template and applied to the given OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -Trustee &#39;domainName\groupName&#39; -Predefined $false | remove-QARSAccessTemplateLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template and the pre-Windows 2000 name of a group, revoke all access rights from that group that are defined by using that Access Template (remove all links that are based on the given Access Template and point to the given group).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSApprovalTask
		</command:name>
		<maml:description>
			<maml:para>Retrieve approval task records from Quest One ActiveRoles. Each approval task record represents a task, whether pending or completed, to approve or reject a certain change request in Quest One ActiveRoles.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSApprovalTask</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve information about tasks of approving changes to directory data that were requested using Quest One ActiveRoles.

When changes are attempted that require approval, one or more approval task records are created in the Quest One ActiveRoles Management History data store, and associated with the operation record representing the change request.

Once all approval tasks associated with an operation are completed, the operation record is marked completed and the requested changes are either applied or denied depending the approvers&#39; resolutions on the approval tasks (Approve or Reject). When any task associated with an operation receives the Reject resolution, the entire operation is denied and the requested changes are disregarded. When all tasks associated with the operation receive the Approve resolution, the operation is allowed and the requested changes are applied. For more information on the change approval function, see &quot;Approval Workflow&quot; in the Quest One ActiveRoles Administrator Guide.

The objects returned by this cmdlet represent approval task records that meet the search condition specified, allowing you to access information about the approval tasks and the operation they govern. You can discover who is expected to perform approval tasks, when and by whom the requested changes were approved or rejected, as well as get identities of approval task records for further processing in order to perform approval tasks.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSApprovalTask</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Approver</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that have the specified security principal (such as a user or group) designated as an approver (a person authorized to approve or reject the respective change request). Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about approval tasks assigned to particular persons.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ApproverIsMe</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that are assigned to the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributesChanges</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangedAttributes</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedBy</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed by the security principal (such as a user) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about approval tasks to which a particular person has applied the Approve or Reject resolution.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedByMe</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed by the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the records regarding the approval tasks completed during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records for the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records for the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records for the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records for the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the task records specific to the change requests that occurred during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Operation</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records that are associated with the operation records specified. Parameter value is an object or a collection of objects returned by the Get-QARSOperation cmdlet, or an array of operation string IDs. You can use this parameter to access information about approval tasks specific to a particular change request that requires approval in Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationIdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperationType</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TaskID</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records by ID. Parameter value is an array of strings, with each string representing the ID of the task to retrieve (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TaskStatus</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the approval tasks that are completed with a certain resolution (Approve or Reject) or pending (awaiting resolution). Valid parameter values are:

  Pending 

  Canceled 

  CompletedApproved 

  CompletedRejected 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;CompletedApproved,CompletedRejected&#39; limits the search to the tasks that have been completed with any resolution. If this parameter is omitted, records are retrieved regardless of the tasks status (a search is performed against all tasks).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TaskStatus[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>WorkflowInstance</maml:name>
				<maml:description>
					<maml:para>Retrieve approval task records that are associated with the workflow instance records specified. By using this parameter, you can get information about the approval tasks originated by a particular workflow instance. Parameter value is an object or a collection of objects returned by the Get-QARSWorkflowInstance cmdlet, or an array of workflow instance string IDs.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">WorkflowInstanceParameter[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Approver</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that have the specified security principal (such as a user or group) designated as an approver (a person authorized to approve or reject the respective change request). Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about approval tasks assigned to particular persons.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ApproverIsMe</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that are assigned to the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributesChanges</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangedAttributes</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedBy</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed by the security principal (such as a user) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about approval tasks to which a particular person has applied the Approve or Reject resolution.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedByMe</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed by the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that were completed (that is, received the Approve or Reject resolution) during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the records regarding the approval tasks completed during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records for the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records for the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records for the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records for the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the task records specific to the change requests that occurred during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Operation</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records that are associated with the operation records specified. Parameter value is an object or a collection of objects returned by the Get-QARSOperation cmdlet, or an array of operation string IDs. You can use this parameter to access information about approval tasks specific to a particular change request that requires approval in Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationIdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationIdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperationType</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>TaskID</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records by ID. Parameter value is an array of strings, with each string representing the ID of the task to retrieve (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>TaskStatus</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the approval tasks that are completed with a certain resolution (Approve or Reject) or pending (awaiting resolution). Valid parameter values are:

  Pending 

  Canceled 

  CompletedApproved 

  CompletedRejected 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;CompletedApproved,CompletedRejected&#39; limits the search to the tasks that have been completed with any resolution. If this parameter is omitted, records are retrieved regardless of the tasks status (a search is performed against all tasks).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TaskStatus[]</command:parameterValue>
			<dev:type>
				<maml:name>TaskStatus[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>WorkflowInstance</maml:name>
			<maml:description>
				<maml:para>Retrieve approval task records that are associated with the workflow instance records specified. By using this parameter, you can get information about the approval tasks originated by a particular workflow instance. Parameter value is an object or a collection of objects returned by the Get-QARSWorkflowInstance cmdlet, or an array of workflow instance string IDs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">WorkflowInstanceParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>WorkflowInstanceParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -Approver &#39;MyDomain\JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all approval tasks awaiting response from the user &#39;MyDomain\JSmith&#39;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -ApproverIsMe -TaskStatus Pending | %{$_.Operation}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all change requests (operations) awaiting approval by the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -Approver &#39;MyDomain\JSmith&#39; -TaskStatus Pending | %{$_.Operation}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all change requests (operations) awaiting approval by the user &#39;MyDomain\JSmith&#39;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -CompletedRecently ([TimeSpan]::FromDays(7)) -CompletedBy &#39;MyDomain\JSmith&#39; -TaskStatus CompletedApproved | %{$_.Operation}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all change requests (operations) that were approved by the user &#39;MyDomain\JSmith&#39; during last week.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSApprovalTask -CompletedRecently ([TimeSpan]::FromDays(7)) -CompletedBy &#39;MyDomain\JSmith&#39; -TaskStatus CompletedRejected                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all approval tasks that the user &#39;MyDomain\JSmith&#39; completed with the Reject resolution during last week.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSLastOperation
		</command:name>
		<maml:description>
			<maml:para>Retrieve information about the most recent operation request submitted to Quest One ActiveRoles from the current Management Shell session.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSLastOperation</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve information about the last operation request that was made within the context of the current Management Shell session. The information includes the identifier of the operation request. You can pass the identifier to cmdlets such as Get-QARSOperation or Get-QARSApprovalTask in order to retrieve additional information about the request and the approval tasks associated with the request.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSLastOperation</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Connect-QADService -Proxy

C:\PS&gt;New-QADUser -ParentContainer &#39;labdomain.local/Users&#39; -Name &#39;dummy&#39;

C:\PS&gt;Get-QARSLastOperation                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available ActiveRoles Administration Service, submit a request to create a new user, and then retrieve information on that request.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSOperation
		</command:name>
		<maml:description>
			<maml:para>Retrieve operation records from Quest One ActiveRoles. Each operation record represents a certain change request, whether pending or completed, in Quest One ActiveRoles.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSOperation</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve information about requests to make changes to directory data using Quest One ActiveRoles. Each request causes an operation record to be created in the Quest One ActiveRoles Management History data store. The cmdlet provides access to operation records, allowing you to examine:

   Change History   Information on changes that were made to particular pieces
                            of directory data (directory objects and their attributes) 
                            using Quest One ActiveRoles. 

   User Activity       Information on directory data changes that were made
                            by particular users. 

For a discussion of the Management History feature, see &quot;Management History&quot; in the Quest One ActiveRoles Administrator Guide.

An operation record may represent a change request that is waiting for approval in Quest One ActiveRoles. Such operation records are created whenever the requested changes require approval in accord with the Quest One ActiveRoles approval rules, and include information about the associated approval tasks. Once all approval tasks associated with an operation are completed, the respective operation record is marked completed and the requested changes are either applied or denied depending the approvers&#39; resolutions on the approval tasks (Approve or Reject). For more information about the change approval function, see &quot;Approval Workflow&quot; in the Quest One ActiveRoles Administrator Guide.

The objects returned by this cmdlet represent operation records that meet the search conditions specified, allowing you to access information about the respective change requests. You can discover what changes were requested, when and by whom change requests were initiated, when the requested changes were applied, as well as get identities of operation records for further processing such as retrieval and accomplishment of approval tasks.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSOperation</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>TargetObject</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests targeted at the directory object specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a directory object. You can use this parameter to retrieve information about changes made to a particular object in the directory (change history).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributesChanges</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangedAttributes</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that were completed after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that were completed before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that were completed within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that were completed during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the change requests completed during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedBy</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the changes that were requested by the security principal (such as a user) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about changes to directory data made by a particular person (user activity).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedByMe</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the changes that were requested by the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitiatedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the records regarding change requests that occurred during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperationID</maml:name>
				<maml:description>
					<maml:para>Retrieve an operation record by ID. Parameter value is the string ID of the operation to retrieve (you can view operation ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperationStatus</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests that are completed (the changes are applied or rejected) or pending (awaiting approval). Parameter value can be one of the following:

  Canceled 

  Completed 

  Denied 

  Failed 

  InProgress 

  Pending 

If this parameter is omitted, operation records are retrieved for any requests.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationStatus[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperationType</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests targeted at directory objects that reside in the container (such as an organizational unit) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, or GUID of a container object in the directory. You can use this parameter to retrieve information about changes made to directory object in a particular container.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetObjectType</maml:name>
				<maml:description>
					<maml:para>Retrieve operation records for the change requests targeted at the directory objects of the object class specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an object class (such as &#39;user&#39; or &#39;organizationalUnit&#39;). You can use this parameter to retrieve information about changes made to directory objects of a particular type.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributesChanges</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangedAttributes</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that were completed after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that were completed before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that were completed within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that were completed during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the change requests completed during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedBy</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the changes that were requested by the security principal (such as a user) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a security principal object in Active Directory. You can use this parameter to retrieve information about changes to directory data made by a particular person (user activity).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedByMe</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the changes that were requested by the security principal (such as a user) in whose security context the cmdlet is currently running.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitiatedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the records regarding change requests that occurred during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperationID</maml:name>
			<maml:description>
				<maml:para>Retrieve an operation record by ID. Parameter value is the string ID of the operation to retrieve (you can view operation ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperationStatus</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests that are completed (the changes are applied or rejected) or pending (awaiting approval). Parameter value can be one of the following:

  Canceled 

  Completed 

  Denied 

  Failed 

  InProgress 

  Pending 

If this parameter is omitted, operation records are retrieved for any requests.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationStatus[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationStatus[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperationType</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests targeted at directory objects that reside in the container (such as an organizational unit) specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, or GUID of a container object in the directory. You can use this parameter to retrieve information about changes made to directory object in a particular container.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>TargetObject</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests targeted at the directory object specified. Parameter value can be an array of strings, with each string representing the Distinguished Name (DN), Canonical Name, Domain\Name, User Principal Name, SID or GUID of a directory object. You can use this parameter to retrieve information about changes made to a particular object in the directory (change history).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetObjectType</maml:name>
			<maml:description>
				<maml:para>Retrieve operation records for the change requests targeted at the directory objects of the object class specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an object class (such as &#39;user&#39; or &#39;organizationalUnit&#39;). You can use this parameter to retrieve information about changes made to directory objects of a particular type.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -CompletedOn &#39;Today&#39; -ParentContainer &#39;test.domain.com/container&#39; -TargetObjectType &#39;user&#39; -OperationType &#39;Modify&#39; | %{$_.TargetObjectInfo.DN} | Group-Object | %{$_.Name}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the user accounts from a particular container that were changed on the current date.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -CompletedOn (get-date -year 2008 -month 9 -day 1) -ParentContainer &#39;test.domain.com/container&#39; -TargetObjectType &#39;Group&#39; -OperationType &#39;Create&#39; | %{$_.TargetObjectInfo.DN} | Group-Object | %{$_.Name}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the groups that were created in a particular container on September 1, 2008.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -CompletedRecently ([TimeSpan]::FromDays(30)) -TargetObject &#39;domainName\groupName&#39; -OperationType &#39;GroupMembershipChange&#39; | %{$_.InitiatorInfo.NTAccountName} | Group-Object | %{$_.Name}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the names of the security principals that added or removed members from a particular group during last month.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -TargetObject &#39;domain\user&#39; -OperationType &#39;Modify&#39; -ChangedAttributes &#39;edsaPassword&#39; | %{$_.InitiatorInfo.NTAccountName} | Group-Object | select Name                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the names of the security principals that changed or reset the password of a particular user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -CompletedRecently ([TimeSpan]::FromDays(7)) -TargetObjectType user -ParentContainer &#39;test.domain.com/container&#39; -InitiatedBy &#39;MyDomain\JSmith&#39; | %{$_.TargetObjectInfo.DN}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all user accounts from a particular container that were changed by the user &#39;MyDomain\JSmith&#39; during last week.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -TargetObject &#39;domain\user&#39; -ChangedAttributes l,streetAddress -CompletedOn ((get-date).AddDays(-1)) | %{$_.InitiatorInfo.NTAccountName} | Group-Object | select Name                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the names of the security principals that changed the City (l) or Street Address (streetAddress) attribute on the account of a particular user account yesterday.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -ParentContainer test.domain.com/container -TargetObjectType group -OperationType &#39;GroupMembershipChange&#39; -CompletedAfter (get-date -year 2008 -month 9 -day 15 -hour 0 -minute 0 -second 0) -CompletedBefore (get-date -year 2008 -month 9 -day 30 -hour 23 -minute 59 -second 59) | %{$_.TargetObjectInfo.DN} | Group-Object | %{$_.Name}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the groups from a particular container that had the membership list (Members attribute) changed during the time period from September 15, 2008 to September 30, 2008.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSWorkflowDefinition
		</command:name>
		<maml:description>
			<maml:para>Retrieve workflow definition objects from Quest One ActiveRoles. Each workflow definition object contains the configuration data for a certain workflow.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSWorkflowDefinition</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to search for, and retrieve information from, workflow definitions in Quest One ActiveRoles. Each workflow definition represents the structure of a certain workflow, is stored as a single object in the Quest One ActiveRoles configuration data store, and can be structured as an XML document defining the workflow start conditions, the activities, the parameters for the activities, and the order in which the activities should run. For more information, see &quot;Workflows&quot; in the Quest One ActiveRoles Administrator Guide.

The cmdlet returns a collection of objects, each of which represents one of the workflow definition objects that meet the search conditions specified. You can pass returned objects to the Get-QARSWorkflowInstance cmdlet through the Workflow parameter, in order to get information about workflow instances originated in Quest One ActiveRoles based on the corresponding workflow definitions.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSWorkflowDefinition</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN) of the workflow definition object you want the cmdlet to find. The cmdlet attempts to retrieve the object identified by this parameter value, disregarding the other search parameters. If you want other search parameters to have effect, do not supply this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Activity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Anr</maml:name>
				<maml:description>
					<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributeScopeQuery</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DontUseDefaultIncludedProperties</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAllProperties</maml:name>
				<maml:description>
					<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedAfter</maml:name>
				<maml:description>
					<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedBefore</maml:name>
				<maml:description>
					<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastChangedOn</maml:name>
				<maml:description>
					<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LdapFilter</maml:name>
				<maml:description>
					<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name of objects you want to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProgressThreshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReturnPropertyNamesOnly</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchRoot</maml:name>
				<maml:description>
					<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerializeValues</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
				<maml:description>
					<maml:para>This parameter is deprecated, and has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Activity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the line of text above the progress bar which the cmdlet displays to depict the status of the running command in case of a lengthy operation. This text describes the activity whose progress is being reported (see also ShowProgress and ProgressThreshold). If this parameter is omitted, the name of the cmdlet is displayed above the progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Anr</maml:name>
			<maml:description>
				<maml:para>Specify a value to be resolved using ambiguous name resolution (ANR). Which attributes are included in an ANR search depends upon the Active Directory schema. Thus, in Windows Server 2003 based Active Directory, the following attributes are set for ANR by default:

 Display-Name (displayName) 
 Given-Name (givenName) 
 Legacy-Exchange-DN (legacyExchangeDN) 
 ms-DS-Additional-Sam-Account-Name (msDS-AdditionalSamAccountName) 
 Physical-Delivery-Office-Name (physicalDeliveryOfficeName) 
 Proxy-Addresses (proxyAddresses) 
 RDN (name) 
 SAM-Account-Name (sAMAccountName) 
 Surname (sn) 

For instance, when you supply &#39;ann*&#39; as the value of this parameter, the cmdlet searches for objects that have ann at the beginning of the value of at least one of the attributes listed above.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributeScopeQuery</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP display name of an attribute that has DN syntax (for example, &#39;memberOf&#39;). The cmdlet enumerates the distinguished name values of the attribute on the object specified by the SearchRoot parameter, and performs the search on the objects represented by the distinguished names. The SearchScope parameter has no effect in this case. The object to search must be specified by using the SearchRoot parameter rather than the Identity parameter.

For instance, with the value of this parameter set to &#39;memberOf&#39;, the cmdlet searches the collection of the groups to which the SearchRoot object belongs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created after the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object creation date and time by which to filter objects found. The cmdlet returns only the objects that were created before the date and time specified. Supplying both CreatedAfter and CreatedBefore bounds a time interval for the objects&#39; creation. If you supply only CreatedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object creation date by which to filter objects found, searching for objects created within the date specified. This parameter is mutually exclusive with the CreatedAfter and CreatedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Search by the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontConvertValuesToFriendlyRepresentation</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to represent the Integer8 and OctetString attribute values &quot;as is,&quot; without converting them to a user-friendly, human-readable form. If this parameter is omitted, the cmdlet performs the following data conversions:

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainDateTimes array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to DateTime

 - The values of the Integer8 attributes listed in the 
   Integer8AttributesThatContainNegativeTimeSpans array 
   (see the parameter descriptions for the 
   Get-QADPSSnapinSettings and Set-QADPSSnapinSettings
   cmdlets) are converted from IADsLargeInteger to TimeSpan

 - The values of the other Integer8 attributes are 
   converted from IADsLargeInteger to Int64

 - The values of the OctetString attributes are converted
   from byte[] to BinHex strings

Note: This parameter has an effect only on the properties of the output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DontUseDefaultIncludedProperties</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to load only a small set of attributes from the directory to the local memory cache (normally, this set is limited to objectClass and ADsPath). Other attributes are retrieved from the directory as needed when you use the cmdlet&#39;s output objects to read attribute values. Thus, if you want only to count the objects that meet certain conditions (rather than examine values of particular attributes), then you can use this parameter to increase performance of your search. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the ExcludedProperties parameter you can change this default behavior on an ad-hoc basis, in order to prevent certain attributes from being loaded. Another scenario involves the use of this parameter in conjunction with IncludeAllProperties in order to restrict the set of the cached attributes.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN) of the workflow definition object you want the cmdlet to find. The cmdlet attempts to retrieve the object identified by this parameter value, disregarding the other search parameters. If you want other search parameters to have effect, do not supply this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAllProperties</maml:name>
			<maml:description>
				<maml:para>With this parameter, the cmdlet retrieves all attributes of the respective directory object (such as a User object), and stores the attribute values in the memory cache on the local computer. Attribute values can be read from the memory cache by using properties of the object returned by the cmdlet. Thus, when used in conjunction with the SerializeValues parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you want the cmdlet to retrieve from the directory and store in the memory cache on the local computer. Supply a list of the attribute LDAP display names as the parameter value. By default, the cmdlet caches a certain pre-defined set of attributes, which you can view or modify by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Using the IncludedProperty parameter you can direct the cmdlet to cache some attributes in addition to the default set.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedAfter</maml:name>
			<maml:description>
				<maml:para>Specify the lower boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed after the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedAfter, there is no upper boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedBefore</maml:name>
			<maml:description>
				<maml:para>Specify the upper boundary of the object modification date and time by which to filter objects found. The cmdlet returns only the objects that have last changed before the date and time specified. Supplying both LastChangedAfter and LastChangedBefore bounds a time interval for the objects&#39; last change. If you supply only LastChangedBefore, there is no lower boundary on the date. Parameter value is a DateTime object that specifies the date and time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastChangedOn</maml:name>
			<maml:description>
				<maml:para>Specify the object modification date by which to filter objects found, searching for objects that have last changed within the date specified. This parameter is mutually exclusive with the LastChangedAfter and LastChangedBefore parameters. Parameter value is a DateTime object that specifies the date you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LdapFilter</maml:name>
			<maml:description>
				<maml:para>Specify the LDAP search filter that defines your search criteria. Note that the search filter string is case-sensitive.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line. Instead, supply a SearchRoot value.

If you supply the LdapFilter parameter along with attribute-specific parameters, then your search returns objects that meet the conditions defined by the LDAP filter and have the specified attributes set to the specified values.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name of objects you want to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items in each page of the search results that will be returned by the cmdlet. After the directory server has found the number of objects that are specified by this parameter, it will stop searching and return the results to the cmdlet. When the cmdlet requests more data, the server will restart the search where it left off. You can use this setting to adjust the number of requests (network calls) to the directory server issued by the cmdlet during a search.

Normally, the default page size is 50. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProgressThreshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify a delay, in seconds, before the cmdlet displays a progress bar that depicts the status of the running command in case of a lengthy operation. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. The default threshold time setting can be configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReturnPropertyNamesOnly</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to list the names of the object attributes whose values the cmdlet retrieves from the directory and stores in the memory cache on the local computer. Thus, when used in conjunction with the IncludeAllProperties parameter, it lists the names of all attributes of the respective directory object (such as a User object). For examples of how to use this parameter, see help on the Get-QADUser or Get-QADObject cmdlet.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by the cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the object attributes and values you want. The cmdlet searches for objects that have the specified attributes set to the specified values. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to search. A value may include an asterisk character - a wildcard representing any group of characters. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchRoot</maml:name>
			<maml:description>
				<maml:para>Specify the DN, GUID or canonical name of the domain or container to search. By default, the cmdlet searches the entire sub-tree of which SearchRoot is the topmost object (sub-tree search). This default behavior can be altered by using the SearchScope parameter.

The search criteria are defined by the LdapFilter parameter value and the values of attribute-specific parameters.

The cmdlet disregards this parameter if an Identity value is supplied. If you want this parameter to have effect, do not supply any Identity value on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Specify one of these parameter values:

   &#39;Base&#39;     Limits the search to the base (SearchRoot) object.
              The result contains a maximum of one object.
   &#39;OneLevel&#39; Searches the immediate child objects of the base (SearchRoot)
              object, excluding the base object.
   &#39;Subtree&#39;  Searches the whole sub-tree, including the base (SearchRoot)
              object and all its child objects.

Normally, if this parameter is not supplied, the cmdlet performs a Subtree search. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerializeValues</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to output an object whose properties store the attribute values of the respective directory object that are loaded to the local memory cache. The value returned by each property of the output object is represented as a string (serialized) so as to facilitate the export of the attribute values to a text file. Thus, when used in conjunction with the IncludeAllProperties parameter, it allows an entire object to be exported from the directory to a text file. For examples of how to use this parameter, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want the cmdlet to display a progress bar that depicts the status of the running command in case of a lengthy operation. If this parameter is omitted, whether the cmdlet displays a progress bar depends upon the ShowProgress setting configured by using the Set-QADProgressPolicy cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to load a certain pre-defined set of attributes from the directory to the local memory cache. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively. Normally, this parameter is used in conjunction with IncudeAllProperties to avoid retrieval of unnecessary data from the directory server, thereby increasing performance of the search operation performed by the cmdlet.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedPropertiesExcept</maml:name>
			<maml:description>
				<maml:para>This parameter is deprecated, and has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;PowerShell&#39; or &#39;LDAP&#39; as the parameter value. Normally, if this parameter is not supplied, the cmdlet assumes that WildcardMode is set to &#39;LDAP&#39;. You can view or modify this default setting by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.

The &#39;PowerShell&#39; value causes the cmdlet to use PowerShell wildcards and quoting rules. Wildcards are processed on the client side, which may result in slow search performance.

For information about PowerShell wildcards and quoting rules, type the following commands at the PowerShell command-prompt:
    help about_wildcard
    help about_quoting_rule

The &#39;LDAP&#39; value causes the cmdlet to use LDAP wildcards (asterisks only) and LDAP quoting rules (backslash as the escape character). Wildcards are processed on the server side, which enables faster search results.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSWorkflowDefinition -SearchRoot &#39;CN=Builtin,CN=Workflow,CN=Policies,CN=Configuration&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all the pre-defined workflow definitions.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QARSWorkflowInstance
		</command:name>
		<maml:description>
			<maml:para>Retrieve workflow instance records from Quest One ActiveRoles. Each record contains information about a certain workflow, whether pending or completed, that was originated by a particular operation request in Quest One ActiveRoles.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QARSWorkflowInstance</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve information about workflow instances. When an operation request starts a workflow in Quest One ActiveRoles, it creates a workflow instance based on the settings found in the workflow definition. Each workflow instance stores the data indicating the current state of a single workflow that is in progress (pending) or finished (completed). For more information, see &quot;Workflows&quot; in the Quest One ActiveRoles Administrator Guide.

The objects returned by this cmdlet represent workflow instance records that meet the search conditions specified, allowing you to access information about the corresponding workflow instances. You can analyze the returned object to discover what operation started the workflow, when the workflow was started, and whether the workflow is completed. You can also pass the returned object to the Get-QARSApprovalTask cmdlet through the WorkflowInstance parameter in order to get information about the approval tasks, if any, that were originated within the workflow.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QARSWorkflowInstance</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AttributesChanges</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangedAttributes</maml:name>
				<maml:description>
					<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the workflow instances that were finished after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the workflow instances that were finished before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the workflow instances that were finished within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CompletedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the workflow instances that were finished during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the workflows that were finished during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedAfter</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records associated with the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBefore</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records associated with the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedOn</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records associated the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedRecently</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records associated with the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the workflow instances associated with the change requests that occurred during the last 3 days.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>InstanceID</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records by ID. Parameter value is an array of strings, with each string representing the ID of the workflow instance to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Operation</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records that are associated with the operation requests specified. Parameter value is an object or a collection of objects returned by the Get-QARSOperation cmdlet, or a string array of operation IDs. You can use this parameter to get information about the workflow instances originated by a particular operation request in Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationIdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperationType</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>TaskStatus</maml:name>
				<maml:description>
					<maml:para>Retrieve records for the workflow instances that have a certain status, such as finished (completed) or waiting for a certain activity to be completed (pending). Valid parameter values are:

  Pending

  Completed

  Canceled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">TaskStatus[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Workflow</maml:name>
				<maml:description>
					<maml:para>Retrieve workflow instance records that are based on the workflow definitions specified. Parameter value is an object or a collection of objects returned by the Get-QARSWorkflowDefinition cmdlet, or an array of strings each of which represents the Distinguished Name of a workflow definition object. You can use this parameter to get information about the instances of a particular workflow definition in Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AttributesChanges</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to requests for changing the specified attributes to the specified values. You can use this parameter to limit your search based on particular changes requested or made to particular attributes. Parameter value is an associative array that specifies the attributes and values you want. Array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name of an attribute and the value set on the attribute in accord with the change request. Examples:

@{description=&quot;Text&quot;}
Search for requests that change Description to the text specified.

@{description=&quot;Text*&quot;}
Search for requests that change Description to any value that begins with the text specified.

@{description=&quot;$null&quot;}
Search for requests that clear Description.

When multiple attributes are specified, the search returns the records that involve changes to all those attributes (the search conditions are combined using a logical AND operator).

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangedAttributes</maml:name>
			<maml:description>
				<maml:para>Retrieve records relating to change requests targeted at the attribute specified. Parameter value can be an array of strings, with each string representing the LDAP display name of an attribute (such as &#39;description&#39; or &#39;sAMAccountName&#39;). You can use this parameter to limit your search based on any changes requested or made to particular attributes. When multiple attributes are specified, the search returns the records that involve changes to any of those attributes (the search conditions are combined using a logical OR operator).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the workflow instances that were finished after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the workflow instances that were finished before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the workflow instances that were finished within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CompletedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the workflow instances that were finished during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the workflows that were finished during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedAfter</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records associated with the change requests that occurred after the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedBefore</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records associated with the change requests that occurred before the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>DateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedOn</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records associated the change requests that occurred within the date specified. Parameter value can be a DateTime object or a string that specifies the date you want. Thus, you can supply &quot;Today&quot; as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DayParameter</command:parameterValue>
			<dev:type>
				<maml:name>DayParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CreatedRecently</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records associated with the change requests that occurred during the recent time period specified. Parameter value is a TimeSpan object that specifies the time period you want. For example, if you supply a time span of 3 days, the cmdlet searches for the workflow instances associated with the change requests that occurred during the last 3 days.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">RelativeDateTimeParameter</command:parameterValue>
			<dev:type>
				<maml:name>RelativeDateTimeParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>InstanceID</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records by ID. Parameter value is an array of strings, with each string representing the ID of the workflow instance to retrieve.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Operation</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records that are associated with the operation requests specified. Parameter value is an object or a collection of objects returned by the Get-QARSOperation cmdlet, or a string array of operation IDs. You can use this parameter to get information about the workflow instances originated by a particular operation request in Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationIdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationIdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperationType</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the change requests of the category specified. Valid parameter values are:

  Create 

  Delete 

  Copy 

  Modify 

  GroupMembershipChange 

  Move 

  Rename 

  Deprovision 

  UndoDeprovision 

Parameter value can be any combination of the listed values, separated by commas. For example, &#39;Create,Modify&#39; limits the search to the requests for changing attributes of existing objects or creation of new objects. If this parameter is omitted, records are retrieved regardless of the change request category.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">OperationType[]</command:parameterValue>
			<dev:type>
				<maml:name>OperationType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Set the maximum number of items to be returned by the cmdlet. Normally, the default size limit is 1000. You can view or modify this default setting by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>TaskStatus</maml:name>
			<maml:description>
				<maml:para>Retrieve records for the workflow instances that have a certain status, such as finished (completed) or waiting for a certain activity to be completed (pending). Valid parameter values are:

  Pending

  Completed

  Canceled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">TaskStatus[]</command:parameterValue>
			<dev:type>
				<maml:name>TaskStatus[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Workflow</maml:name>
			<maml:description>
				<maml:para>Retrieve workflow instance records that are based on the workflow definitions specified. Parameter value is an object or a collection of objects returned by the Get-QARSWorkflowDefinition cmdlet, or an array of strings each of which represents the Distinguished Name of a workflow definition object. You can use this parameter to get information about the instances of a particular workflow definition in Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSWorkflowInstance -CreatedBefore ((get-date).AddDays(-30)) -TaskStatus Pending                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List the workflow instances that were created more than 30 days ago and have not been completed.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSWorkflowInstance -Workflow &#39;CN=Approval by Primary Owner (Manager),CN=Builtin,CN=Workflow,CN=Policies,CN=Configuration&#39; -TaskStatus Pending                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>List all workflow instances that were created based on a particular workflow definition and have not been completed.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-QADObject
		</command:name>
		<maml:description>
			<maml:para>Move the specified object to a different location (container) in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to move an object between containers within an Active Directory domain (the cmdlet cannot move an object to a different domain). An object to move can be specified by DN, SID, GUID, UPN or Domain\Name, or it can be located by using a Get- cmdlet and then piped into the Move- cmdlet. The destination container can be specified by DN or GUID.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-QADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to move.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>NewParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the DN or GUID of the destination container (the container to which you want to move the object).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to move.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>NewParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the DN or GUID of the destination container (the container to which you want to move the object).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
move-QADObject &#39;MyDomain\JSmith&#39; -NewParentContainer &#39;MyDomain.company.com/NewYork/Users&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific user object by Domain\Name, and move the object to the specified container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Create a new computer object in Active Directory Domain Services.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a new Active Directory computer object. You can use this cmdlet to provision a computer account before the computer is added to the domain. Note that this cmdlet does not join a computer to a domain.

You can set some commonly used computer properties by using the corresponding cmdlet parameters. Properties that are not associated with cmdlet parameters can be set by using the ObjectAttributes parameter. Thus, to set the value of the &#39;description&#39; or &#39;displayName&#39; attribute, you can use the Description or DisplayName parameter, respectively. If a particular attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet can use the connection that is established by the Connect-QADService cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name for the new computer object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new computer object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;description&#39; attribute on the object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;displayName&#39; attribute on the object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Set the &#39;location&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.  Thus, passing the @{sAMAccountName=&#39;Admins&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;sAMAccountName&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;sAMAccountName&#39; attribute (pre-Windows 2000 name) to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwner</maml:name>
				<maml:description>
					<maml:para>Set the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as a secondary owner. You can supply a string array of object identifiers to specify several secondary owners. This parameter has an effect only in conjunction with the Proxy connection parameter because secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustForDelegation</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to configure the computer object so that the computer is trusted for delegation. In this way you enable any service running under the Local System account on that computer to gain access to resources on other computers, and to impersonate its clients when accessing resources on other computers.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;description&#39; attribute on the object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;displayName&#39; attribute on the object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Set the &#39;location&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name for the new computer object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.  Thus, passing the @{sAMAccountName=&#39;Admins&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;sAMAccountName&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new computer object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;sAMAccountName&#39; attribute (pre-Windows 2000 name) to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwner</maml:name>
			<maml:description>
				<maml:para>Set the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as a secondary owner. You can supply a string array of object identifiers to specify several secondary owners. This parameter has an effect only in conjunction with the Proxy connection parameter because secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustForDelegation</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to configure the computer object so that the computer is trusted for delegation. In this way you enable any service running under the Local System account on that computer to gain access to resources on other computers, and to impersonate its clients when accessing resources on other computers.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
New-QADComputer -Name &#39;LAB-SRV3&#39; -SamAccountName &#39;LAB-SRV3$&#39; -ParentContainer &#39;CN=Computers,DC=lab,DC=local&#39; -Location &#39;AMS/HQ/Building A&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a new computer object in the &#39;Computers&#39; container, and set a particular location value for that object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADGroup
		</command:name>
		<maml:description>
			<maml:para>Create a new group in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a group in Active Directory and, optionally, add members to and set other attribute values in the newly created group.

This cmdlet takes a series of optional, attribute-specific parameters allowing you to set attributes in the newly created group. Thus, to set the value of the &#39;description&#39;, &#39;displayName&#39;, or &#39;member&#39; attribute, you can use the -Description, -DisplayName, or -Member parameter, respectively.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name (CN) for the new group to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Set the &#39;mail&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>Specify the scope of the new group to be created. Acceptable values: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;. If this parameter is omitted, the cmdlet assumes that GroupScope is set to &#39;Global&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupType</maml:name>
				<maml:description>
					<maml:para>Specify the type of the new group to be created. Acceptable values: &#39;Security&#39;; &#39;Distribution&#39;. If this parameter is omitted, the cmdlet assumes that GroupType is set to &#39;Security&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Keywords</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users identify the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array that specifies one or more keywords to assign to the group. This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagerCanUpdateMembershipList</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether the manager (primary owner) of the group is allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the manager to add or remove group members; supply the parameter value of $false to configure the group so that its manager is not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Member</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;member&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Set the &#39;info&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{info=&#39;&#39;;description=&#39;Admins&#39;} array to the ObjectAttributes parameter causes the cmdlet to clear the &#39;Notes&#39; attribute and set the &#39;Description&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Published</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if you want to publish the group. Publishing a group enables users to submit requests to join or leave that group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireManagerApproval</maml:name>
				<maml:description>
					<maml:para>Set the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireSecondaryOwnerApproval</maml:name>
				<maml:description>
					<maml:para>Set by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Specify the pre-Windows 2000 group name for the new group to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwner</maml:name>
				<maml:description>
					<maml:para>Set the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as a secondary owner. You can supply a string array of object identifiers to specify several secondary owners. This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwnersCanUpdateMembershipList</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether secondary owners of the group are allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the secondary owners to add or remove group members; supply the parameter value of $false to configure the group so that its secondary owners are not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Set the &#39;mail&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>Specify the scope of the new group to be created. Acceptable values: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;. If this parameter is omitted, the cmdlet assumes that GroupScope is set to &#39;Global&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			<dev:type>
				<maml:name>GroupScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupType</maml:name>
			<maml:description>
				<maml:para>Specify the type of the new group to be created. Acceptable values: &#39;Security&#39;; &#39;Distribution&#39;. If this parameter is omitted, the cmdlet assumes that GroupType is set to &#39;Security&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			<dev:type>
				<maml:name>GroupType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Keywords</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users identify the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array that specifies one or more keywords to assign to the group. This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagerCanUpdateMembershipList</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether the manager (primary owner) of the group is allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the manager to add or remove group members; supply the parameter value of $false to configure the group so that its manager is not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Member</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;member&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name (CN) for the new group to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Set the &#39;info&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{info=&#39;&#39;;description=&#39;Admins&#39;} array to the ObjectAttributes parameter causes the cmdlet to clear the &#39;Notes&#39; attribute and set the &#39;Description&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Published</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if you want to publish the group. Publishing a group enables users to submit requests to join or leave that group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireManagerApproval</maml:name>
			<maml:description>
				<maml:para>Set the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireSecondaryOwnerApproval</maml:name>
			<maml:description>
				<maml:para>Set by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Specify the pre-Windows 2000 group name for the new group to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwner</maml:name>
			<maml:description>
				<maml:para>Set the &#39;edsvaSecondaryOwners&#39; attribute. Supply the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as a secondary owner. You can supply a string array of object identifiers to specify several secondary owners. This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwnersCanUpdateMembershipList</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether secondary owners of the group are allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the secondary owners to add or remove group members; supply the parameter value of $false to configure the group so that its secondary owners are not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-qadGroup -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -name &#39;group1&#39; -samAccountName &#39;group1&#39; -grouptype &#39;Distribution&#39; -groupscope &#39;Universal&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, and create a new universal distribution group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-qadService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw 

C:\PS&gt;new-qadGroup -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -name &#39;group1&#39; -samAccountName &#39;group1&#39; -grouptype &#39;Distribution&#39; -groupscope &#39;Universal&#39;

C:\PS&gt;disconnect-qadService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, create a new universal distribution group, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-qadService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;import-csv C:\temp\data.csv | %{new-qadGroup -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -name $_.&#39;group name&#39; -samAccountName $_.&#39;group name&#39;}

C:\PS&gt;disconnect-qadService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, import a CSV file, for each record in the file create a new global security group with the name matching the value in the &#39;group name&#39; column in the CSV file, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-QADGroup -Service &#39;server.domain.local:389&#39; -Name &#39;group1&#39; -ParentContainer &#39;&lt;DN of container&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and create a new AD LDS group in a certain container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADObject
		</command:name>
		<maml:description>
			<maml:para>Create a new object of in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a directory object of the specified schema class and a given name in the container. The cmdlet also allows for setting other properties (for example, the mandatory properties) on the new object.

The cmdlet can use the connection that is established by the Connect-QADService cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name for the new object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Specify the object class of the object to be created. This is the name of a schema class object, such as User or Group. The cmdlet creates a directory object of the object class specified by the value of this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;description&#39; attribute on the object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the value of the &#39;displayName&#39; attribute on the object to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NamingProperty</maml:name>
				<maml:description>
					<maml:para>Supply the LDAP name of the naming attribute specific to the object class of the object you want to create. The naming attribute qualifies the object&#39;s relative distinguished name. If this parameter is omitted, the naming attribute is assumed to be cn, which is suitable for most object classes. Other possible values are ou (naming attribute of the organizationalUnit object class) and dc (naming attribute of the domain object class).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.  Thus, passing the @{sAMAccountName=&#39;Amins&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;sAMAccountName&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;description&#39; attribute on the object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the value of the &#39;displayName&#39; attribute on the object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name for the new object to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NamingProperty</maml:name>
			<maml:description>
				<maml:para>Supply the LDAP name of the naming attribute specific to the object class of the object you want to create. The naming attribute qualifies the object&#39;s relative distinguished name. If this parameter is omitted, the naming attribute is assumed to be cn, which is suitable for most object classes. Other possible values are ou (naming attribute of the organizationalUnit object class) and dc (naming attribute of the domain object class).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.  Thus, passing the @{sAMAccountName=&#39;Amins&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;sAMAccountName&#39; attribute to &#39;Admins&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Specify the object class of the object to be created. This is the name of a schema class object, such as User or Group. The cmdlet creates a directory object of the object class specified by the value of this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-qadObject -ParentContainer &#39;OU=ComputersOU,DC=company,DC=com&#39; -type &#39;computer&#39; -name &#39;comp1&#39; -ObjectAttributes @{sAMAccountName=&#39;comp1$&#39;}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, and create a new computer object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-qadService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw 

C:\PS&gt;new-qadObject -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -type &#39;organizationalUnit&#39; -NamingProperty &#39;ou&#39; -name &#39;Child OU&#39;

C:\PS&gt;disconnect-qadService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, create a new organizational unit, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-QADObject -Service &#39;server.domain.local:389&#39; -ParentContainer &#39;&lt;DN of container&gt;&#39; -Type &#39;user&#39; -Name &#39;John Smith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and create a new AD LDS user object in a certain container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADPasswordSettingsObject
		</command:name>
		<maml:description>
			<maml:para>Create a new Password Settings object (PSO). Active Directory version of Windows Server 2008 or later is required.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADPasswordSettingsObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a Password Settings object (PSO) and set attribute values in the newly created object. 

This cmdlet takes a series of attribute-specific parameters allowing you to set attributes in the newly created Password Settings object. If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADPasswordSettingsObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name (CN) for the new Password Settings object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Specify a list of users and groups to which you want the Password Settings object to apply. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>Specify the lockout duration for locked out user accounts (set the &#39;msDS-LockoutDuration&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpanAndMinutesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>Specify the lockout threshold for lockout of user accounts (set the &#39;msDS-LockoutThreshold&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaximumPasswordAge</maml:name>
				<maml:description>
					<maml:para>Specify the Maximum Password Age setting for user accounts (set the &#39;msDS-MaximumPasswordAge&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpanAndDaysParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumPasswordAge</maml:name>
				<maml:description>
					<maml:para>Specify the Minimum Password Age setting for user accounts (set the &#39;msDS-MinimumPasswordAge&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpanAndDaysParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumPasswordLength</maml:name>
				<maml:description>
					<maml:para>Specify the Minimum Password Length setting for user accounts (set the &#39;msDS-MinimumPasswordLength&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the distinguished name of the container in which you want this cmdlet to create a new Password Settings object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to determine the password complexity status for user accounts (set the &#39;msDS-PasswordComplexityEnabled&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryLength</maml:name>
				<maml:description>
					<maml:para>Specify the Password History Length setting for user accounts (set the &#39;msDS-PasswordHistoryLength&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>Specify the password settings precedence (set the &#39;msDS-PasswordSettingsPrecedence&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResetLockoutCounterAfter</maml:name>
				<maml:description>
					<maml:para>Specify the Observation Window setting for lockout of user accounts (set the &#39;msDS-LockoutObservationWindow&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpanAndMinutesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to determine the password reversible encryption status for user accounts (set the &#39;msDS-PasswordReversibleEncryptionEnabled&#39; attribute to this parameter value).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>Specify a list of users and groups to which you want the Password Settings object to apply. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>Specify the lockout duration for locked out user accounts (set the &#39;msDS-LockoutDuration&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpanAndMinutesParameter</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndMinutesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>Specify the lockout threshold for lockout of user accounts (set the &#39;msDS-LockoutThreshold&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaximumPasswordAge</maml:name>
			<maml:description>
				<maml:para>Specify the Maximum Password Age setting for user accounts (set the &#39;msDS-MaximumPasswordAge&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpanAndDaysParameter</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndDaysParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumPasswordAge</maml:name>
			<maml:description>
				<maml:para>Specify the Minimum Password Age setting for user accounts (set the &#39;msDS-MinimumPasswordAge&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of days). This must be a negative value (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpanAndDaysParameter</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndDaysParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumPasswordLength</maml:name>
			<maml:description>
				<maml:para>Specify the Minimum Password Length setting for user accounts (set the &#39;msDS-MinimumPasswordLength&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name (CN) for the new Password Settings object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the distinguished name of the container in which you want this cmdlet to create a new Password Settings object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to determine the password complexity status for user accounts (set the &#39;msDS-PasswordComplexityEnabled&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryLength</maml:name>
			<maml:description>
				<maml:para>Specify the Password History Length setting for user accounts (set the &#39;msDS-PasswordHistoryLength&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>Specify the password settings precedence (set the &#39;msDS-PasswordSettingsPrecedence&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResetLockoutCounterAfter</maml:name>
			<maml:description>
				<maml:para>Specify the Observation Window setting for lockout of user accounts (set the &#39;msDS-LockoutObservationWindow&#39; attribute to this parameter value). Parameter value can be represented as any of the following: Int64, IADsLargeInteger, DateTime, TimeSpan, string (a string representation of Int64, DateTime or TimeSpan), or Int (a number of minutes). This must be a negative value (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpanAndMinutesParameter</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpanAndMinutesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>Specify either &#39;true&#39; or &#39;false&#39; to determine the password reversible encryption status for user accounts (set the &#39;msDS-PasswordReversibleEncryptionEnabled&#39; attribute to this parameter value).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
New-QADPasswordSettingsObject -Name &#39;myPso1&#39; -LockoutDuration 40 -Precedence 10 -MaximumPasswordAge (new-timespan -days -45 -hour -3 -minute -23) -AppliesTo &#39;myDomain\Account Operators&#39;,&#39;myDomain\Event Log Readers&#39; | Format-List                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a new PSO named myPso1 with LockoutDuration of 40 min, Precedence of 10 and MaximumPasswordAge of 45 days, 3 hours and 23 minutes and default values for the other parameters, and apply it to two groups, and display operation results.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADUser
		</command:name>
		<maml:description>
			<maml:para>Create a new user account in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a user account in Active Directory and, optionally, set attribute values in the newly created account.

This cmdlet takes a series of optional, attribute-specific parameters allowing you to set attributes in the newly created account. Thus, to set the value of the &#39;givenName&#39;, &#39;sn&#39;, or &#39;l&#39; attribute, you can use the -FirstName, -LastName, or -City parameter, respectively.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specify the name (CN) for the new user account to be created.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ParentContainer</maml:name>
				<maml:description>
					<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new user account.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Set the &#39;l&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>Set the &#39;company&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>Set the &#39;department&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>Set the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FirstName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;givenName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>Set the &#39;homePhone&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>Set the &#39;initials&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;sn&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonScript</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>Set the &#39;manager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>Set the &#39;mobile&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Set the &#39;info&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>Set the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Pager</maml:name>
				<maml:description>
					<maml:para>Set the &#39;pager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PhoneNumber</maml:name>
				<maml:description>
					<maml:para>Set the &#39;telephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Set the &#39;postalCode&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostOfficeBox</maml:name>
				<maml:description>
					<maml:para>Set the &#39;postOfficeBox&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StateOrProvince</maml:name>
				<maml:description>
					<maml:para>Set the &#39;st&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Set the &#39;streetAddress&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>Set the &#39;title&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPassword</maml:name>
				<maml:description>
					<maml:para>Set the user password.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;userPrincipalName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WebPage</maml:name>
				<maml:description>
					<maml:para>Set the &#39;wWWHomePage&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Set the &#39;l&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>Set the &#39;company&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>Set the &#39;department&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>Set the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FirstName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;givenName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>Set the &#39;homePhone&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>Set the &#39;initials&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;sn&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonScript</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>Set the &#39;manager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>Set the &#39;mobile&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Specify the name (CN) for the new user account to be created.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Set the &#39;info&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>Set the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Pager</maml:name>
			<maml:description>
				<maml:para>Set the &#39;pager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ParentContainer</maml:name>
			<maml:description>
				<maml:para>Specify the distinguished name (DN) of the container in which you want this cmdlet to create a new user account.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PhoneNumber</maml:name>
			<maml:description>
				<maml:para>Set the &#39;telephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Set the &#39;postalCode&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostOfficeBox</maml:name>
			<maml:description>
				<maml:para>Set the &#39;postOfficeBox&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StateOrProvince</maml:name>
			<maml:description>
				<maml:para>Set the &#39;st&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Set the &#39;streetAddress&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>Set the &#39;title&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPassword</maml:name>
			<maml:description>
				<maml:para>Set the user password.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;userPrincipalName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WebPage</maml:name>
			<maml:description>
				<maml:para>Set the &#39;wWWHomePage&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-QADUser -name &#39;user1&#39; -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -samAccountName &#39;user1&#39; -UserPassword &#39;P@ssword&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, create a new user account, and set a password for the new account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw 

C:\PS&gt;new-QADUser -name &#39;user1&#39; -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -UserPassword &#39;P@ssword&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, create a new user account, set a password for the new account, and then disconnect (this example assumes that a value for the sAMAccountName attribute is to be generated by Quest One ActiveRoles, based on a provisioning policy).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-qadService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;import-csv C:\temp\data.csv | %{new-qadUser -ParentContainer &#39;OU=companyOU,DC=company,DC=com&#39; -name $_.&#39;user name&#39;}

C:\PS&gt;disconnect-qadService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, import a CSV file, for each record in the file create a new user account with the name matching the value in the &#39;user name&#39; column in the CSV file, and then disconnect.
In this example, the % character preceding the script block is an alias for the ForEach-Object cmdlet. The sAMAccountName attribute is assumed to be set by Quest One ActiveRoles.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
new-QADUser -Service &#39;server.domain.local:389&#39; -Name &#39;user1&#39; -ParentContainer &#39;&lt;DN of container&gt;&#39; -UserPassword &#39;P@ssword&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and create a new AD LDS user object in a certain container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QARSAccessTemplateLink
		</command:name>
		<maml:description>
			<maml:para>Use this cmdlet to apply Quest One ActiveRoles Access Templates. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QARSAccessTemplateLink</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Using this cmdlet, you can apply Access Templates in Quest One ActiveRoles. The operation of applying an Access Template boils down to creation of an Access Template link. This cmdlet can take Access Template objects returned by the respective Get- cmdlet and create Access Template links, thus applying the Access Templates. Each Access Template link contains information on how a certain Access Template is applied to determine access rights of a certain security principal (Trustee) on a certain directory object (securable object). For background information about Access Templates, see the Quest One ActiveRoles Administrator Guide.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QARSAccessTemplateLink</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Optionally, specify a name for the link to create. If you omit this parameter, a name is auto-generated.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessTemplate</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template you want. The cmdlet creates a link to apply that Access Template.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>DirectoryObject</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet configures the link to apply the Access Template to that object (determine security settings on that object).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Trustee</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as a user or group) you want. The cmdlet configures the link to determine access rights of that security principal (set the specified object as Trustee).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AppliedTo</maml:name>
				<maml:description>
					<maml:para>Set permission inheritance options on the link. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.

Default setting is &#39;ThisObjectAndAllChildObjects&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Optionally, specify a description for the link.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Disabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the cmdlet to configure the link to have no effect in Quest One ActiveRoles (disabled link).</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;displayName&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Optionally, specify an associative array that defines the Access Template link attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SynchronizedToAD</maml:name>
				<maml:description>
					<maml:para>If you want the cmdlet to configure the link so as to propagate permission settings to Active Directory, set the value of this parameter to &#39;true&#39;. Otherwise, omit this parameter or set the parameter value to &#39;false&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccessTemplate</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template you want. The cmdlet creates a link to apply that Access Template.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AppliedTo</maml:name>
			<maml:description>
				<maml:para>Set permission inheritance options on the link. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.

Default setting is &#39;ThisObjectAndAllChildObjects&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			<dev:type>
				<maml:name>ATLinkFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Optionally, specify a description for the link.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DirectoryObject</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet configures the link to apply the Access Template to that object (determine security settings on that object).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the cmdlet to configure the link to have no effect in Quest One ActiveRoles (disabled link).</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;displayName&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Optionally, specify a name for the link to create. If you omit this parameter, a name is auto-generated.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Optionally, specify an associative array that defines the Access Template link attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SynchronizedToAD</maml:name>
			<maml:description>
				<maml:para>If you want the cmdlet to configure the link so as to propagate permission settings to Active Directory, set the value of this parameter to &#39;true&#39;. Otherwise, omit this parameter or set the parameter value to &#39;false&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Trustee</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as a user or group) you want. The cmdlet configures the link to determine access rights of that security principal (set the specified object as Trustee).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;new-QARSAccessTemplateLink -AccessTemplate &#39;Configuration/Access Templates/Active Directory/All Objects - Full Control&#39; -DirectoryObject &#39;Configuration/Managed Units/ManagedUnitName&#39; -Trustee &#39;DomainName\GroupName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Give a certain group full control access to a certain Managed Unit in Quest One ActiveRoles. This command applies the appropriate pre-defined Access Template, creating an Access Template link on the Managed Unit, with the given group set as Trustee. The default permission inheritance setting (ThisObjectAndAllChildObjects) causes the Access Template link information to be used on any object in the managed domains.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QADObject -SearchRoot &#39;CN=Active Directory&#39; -Type &#39;domainDNS&#39; | %{new-QARSAccessTemplateLink -AccessTemplate &#39;Configuration/Access Templates/Active Directory/All Objects - Read All Properties&#39; -DirectoryObject $_ -Trustee &#39;Authenticated Users&#39;}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available Administration Service. Then, configure security settings in Quest One ActiveRoles so as to give any authenticated user read access to any object in the Active Directory domains that are registered with Quest One ActiveRoles (managed domains). This command applies the appropriate pre-defined Access Template, creating an Access Template link on each of the domainDNS objects representing the managed domains, with Authenticated Users set as Trustee. The default permission inheritance setting (ThisObjectAndAllChildObjects) causes the Access Template link information to be used on any object in the managed domains.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Publish-QARSGroup
		</command:name>
		<maml:description>
			<maml:para>Publish a group by setting the edsvaPublished attribute.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Publish</command:verb>
		<command:noun>QARSGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to publish groups by setting the edsvaPublished attribute. Publishing a group makes the group joinable by other people based on owner approval. 

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Publish-QARSGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of the group to publish. The cmdlet publishes the group specified by this parameter. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Keywords</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users identify the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array or an associative array that specifies one or more keywords to assign to the group or remove from the group. Some examples of possible parameter values are:

-Keywords &#39;keyword 1&#39;,&#39;keyword 2&#39;
Replace all the existing keywords with the keywords specified.

-Keywords @{append=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Add the specified keywords without removing the existing keywords.

-Keywords @{delete=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Remove the specified keywords, leaving the other keywords intact.

-Keywords $null
Remove all the existing keywords.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">UpdateStringParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireManagerApproval</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether user requests to join or leave the group require approval by the primary owner (manager) of the group. The parameter value of $true configures the group to require approval. If you omit this parameter, or use the parameter value of $false, the group is configured so that approval is not required.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireSecondaryOwnerApproval</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether user requests to join or leave the group require approval by a secondary owner of the group. The parameter value of $true configures the group to require approval. If you omit this parameter, or use the parameter value of $false, the group is configured so that approval is not required.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of the group to publish. The cmdlet publishes the group specified by this parameter. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Keywords</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users identify the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array or an associative array that specifies one or more keywords to assign to the group or remove from the group. Some examples of possible parameter values are:

-Keywords &#39;keyword 1&#39;,&#39;keyword 2&#39;
Replace all the existing keywords with the keywords specified.

-Keywords @{append=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Add the specified keywords without removing the existing keywords.

-Keywords @{delete=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Remove the specified keywords, leaving the other keywords intact.

-Keywords $null
Remove all the existing keywords.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UpdateStringParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>UpdateStringParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireManagerApproval</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether user requests to join or leave the group require approval by the primary owner (manager) of the group. The parameter value of $true configures the group to require approval. If you omit this parameter, or use the parameter value of $false, the group is configured so that approval is not required.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireSecondaryOwnerApproval</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether user requests to join or leave the group require approval by a secondary owner of the group. The parameter value of $true configures the group to require approval. If you omit this parameter, or use the parameter value of $false, the group is configured so that approval is not required.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Publish-QARSGroup &#39;DomainName\GroupName&#39; -RequireManagerApproval -Proxy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Publish a group so that the user requests to join or leave the group require approval by the manager of the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Publish-QARSGroup &#39;DomainName\GroupName&#39; -Keywords @{append=@(&#39;Published for Self-Service&#39;)} -RequireManagerApproval -Proxy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>When publishing a group, add the &quot;Published for Self-Service&quot; expression to the list of keywords on that group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Reject-QARSApprovalTask
		</command:name>
		<maml:description>
			<maml:para>Apply the Reject resolution on approval tasks for which you are assigned to the Approver role in Quest One ActiveRoles.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Reject</command:verb>
		<command:noun>QARSApprovalTask</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to reject change requests that require your approval in Quest One ActiveRoles. You can take an object returned by the Get-QARSApprovalTask cmdlet and pipe that object into this cmdlet in order to complete the respective approval task with the Reject resolution.

Every change request that requires your approval has an approval task for you to allow or deny the requested changes. When you complete your approval task with the Reject resolution, you effectively deny the changes, preventing them from being applied. Note that the changes may also require approval by other persons. In this case, the changes are not applied if any one of the approval tasks is completed with the Reject resolution. For more information about approval tasks, see description of the Get-QARSApprovalTask cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Reject-QARSApprovalTask</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Task</maml:name>
				<maml:description>
					<maml:para>Pass an object returned by the Get-QARSApprovalTask cmdlet to this parameter. This parameter also accepts the numeric ID of an approval task (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TaskIdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Reason</maml:name>
				<maml:description>
					<maml:para>Supply any text you want to comment your decision. This text is saved by Quest One ActiveRoles for reporting and audit purposes, and can be accesses through the respective property of the ApprovalTask object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Reason</maml:name>
			<maml:description>
				<maml:para>Supply any text you want to comment your decision. This text is saved by Quest One ActiveRoles for reporting and audit purposes, and can be accesses through the respective property of the ApprovalTask object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Task</maml:name>
			<maml:description>
				<maml:para>Pass an object returned by the Get-QARSApprovalTask cmdlet to this parameter. This parameter also accepts the numeric ID of an approval task (you can view task ID in the Approval section of the Quest One ActiveRoles Web Interface).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TaskIdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>TaskIdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -TargetObject &#39;domainName\userName&#39; -InitiatedOn &#39;Today&#39; -OperationStatus Pending | %{Get-QARSApprovalTask -Operation $_ -ApproverIsMe} | Reject-QARSApprovalTask                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Reject all changes to a particular user account that were requested on the current date and are awaiting approval by the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QARSOperation -TargetObject &#39;domainName\userName&#39; -InitiatedBy &#39;MyDomain\JohnSmith&#39; -OperationStatus Pending | %{Get-QARSApprovalTask -Operation $_ -ApproverIsMe} | Reject-QARSApprovalTask                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Reject all changes to a particular user account that were requested by the user &#39;MyDomain\JohnSmith&#39; and are awaiting approval by the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Remove one or more members from a group in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove members from a group in Active Directory. You can specify a list of objects to remove, separating the list items by commas.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group from which you want to remove members.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Member</maml:name>
				<maml:description>
					<maml:para>Specify a list of objects you want this cmdlet to remove from the group. Each list entry is the DN, SID, GUID, UPN or Domain\Name of an object to remove from the group. Separate the list entries by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group from which you want to remove members.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Member</maml:name>
			<maml:description>
				<maml:para>Specify a list of objects you want this cmdlet to remove from the group. Each list entry is the DN, SID, GUID, UPN or Domain\Name of an object to remove from the group. Separate the list entries by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw 

C:\PS&gt;remove-QADGroupMember -identity &#39;CN=group1,OU=companyOU,DC=company,DC=com&#39; -member &#39;company\jsmith&#39;,&#39;S-1-5-21-1279736177-1630491018-182859109-1215&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, remove two members (the first one specified by Domain\AccounrName, the second one specified by SID) from the group, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
remove-QADGroupMember &#39;&lt;DN of group&gt;&#39; -Service &#39;server.domain.local:389&#39; -Member &#39;&lt;DN of object&gt;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS group by DN, and remove the object with a certain DN from the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$user = Get-QADUser domainName\userName -Service foreign.domain.com

C:\PS&gt;Remove-QADGroupMember domainName\groupName $user                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove a user that resides in an external trusted domain, from a group (the user and the group are located in different forests).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADMemberOf
		</command:name>
		<maml:description>
			<maml:para>Remove a particular object from particular groups in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADMemberOf</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove a single object from groups in Active Directory. You can specify a list of groups from which you want to remove the object, separating the list entries by commas. The cmdlet also provides the option to remove the object from all groups.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted since a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADMemberOf</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QAD cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemoveAll</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if you want the cmdlet to remove the object specified by the Identity parameter from all groups.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-QADMemberOf</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QAD cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Group</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group or groups from which you want the cmdlet to remove the object specified by the Identity parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Group</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group or groups from which you want the cmdlet to remove the object specified by the Identity parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the object whose group memberships you want the cmdlet to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QAD cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemoveAll</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if you want the cmdlet to remove the object specified by the Identity parameter from all groups.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Remove-QADMemberOf &#39;domainName\userName&#39; -Group &#39;domainName\groupName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove a particular user from a particular group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Remove-QADMemberOf &#39;domainName\userName&#39; -RemoveAll                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove a particular user from all groups.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADObject
		</command:name>
		<maml:description>
			<maml:para>Delete the specified objects in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to delete objects in Active Directory. An object to delete can be specified by DN, SID, GUID, UPN or Domain\Name, or it can be located by using a Get- cmdlet and then piped into the Remove- cmdlet (see examples).

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to delete.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeleteTree</maml:name>
				<maml:description>
					<maml:para>Deletes the specified object along with all child objects it contains (the entire sub-tree). If you omit this parameter, the cmdlet fails to delete container objects that hold any child objects.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Overrides restrictions that prevent the command from succeeding, just so the changes do not compromise security.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeleteTree</maml:name>
			<maml:description>
				<maml:para>Deletes the specified object along with all child objects it contains (the entire sub-tree). If you omit this parameter, the cmdlet fails to delete container objects that hold any child objects.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Overrides restrictions that prevent the command from succeeding, just so the changes do not compromise security.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to delete.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
remove-QADObject &#39;MyDomain\JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific user object by Domain\Name, and delete the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
get-QADUser -searchRoot &#39;mydomain.company.com/usersOU&#39; | remove-QADObject -confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, and delete all user objects that are located in a specific container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;remove-QADObject &#39;mydomain.company.com/usersOU&#39; -deleteTree -force

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, and delete a certain container along with all objects that are located in that container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
remove-QADObject &#39;&lt;DN of object&gt;&#39; -Service &#39;server.domain.local:389&#39; -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS object by DN, and delete the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADPasswordSettingsObjectAppliesTo
		</command:name>
		<maml:description>
			<maml:para>Remove PSO links on a Password Settings object. Active Directory version of Windows Server 2008 or later is required.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADPasswordSettingsObjectAppliesTo</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove PSO links on a Password Settings object in order to have the Password Settings object no longer apply to certain users or groups. You can specify a list of users and groups, separating the list entries by commas. The cmdlet removes the specified distinguished names of the users or groups from the &#39;msDS-PSOAppliesTo&#39; attribute of the Password Settings object.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADPasswordSettingsObjectAppliesTo</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN or GUID of the Password Settings object.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADPasswordSettingsObject cmdlet, to have that object identify the Password Settings object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>AppliesTo</maml:name>
				<maml:description>
					<maml:para>Specify a list of users and groups that you want the Password Settings object to no longer apply to. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>AppliesTo</maml:name>
			<maml:description>
				<maml:para>Specify a list of users and groups that you want the Password Settings object to no longer apply to. Each list entry is the DN, SID, GUID, UPN or Domain\Name of a user or group. Separate the list entries by commas.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">IdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN or GUID of the Password Settings object.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADPasswordSettingsObject cmdlet, to have that object identify the Password Settings object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPasswordSettingsObject -Name &#39;myPso1&#39; | Remove-QADPasswordSettingsObjectAppliesTo -AppliesTo &#39;myDomain\Account Operators&#39; | Format-List                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Find a Password Settings object by name, remove a PSO link that points to the group (so the Password Settings object no longer applies to that group), and display operation results.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADPermission
		</command:name>
		<maml:description>
			<maml:para>Delete access control entries (ACEs) from the discretionary access control list (DACL) of a directory object or objects.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADPermission</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to delete access control entries (ACEs) from the discretionary access control list (DACL) of an object or objects in the directory (directory objects).

The objects representing ACEs to remove can be passed to this cmdlet through the pipeline. You can have Get-QADPermission retrieve ACEs and then pass the output of that cmdlet to the Add-QADPermission cmdlet so as to delete ACEs from the directory object or objects from which the ACEs have been retrieved (see examples).

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADPermission</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>InputPermission</maml:name>
				<maml:description>
					<maml:para>This parameter is used to identify the object or objects representing the ACEs to delete. The parameter accepts parameter values from the pipeline. Thus, when you use pipelining to pass to this cmdlet the objects returned by the Get-QADPermission cmdlet, you should not supply this parameter on the command line (see examples). Another option is to save the object in a variable and then supply that variable as a parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsPermission</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>InputPermission</maml:name>
			<maml:description>
				<maml:para>This parameter is used to identify the object or objects representing the ACEs to delete. The parameter accepts parameter values from the pipeline. Thus, when you use pipelining to pass to this cmdlet the objects returned by the Get-QADPermission cmdlet, you should not supply this parameter on the command line (see examples). Another option is to save the object in a variable and then supply that variable as a parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsPermission</command:parameterValue>
			<dev:type>
				<maml:name>ArsPermission</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPermission &#39;DistinguishedNameOfObject&#39; -Deny | Remove-QADPermission                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Delete all the deny-type ACEs that are configured on a given directory object (not including the inherited ACEs or the schema default ACEs).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QARSAccessTemplateLink
		</command:name>
		<maml:description>
			<maml:para>Delete Access Template links in Quest One ActiveRoles. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QARSAccessTemplateLink</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to delete existing links of Access Templates in Quest One ActiveRoles. This cmdlet takes Access Template links returned by the respective Get- cmdlet, and requests Quest One ActiveRoles to delete those links. Each Access Template link contains information on how a certain Access Template is applied to determine access rights of a certain security principal (Trustee) on a certain directory object (securable object). For background information about Access Templates, see the Quest One ActiveRoles Administrator Guide.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QARSAccessTemplateLink</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>You can specify the name, canonical name, or distinguished name (DN) of the link to delete (so as to identify the respective object located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace).

Normally, pipelining is used to identify links: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>You can specify the name, canonical name, or distinguished name (DN) of the link to delete (so as to identify the respective object located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace).

Normally, pipelining is used to identify links: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;new-QARSAccessTemplateLink newATLink -AccessTemplate &#39;Configuration/Access Templates/Active Directory/All Objects - Full Control&#39; -DirectoryObject &#39;CN=Active Directory&#39; -Trustee &#39;Authenticated Users&#39;

C:\PS&gt;remove-QARSAccessTemplateLink newATLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available Administration Service, create a new Access Template link, and then delete the link you created.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -Predefined $false | remove-QARSAccessTemplateLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template, ensure that the Access Template is no longer applied to any object (delete all links that are based on that Access Template).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -DirectoryObject &#39;OrganizationalUnitName&#39; -Predefined $false | remove-QARSAccessTemplateLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template and the name of an organizational unit (OU), remove all security settings on that OU that are determined by that Access Template (remove all links that are based on the given Access Template and applied to the given OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -Trustee &#39;domainName\groupName&#39; -Predefined $false | remove-QARSAccessTemplateLink -Confirm                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Given the name of an Access Template and the pre-Windows 2000 name of a group, revoke all access rights from that group that are defined by using that Access Template (remove all links that are based on the given Access Template and point to the given group).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-QADObject
		</command:name>
		<maml:description>
			<maml:para>Change the name of the specified object in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to rename an object in Active Directory. The cmdlet sets the &#39;name&#39; attribute of the object to the value specified, thus causing the corresponding change to the distinguished name of the object. An object to rename can be specified by DN, SID, GUID, UPN or Domain\Name, or it can be located by using a Get- cmdlet and then piped into the Rename- cmdlet.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-QADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to rename.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Specify the new name you want to assign to the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object you want to rename.

This parameter is optional since you can pipe into this cmdlet the object returned by a Get- cmdlet, to have that object identify the object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>Specify the new name you want to assign to the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
rename-QADObject &#39;MyDomain\JSmith&#39; -NewName &#39;Jane Smith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific user object by Domain\Name, and assign the new name to the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Reset-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Reset a computer object in Active Directory Domain Services.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Reset</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to reset a computer account in Active Directory. When resetting a computer account, you reset the secure channel between the computer that uses that account to join the domain and a domain controller in the domain. A secure channel is necessary for a computer to authenticate successfully to the domain. Note that resetting a computer account breaks that computer&#39;s connection to the domain and requires it to rejoin the domain.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Reset-QADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to reset.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to reset.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or DomainName\sAMAccountName of the computer account you want to reset.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADComputer cmdlet, to have that object identify the computer account to reset.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
reset-QADComputer &#39;CN=LAB-SRV1,CN=Computers,DC=dom,DC=local&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Reset the computer account identified by its Distinguished Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Restore-QADDeletedObject
		</command:name>
		<maml:description>
			<maml:para>Undelete objects in Active Directory by restoring tombstones back into normal objects. This cmdlet requires an Active Directory domain controller running Windows Server 2003 or later. If Active Directory Recycle Bin (a feature of Windows Server 2008 R2) is enabled, this cmdlet restores deleted objects from Recycle Bin.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Restore</command:verb>
		<command:noun>QADDeletedObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to recover deleted objects in Active Directory. Pipe a deleted object into this cmdlet in order to restore (undelete) that object. Deleted objects can be retrieved by using an appropriate Get-QAD* cmdlet with the Tombstone parameter.

When an object is deleted, it is not physically removed from the Active Directory database. Instead, Active Directory marks the object as deleted, clears most of the object&#39;s attributes, renames the object and moves it to a special container. The object becomes a tombstone. This cmdlet causes Active Directory to perform the necessary operations on the tombstone to reanimate the object, which effectively results in the object being undeleted.

The object&#39;s attributes that were cleared upon object deletion are not restored. However, certain attributes, the most important of which are identity-related attributes such as objectGUID and objectSid, are retained in the tombstone, and restored when the object is undeleted. Which attributes are retained in tombstones is determined by Active Directory. Thus, the attributes that have the 0x8 bit set in the searchFlags attribute of the attributeSchema definition are retained.

The cmdlet relies on the &quot;restore deleted objects&quot; feature of Active Directory. To enable this feature, at least one domain controller in the domain must be running on Windows Server 2003 or a later version of Microsoft Windows Server. Ensure that the cmdlet is connected to such a domain controller. Normally, only domain administrators are allowed to restore deleted objects. For information about access rights required to restore deleted objects and limitations that apply to restoring deleted objects, see topic &quot;Restoring Deleted Objects&quot; in MSDN Library at http://msdn.microsoft.com.

If Active Directory Recycle Bin (a feature of Windows Server 2008 R2) is enabled, the deletion of an object does not turn the object into a tombstone. The object is marked as deleted and moved to a special container, but the attributes of the object are not cleared. In this case, the cmdlet restores the deleted object with all attributes, including the link-valued attributes such as Member Of. As a result, the object is restored to the same state it was in immediately before deletion. For example, a restored user account regains all group memberships that it had at the time of deletion.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted since a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restore-QADDeletedObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>TargetObject</maml:name>
				<maml:description>
					<maml:para>Supply tombstone objects to restore. This parameter is normally used to receive the output of a Get-QAD cmdlet searching for deleted objects (see Tombstone parameter on Get-QAD* cmdlets).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RestoreChildren</maml:name>
				<maml:description>
					<maml:para>This parameter causes the cmdlet to restore both the target object and all of its deleted descendants. Without this parameter, only the target object is restored.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RestoreChildren</maml:name>
			<maml:description>
				<maml:para>This parameter causes the cmdlet to restore both the target object and all of its deleted descendants. Without this parameter, only the target object is restored.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>TargetObject</maml:name>
			<maml:description>
				<maml:para>Supply tombstone objects to restore. This parameter is normally used to receive the output of a Get-QAD cmdlet searching for deleted objects (see Tombstone parameter on Get-QAD* cmdlets).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastKnownParent &#39;&lt;DN of container&gt;&#39; -Name &#39;John Smith*&#39; | Restore-QADDeletedObject                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Restore a user account that was deleted from a particular container and had the name (RDN) of John Smith.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastKnownParent &#39;&lt;DN of container&gt;&#39; -LastChangedOn (get-date) | Restore-QADDeletedObject                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Restore all user accounts that were deleted from a particular container on the current date.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser -Tombstone -LastChangedOn (get-date -year 2008 -month 9 -day 1) | Restore-QADDeletedObject                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Restore all user accounts that were deleted on September 1, 2008.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADObject &lt;DN of container&gt; -Tombstone | Restore-QADDeletedObject -RestoreChildren                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Restore a deleted container and all objects that existed in that container when it was deleted.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADComputer
		</command:name>
		<maml:description>
			<maml:para>Make changes to a computer object in Active Directory Domain Services.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to modify properties of an Active Directory computer object. You can modify some commonly used computer properties by using the corresponding cmdlet parameters. Properties that are not associated with cmdlet parameters can be modified by using the ObjectAttributes parameter. Thus, to modify the value of the &#39;description&#39; or &#39;displayName&#39; attribute, you can use the -Description or -DisplayName parameter, respectively. If a particular attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN), GUID, DomainName\sAMAccountName, or SID of the computer account you want the cmdlet to act upon. The cmdlet makes changes to the computer account identified by this parameter value. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Set the &#39;location&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Not Specified</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;sAMAccountName&#39; attribute (pre-Windows 2000 name) to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwner</maml:name>
				<maml:description>
					<maml:para>Use this parameter to add or remove secondary owners. Parameter value can be a string array or an associative array that specifies the identifiers, such as DN, SID, GUID, UPN or Domain\Name, of one or more users or groups to add or remove from the secondary owner role. Some examples of possible parameter values are:

-SecondaryOwner &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing identities in the secondary owners list with the identities specified.

-SecondaryOwner @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified identities to the secondary owners list, without removing the existing owners.

-SecondaryOwner @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified identities from the secondary owners list, leaving the other owners intact.
-SecondaryOwner $null
Clear the secondary owners list, so that no secondary owners are specified.

This parameter has an effect only in conjunction with the Proxy connection parameter because secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustForDelegation</maml:name>
				<maml:description>
					<maml:para>Supply the parameter value of $true or $false depending on whether or not you want to configure the computer object so that the computer is trusted for delegation. When a computer is trusted for delegation, any service running under the Local System account on that computer can access resources on other computers and impersonate its clients when accessing resources on other computers.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN), GUID, DomainName\sAMAccountName, or SID of the computer account you want the cmdlet to act upon. The cmdlet makes changes to the computer account identified by this parameter value. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Set the &#39;location&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user or group to be set as the &#39;managedBy&#39; attribute value on the object in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Not Specified</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;sAMAccountName&#39; attribute (pre-Windows 2000 name) to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwner</maml:name>
			<maml:description>
				<maml:para>Use this parameter to add or remove secondary owners. Parameter value can be a string array or an associative array that specifies the identifiers, such as DN, SID, GUID, UPN or Domain\Name, of one or more users or groups to add or remove from the secondary owner role. Some examples of possible parameter values are:

-SecondaryOwner &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing identities in the secondary owners list with the identities specified.

-SecondaryOwner @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified identities to the secondary owners list, without removing the existing owners.

-SecondaryOwner @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified identities from the secondary owners list, leaving the other owners intact.
-SecondaryOwner $null
Clear the secondary owners list, so that no secondary owners are specified.

This parameter has an effect only in conjunction with the Proxy connection parameter because secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>UpdateIdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustForDelegation</maml:name>
			<maml:description>
				<maml:para>Supply the parameter value of $true or $false depending on whether or not you want to configure the computer object so that the computer is trusted for delegation. When a computer is trusted for delegation, any service running under the Local System account on that computer can access resources on other computers and impersonate its clients when accessing resources on other computers.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADComputer &#39;lab.local/computers/Comp4&#39; -Location &#39;AMS/HQ/Building A&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Modify the location for a given computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADComputer &#39;lab.local/computers/Comp4&#39; -ManagedBy &#39;domainName\logonName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Set the &#39;managedBy&#39; attribute value for a given computer using the pre-Windows 2000 logon name of the user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADComputer &#39;lab.local/computers/Comp4&#39; -objectAttributes @{servicePrincipalName=@(&#39;MSSQLSvc/Comp4.lab.local:1362&#39;,&#39;ldap/Comp4.lab.local:389&#39;)}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Replace the SPN values for a given computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADComputer &#39;lab.local/computers/Comp4&#39; -objectAttributes @{servicePrincipalName=@{Append=@(&#39;MSSQLSvc/Comp4.lab.local:1362&#39;,&#39;ldap/Comp4.lab.local:389&#39;)}}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add two new items to the SPN values for a given computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADGroup
		</command:name>
		<maml:description>
			<maml:para>Modify attributes of a group in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to change or remove values of attributes of a group in Active Directory. 

The cmdlet takes a series of optional, attribute-specific parameters allowing you to make changes to attributes in Active Directory. Thus, to modify the value of the &#39;description&#39; or &#39;displayName&#39; attribute, you can use the -Description or -DisplayName parameter, respectively.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group you want to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.

The first argument on the cmdlet is assumed to be the value of the -Identity parameter when no parameter name is specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;mail&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>Set the group scope. Valid parameter values are: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupType</maml:name>
				<maml:description>
					<maml:para>Set the group type. Valid parameter values are: &#39;Security&#39;; &#39;Distribution&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Keywords</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users find the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array or an associative array that specifies one or more keywords to assign to the group or remove from the group. Some examples of possible parameter values are:

-Keywords &#39;keyword 1&#39;,&#39;keyword 2&#39;
Replace all the existing keywords with the keywords specified.

-Keywords @{append=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Add the specified keywords without removing the existing keywords.

-Keywords @{delete=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Remove the specified keywords, leaving the other keywords intact.

-Keywords $null
Remove all the existing keywords.

This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">UpdateStringParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;managedBy&#39; attribute. Parameter value can be the DN, SID, GUID, UPN or Domain\Name of a user or group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagerCanUpdateMembershipList</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether the manager (primary owner) of the group is allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the manager to add or remove group members; supply the parameter value of $false to configure the group so that its manager is not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Member</maml:name>
				<maml:description>
					<maml:para>Use this parameter to add or remove members from the group. Parameter value can be a string array or an associative array that specifies the identities, such as DN, SID, GUID, UPN or Domain\Name, of one or more objects to add or remove from the group. Some examples of possible parameter values are:

-Member &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing members with the objects specified.

-Member @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified objects to the group.

-Member @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified objects from the group.

-Member $null
Remove all members from the group.

Note that this parameter only makes changes to the &#39;member&#39; attribute, and has no effect on the group members that have the group set as the primary group.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;info&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{info=&#39;Associates&#39;;extensionAttribute2=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set &#39;Notes&#39; to &#39;Associates&#39; and &#39;Custom Attribute 2&#39; to &#39;Paris&#39; on the group.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Published</maml:name>
				<maml:description>
					<maml:para>Set the &#39;edsvaPublished&#39; attribute to this parameter value. When this attribute is set to $true, the group is published, which enables self-service users to submit requests to join or leave that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the group publication status is stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireManagerApproval</maml:name>
				<maml:description>
					<maml:para>Set the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RequireSecondaryOwnerApproval</maml:name>
				<maml:description>
					<maml:para>Set by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwner</maml:name>
				<maml:description>
					<maml:para>Use this parameter to add or remove secondary owners. Parameter value can be a string array or an associative array that specifies the identifiers, such as DN, SID, GUID, UPN or Domain\Name, of one or more users or groups to add or remove from the secondary owner role. Some examples of possible parameter values are:

-SecondaryOwner &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing identities in the secondary owners list with the identities specified.

-SecondaryOwner @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified identities to the secondary owners list, without removing the existing owners.

-SecondaryOwner @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified identities from the secondary owners list, leaving the other owners intact.

-SecondaryOwner $null
Clear the secondary owners list, so that no secondary owners are specified.

This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecondaryOwnersCanUpdateMembershipList</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether secondary owners of the group are allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the secondary owners to add or remove group members; supply the parameter value of $false to configure the group so that its secondary owners are not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;mail&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>Set the group scope. Valid parameter values are: &#39;Global&#39;; &#39;Universal&#39;; &#39;DomainLocal&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupScope</command:parameterValue>
			<dev:type>
				<maml:name>GroupScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupType</maml:name>
			<maml:description>
				<maml:para>Set the group type. Valid parameter values are: &#39;Security&#39;; &#39;Distribution&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">GroupType</command:parameterValue>
			<dev:type>
				<maml:name>GroupType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, or Domain\Name of the group you want to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADGroup cmdlet, to have that object identify the group to act upon.

The first argument on the cmdlet is assumed to be the value of the -Identity parameter when no parameter name is specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Keywords</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply keywords for the group. Keywords are words or phrases that could help users find the group in Quest One ActiveRoles client applications such as the Web Interface. Parameter value can be a string array or an associative array that specifies one or more keywords to assign to the group or remove from the group. Some examples of possible parameter values are:

-Keywords &#39;keyword 1&#39;,&#39;keyword 2&#39;
Replace all the existing keywords with the keywords specified.

-Keywords @{append=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Add the specified keywords without removing the existing keywords.

-Keywords @{delete=@(&#39;keyword 1&#39;,&#39;keyword 2&#39;)}
Remove the specified keywords, leaving the other keywords intact.

-Keywords $null
Remove all the existing keywords.

This parameter has an effect only in conjunction with the Proxy connection parameter because keywords are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UpdateStringParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>UpdateStringParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;managedBy&#39; attribute. Parameter value can be the DN, SID, GUID, UPN or Domain\Name of a user or group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagerCanUpdateMembershipList</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether the manager (primary owner) of the group is allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the manager to add or remove group members; supply the parameter value of $false to configure the group so that its manager is not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Member</maml:name>
			<maml:description>
				<maml:para>Use this parameter to add or remove members from the group. Parameter value can be a string array or an associative array that specifies the identities, such as DN, SID, GUID, UPN or Domain\Name, of one or more objects to add or remove from the group. Some examples of possible parameter values are:

-Member &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing members with the objects specified.

-Member @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified objects to the group.

-Member @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified objects from the group.

-Member $null
Remove all members from the group.

Note that this parameter only makes changes to the &#39;member&#39; attribute, and has no effect on the group members that have the group set as the primary group.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>UpdateIdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;info&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{info=&#39;Associates&#39;;extensionAttribute2=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set &#39;Notes&#39; to &#39;Associates&#39; and &#39;Custom Attribute 2&#39; to &#39;Paris&#39; on the group.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Published</maml:name>
			<maml:description>
				<maml:para>Set the &#39;edsvaPublished&#39; attribute to this parameter value. When this attribute is set to $true, the group is published, which enables self-service users to submit requests to join or leave that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the group publication status is stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireManagerApproval</maml:name>
			<maml:description>
				<maml:para>Set the &#39;edsvaApprovalByPrimaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by the primary owner (manager) of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RequireSecondaryOwnerApproval</maml:name>
			<maml:description>
				<maml:para>Set by the &#39;edsvaApprovalBySecondaryOwnerRequired&#39; attribute to this parameter value. The attribute determines whether changes to the members list of a group require approval by a secondary owner of that group. This parameter has an effect only in conjunction with the Proxy connection parameter because the approval settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwner</maml:name>
			<maml:description>
				<maml:para>Use this parameter to add or remove secondary owners. Parameter value can be a string array or an associative array that specifies the identifiers, such as DN, SID, GUID, UPN or Domain\Name, of one or more users or groups to add or remove from the secondary owner role. Some examples of possible parameter values are:

-SecondaryOwner &#39;domain\administrator&#39;,&#39;domain\user&#39;
Replace the existing identities in the secondary owners list with the identities specified.

-SecondaryOwner @{append=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Add the specified identities to the secondary owners list, without removing the existing owners.

-SecondaryOwner @{delete=@(&#39;domain\administrator&#39;,&#39;domain\user&#39;)}
Remove the specified identities from the secondary owners list, leaving the other owners intact.

-SecondaryOwner $null
Clear the secondary owners list, so that no secondary owners are specified.

This parameter has an effect only in conjunction with the Proxy connection parameter because the secondary owner settings are stored and managed by Quest One ActiveRoles.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">UpdateIdentityParameter[]</command:parameterValue>
			<dev:type>
				<maml:name>UpdateIdentityParameter[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecondaryOwnersCanUpdateMembershipList</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether secondary owners of the group are allowed to add or remove members from that group. Supply the parameter value of $true if you want to allow the secondary owners to add or remove group members; supply the parameter value of $false to configure the group so that its secondary owners are not allowed to add or remove group members. This parameter requires a connection to Quest One ActiveRoles, and therefore it should be used in conjunction with the Proxy connection parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADGroup &#39;MyDomain\AMS Managers&#39; -description &#39;Amsterdam Managers&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific group by Domain\Name, and modify the description of the group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADGroup &#39;&lt;DN of group object&gt;&#39; -Service &#39;server.domain.local:389&#39; -description &#39;My AD LDS group object&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS group object by DN, and modify the description of the AD LDS group object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADGroup MyTestGroup | %{Set-QADGroup $_ -SamAccountName ($_.SamAccountName + &quot;New&quot;)}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Pipe the get-QADGroup output into the setQADGroup cmdlet to change the pre-Windows 2000 group name (add the &quot;New&quot; suffix to the name of the group returned by getQADGroup).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADGroup &#39;CN=TestGroup,OU=Groups,DC=domain,DC=company,DC=com&#39; -samaccountname &#39;My Test Group&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Bind to the group by distinguished name and set the group name (pre-Windows 2000).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADObject
		</command:name>
		<maml:description>
			<maml:para>Modify attributes of an object in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to change or remove values of attributes of an object in Active Directory.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object whose attributes you want to modify. This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QADObject cmdlet, to have that object identify the object to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the object whose attributes you want to modify. This parameter is optional since you can pipe into this cmdlet the object returned by a Get-QADObject cmdlet, to have that object identify the object to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADObject &#39;CN=John Smith,OU=CompanyOU,DC=company,DC=com&#39; -description &#39;Sales person&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific object by DN, and modify the description of the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;set-QADObject -identity &#39;S-1-5-21-1279736177-1630491018-182859109-1305&#39; -description &#39;Service account&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain object by SID, modify the description of the object, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;set-QADObject -identity &#39;company\associates&#39; -ObjectAttributes @{info=&#39;&#39;;description=&#39;All company associates&#39;}

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, bind to a certain object by Domain\Name, set or clear certain attributes, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADObject &#39;&lt;DN of object&gt;&#39; -Service &#39;server.domain.local:389&#39; -description &#39;My AD LDS object&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS object by DN, and modify the description of the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADObjectSecurity
		</command:name>
		<maml:description>
			<maml:para>Update security information on a directory object or objects. You can change the owner of an object or change the option that governs protection of an object from the effects of inherited rights.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADObjectSecurity</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>You can use this cmdlet to perform any of the following tasks on a given directory object (each of these tasks implies certain changes to the security descriptor of the directory object):

 -  Set a given security principal to be the owner of that object.

 -  Specify whether access control entries (ACEs) that are set on the discretionary access
    control list (DACL) of the parent container, and any objects above the parent container
    in the directory hierarchy, are applied to the object&#39;s DACL.

With the latter task, consider that ACEs can be set on a container object, such as an organizationalUnit, domainDNS, container, and so on, and propagated to child objects based on the inheritance flags set on those ACEs. If you want to explicitly control the ACEs on a certain sensitive object, such as a private OU or a special user, you can prevent ACEs from being propagated to the object by its parent container or its parent container&#39;s predecessors.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADObjectSecurity</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will update security information on that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockInheritance</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to configure the security descriptor on the given directory object so that access control entries (ACEs) that are set on the discretionary access control list (DACL) of the parent container, and any objects above the parent container in the directory hierarchy, are not applied to the DACL of that directory object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>This parameter can be used in conjunction with the LockInheritance parameter to remove the inherited ACEs from the directory object.

If you supply this parameter on the command line, the cmdlet removes the ACEs that were previously applied (inherited) from the parent and keeps only those ACEs that are explicitly defined on the directory object.

If you do not supply this parameter, the cmdlet copies the ACEs that were previously applied from the parent, merging them with the ACEs that are explicitly defined on the directory object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-QADObjectSecurity</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will update security information on that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Owner</maml:name>
				<maml:description>
					<maml:para>Specify the identity (name, distinguished name, domain\name. etc.) of the security principal that you want the cmdlet to set as the owner of the given directory object. Another option is to get an object representing the owner you want, save the object in a variable, and supply that variable as a value for this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-QADObjectSecurity</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will update security information on that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UnlockInheritance</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to configure the security descriptor on the given directory object so that access control entries (ACEs) originating from the parent container are applied to the DACL of that directory object in accord with the inheritance flags set on those ACEs.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a directory object you want. The cmdlet will update security information on that object.

You can use pipelining to identify a directory object: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line. See examples.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockInheritance</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to configure the security descriptor on the given directory object so that access control entries (ACEs) that are set on the discretionary access control list (DACL) of the parent container, and any objects above the parent container in the directory hierarchy, are not applied to the DACL of that directory object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Owner</maml:name>
			<maml:description>
				<maml:para>Specify the identity (name, distinguished name, domain\name. etc.) of the security principal that you want the cmdlet to set as the owner of the given directory object. Another option is to get an object representing the owner you want, save the object in a variable, and supply that variable as a value for this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>This parameter can be used in conjunction with the LockInheritance parameter to remove the inherited ACEs from the directory object.

If you supply this parameter on the command line, the cmdlet removes the ACEs that were previously applied (inherited) from the parent and keeps only those ACEs that are explicitly defined on the directory object.

If you do not supply this parameter, the cmdlet copies the ACEs that were previously applied from the parent, merging them with the ACEs that are explicitly defined on the directory object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UnlockInheritance</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to configure the security descriptor on the given directory object so that access control entries (ACEs) originating from the parent container are applied to the DACL of that directory object in accord with the inheritance flags set on those ACEs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADObjectSecurity &#39;DistinguishedNameOfTheObject&#39; -Owner &#39;domainName\userName&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given directory object, set a certain group as the owner of the object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADObjectSecurity &#39;domainName\userName&#39; -LockInheritance -Remove                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Prevent a certain user account from inheriting ACEs from the parent object and remove the ACEs that were previously applied from the parent object or its ancestors. As a result, access to the user account is controlled by only those ACEs that are explicitly set on the account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADObjectSecurity &#39;domain\user&#39; -UnlockInheritance                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Configure security settings on a given user account to allow inheritable ACEs from the parent container to propagate to that user account, merging them with those ACEs that are explicitly set on the user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADComputer -SearchRoot &#39;DistinguishedNameOfTheOU&#39; -SecurityMask &#39;Owner&#39; | Set-QADObjectSecurity -Owner &#39;domainName\administrators&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For every computer object held in a given organizational unit (OU), set the owner of the computer object to the Administrators domain local group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADPSSnapinSettings
		</command:name>
		<maml:description>
			<maml:para>Modify default settings that apply to all cmdlets of this PowerShell snap-in.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADPSSnapinSettings</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>You can use this cmdlet to modify some default settings that have effect within this PowerShell snap-in on any cmdlet where those settings are applicable. The changes you make to default settings are in effect during the current PowerShell session, and are discarded once you close the PowerShell console window. To view the default settings that are currently in effect, use the Get-QADPSSnapinSettings cmdlet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADPSSnapinSettings</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that are excluded from processing by the UseDefaultExcludedProperties parameter on any particular cmdlet. Supply a list of the attribute LDAP display names as the parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForAdObject</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the default list of the object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for objects other than a User, Group, Computer, or Password Settings object. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForComputerObject</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the default list of the Computer object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Computer objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForGroupObject</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the default list of the Group object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Group objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForPasswordSettingsObject</maml:name>
				<maml:description>
					<maml:para>Specify the attributes (an array of their LDAP display names) that you want the Get- cmdlets to output when retrieving objects of the PasswordSettingsObject type from Active Directory. A value for this parameter can be constructed similar to a value for the -DefaultOutputPropertiesForUserObject parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultOutputPropertiesForUserObject</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the default list of the User object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for User objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultPageSize</maml:name>
				<maml:description>
					<maml:para>Specify a new default value of the -PageSize parameter for the Get- cmdlets. This page size value is used if the -PageSize parameter is omitted. Initially, the default value of the -PageSize parameter is set to 50.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultPropertiesExcludedFromNonBaseSearch</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that are not to be retrieved from the directory and stored in the local memory cache by any particular Get- cmdlet during a search with the search scope other than &#39;Base&#39;. Supply a list of the attribute LDAP display names as the parameter value.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultSearchScope</maml:name>
				<maml:description>
					<maml:para>Specify a new default value of the SearchScope parameter for the Get- cmdlets. Acceptable vales are: &#39;Base&#39;, &#39;OneLevel&#39;, &#39;Subtree&#39;. This search scope setting is used if the SearchScope parameter is omitted. Initially, the default value of the SearchScope parameter is set to &#39;Subtree&#39;.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >Base</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >OneLevel</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultSizeLimit</maml:name>
				<maml:description>
					<maml:para>Specify a new default value of the -SizeLimit parameter for the Get- cmdlets. This limitation on the size of the search result set is used if the -SizeLimit parameter is omitted. Initially, the default value of the -SizeLimit parameter is set to 1000.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefaultWildcardMode</maml:name>
				<maml:description>
					<maml:para>Specify a new default value of the -WildcardMode parameter for the Get- cmdlets. Acceptable vales are: &#39;Ldap&#39;, &#39;PowerShell&#39;. This wildcard mode setting is used if the -WildcardMode parameter is omitted. Initially, the default value of the -WildcardMode parameter is set to &#39;Ldap&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Integer8AttributesThatContainDateTimes</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the Integer8 attributes whose values you want to be represented as DateTime objects in the output of the Get- cmdlets by default. Supply a list of the attribute LDAP display names as the parameter value.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Integer8AttributesThatContainNegativeTimeSpans</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the Integer8 attributes whose values you want to be represented as TimeSpan objects in the output of the Get- cmdlets by default. Supply a list of the attribute LDAP display names as the parameter value.

The output TimeSpan objects represent the absolute values of the attributes, and thus indicate positive time intervals regardless of whether an actual attribute value is a negative or positive time interval.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that are excluded from processing by the UseDefaultExcludedProperties parameter on any particular cmdlet. Supply a list of the attribute LDAP display names as the parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForAdObject</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the default list of the object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for objects other than a User, Group, Computer, or Password Settings object. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForComputerObject</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the default list of the Computer object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Computer objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForGroupObject</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the default list of the Group object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for Group objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForPasswordSettingsObject</maml:name>
			<maml:description>
				<maml:para>Specify the attributes (an array of their LDAP display names) that you want the Get- cmdlets to output when retrieving objects of the PasswordSettingsObject type from Active Directory. A value for this parameter can be constructed similar to a value for the -DefaultOutputPropertiesForUserObject parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultOutputPropertiesForUserObject</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the default list of the User object attributes that are to be retrieved from the directory and stored in the local memory cache by a Get- cmdlet during a search for User objects. Supply a list of the attribute LDAP display names as the parameter value.

Note: Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. If a particular attribute is not in the cache, the output object may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultPageSize</maml:name>
			<maml:description>
				<maml:para>Specify a new default value of the -PageSize parameter for the Get- cmdlets. This page size value is used if the -PageSize parameter is omitted. Initially, the default value of the -PageSize parameter is set to 50.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultPropertiesExcludedFromNonBaseSearch</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that are not to be retrieved from the directory and stored in the local memory cache by any particular Get- cmdlet during a search with the search scope other than &#39;Base&#39;. Supply a list of the attribute LDAP display names as the parameter value.

Note: If a cmdlet does not cache a particular attribute, then the output object returned by the cmdlet may not have a property that would provide access to the value of the attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultSearchScope</maml:name>
			<maml:description>
				<maml:para>Specify a new default value of the SearchScope parameter for the Get- cmdlets. Acceptable vales are: &#39;Base&#39;, &#39;OneLevel&#39;, &#39;Subtree&#39;. This search scope setting is used if the SearchScope parameter is omitted. Initially, the default value of the SearchScope parameter is set to &#39;Subtree&#39;.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SearchScope</command:parameterValue>
			<dev:type>
				<maml:name>SearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultSizeLimit</maml:name>
			<maml:description>
				<maml:para>Specify a new default value of the -SizeLimit parameter for the Get- cmdlets. This limitation on the size of the search result set is used if the -SizeLimit parameter is omitted. Initially, the default value of the -SizeLimit parameter is set to 1000.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DefaultWildcardMode</maml:name>
			<maml:description>
				<maml:para>Specify a new default value of the -WildcardMode parameter for the Get- cmdlets. Acceptable vales are: &#39;Ldap&#39;, &#39;PowerShell&#39;. This wildcard mode setting is used if the -WildcardMode parameter is omitted. Initially, the default value of the -WildcardMode parameter is set to &#39;Ldap&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">WildcardMode</command:parameterValue>
			<dev:type>
				<maml:name>WildcardMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Integer8AttributesThatContainDateTimes</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the Integer8 attributes whose values you want to be represented as DateTime objects in the output of the Get- cmdlets by default. Supply a list of the attribute LDAP display names as the parameter value.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Integer8AttributesThatContainNegativeTimeSpans</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the Integer8 attributes whose values you want to be represented as TimeSpan objects in the output of the Get- cmdlets by default. Supply a list of the attribute LDAP display names as the parameter value.

The output TimeSpan objects represent the absolute values of the attributes, and thus indicate positive time intervals regardless of whether an actual attribute value is a negative or positive time interval.

Note: This setting applies only to the properties of a cmdlet&#39;s output object that have the member type of NoteProperty. Such properties are normally added to the output object in order to provide access to the attribute values of the respective directory object that are loaded to the local memory cache but cannot be accessed by using properties of the base object (the object for which the output object serves as a wrapper).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADPSSnapinSettings -DefaultSizeLimit 0                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Configure the Get- cmdlets to return all search results by default (rather than limit the search result set to a maximum of 1000 items).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$list = Get-QADPSSnapinSettings -DefaultOutputPropertiesForUserObject

C:\PS&gt;$list += &#39;msDS-ReplAttributeMetaData&#39;

C:\PS&gt;Set-QADPSSnapinSettings -DefaultOutputPropertiesForUserObject $list                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Configure the Get- cmdlets to cache the &#39;msDS-ReplAttributeMetaData&#39; attribute when retrieving User objects from the directory, in addition to the other attributes that are cached by default.

Caching an attribute guarantees that the value of the attribute can be read by using properties of the output object returned by a Get- cmdlet. Thus, after you have changed configuration so as to cache the &#39;msDS-ReplAttributeMetaData&#39; attribute, you can view the value of that attribute on a user account by using the following command: Get-QADUser &#39;MyDomain\JSmith&#39; | Format-Table name, &#39;msDS-ReplAttributeMetaData&#39;</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADUser
		</command:name>
		<maml:description>
			<maml:para>Modify attributes of a user account in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to change or remove values of attributes of a user account in Active Directory. 

The cmdlet takes a series of optional, attribute-specific parameters allowing you to make changes to user attributes in Active Directory. Thus, to modify the value of the &#39;givenName&#39;, &#39;sn&#39;, or &#39;l&#39; attribute, you can use the -FirstName, -LastName, or -City parameter, respectively.

If a given attribute is referred to by both the ObjectAttributes array and an attribute-specific parameter, the ObjectAttributes setting has no effect on that attribute. The cmdlet sets the attribute to the value specified by the attribute-specific parameter.

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\UserName of the user account you want to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.

The first argument on the cmdlet is assumed to be the value of the -Identity parameter when no parameter name is specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpires</maml:name>
				<maml:description>
					<maml:para>Set the account expiration date on the user account. Parameter value is a DateTime object that specifies the date you want. A null DateTime object configures the user account to never expire.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable`1[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;l&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;company&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;department&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;mail&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FirstName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;givenName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;homeDirectory&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;homeDrive&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;homePhone&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;initials&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;sn&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonScript</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;scriptPath&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;manager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;mobile&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Notes</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;info&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Pager</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;pager&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; to configure the user account so that its password never expires.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PhoneNumber</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;telephoneNumber&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;postalCode&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostOfficeBox</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;postOfficeBox&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;profilePath&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;sAMAccountName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StateOrProvince</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;st&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;streetAddress&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;title&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsAllowLogon</maml:name>
				<maml:description>
					<maml:para>Specify whether the user is allowed to log on to the Terminal Server. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if logon is allowed
    &#39;false&#39; if logon is not allowed</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsBrokenConnectionAction</maml:name>
				<maml:description>
					<maml:para>Specify the action to take when a Terminal Services session limit is reached. Parameter value can be one of these integers:
    1  (The client session should be terminated.)
    0  (The client session should be disconnected.)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsConnectClientDrives</maml:name>
				<maml:description>
					<maml:para>Specify whether to reconnect to mapped client drives at logon. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if reconnection is enabled
    &#39;false&#39; if reconnection is disabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsConnectPrinterDrives</maml:name>
				<maml:description>
					<maml:para>Specify whether to reconnect to mapped client printers at logon. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if reconnection is enabled
    &#39;false&#39; if reconnection is disabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsDefaultToMainPrinter</maml:name>
				<maml:description>
					<maml:para>Specify whether to print automatically to the client&#39;s default printer. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if printing to the client&#39;s default printer is enabled
    &#39;false&#39; if printing to the client&#39;s default printer is disabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsHomeDirectory</maml:name>
				<maml:description>
					<maml:para>Set the path to the Terminal Server home directory for the user. To set a home directory on the local computer, specify a local path; for example, C:\Path. To set a home directory in a network environment, set the TsHomeDrive parameter and specify a UNC path.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsHomeDrive</maml:name>
				<maml:description>
					<maml:para>Set a Terminal Server home drive for the user in a network environment. Parameter value is a string containing a drive letter followed by a colon, to which the UNC path for the Terminal Server home directory is mapped. To set a home directory in a network environment, set both this parameter and the TsHomeDirectory parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsInitialProgram</maml:name>
				<maml:description>
					<maml:para>Set the path and file name of the application that starts automatically when the user logs on to the Terminal Server. To set an initial application to start when the user logs on, set both this parameter and the TsWorkDirectory parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsMaxConnectionTime</maml:name>
				<maml:description>
					<maml:para>Set maximum duration of the Terminal Services session. After the specified time span has elapsed, the session can be disconnected or terminated. Parameter value is a TimeSpan object that specifies the duration you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsMaxDisconnectionTime</maml:name>
				<maml:description>
					<maml:para>Set maximum amount of time that a disconnected Terminal Services session remains active on the Terminal Server. After the specified time span has elapsed, the session is terminated. Parameter value is a TimeSpan object that specifies the amount of time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsMaxIdleTime</maml:name>
				<maml:description>
					<maml:para>Set maximum amount of time that the Terminal Services session can remain idle. After the specified time span has elapsed, the session can be disconnected or terminated. Parameter value is a TimeSpan object that specifies the amount of time you want.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsProfilePath</maml:name>
				<maml:description>
					<maml:para>Set a roaming or mandatory profile path to use when the user logs on to the Terminal Server. A valid parameter value is a string in the following network path format: \\ServerName\ProfilesFolderName\UserName</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsReconnectionAction</maml:name>
				<maml:description>
					<maml:para>Specify whether to allow reconnection to a disconnected Terminal Services session from any client computer. Parameter value can be one of these integers:
    1  (Reconnection is allowed from the original client computer only.)
    0  (Reconnection from any client computer is allowed.)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsRemoteControl</maml:name>
				<maml:description>
					<maml:para>Specify whether to allow remote observation or remote control of the user&#39;s Terminal Services session. Parameter value can be one of these integers:
    0  (Remote control is disabled.)
    1  (The user of remote control has full control of the user&#39;s session,
          with the user&#39;s permission.)
    2  (The user of remote control has full control of the user&#39;s session;
          the user&#39;s permission is not required.)
    3  (The user of remote control can view the session remotely,
          with the user&#39;s permission; the remote user cannot actively control
          the session.)
    4  (The user of remote control can view the session remotely,
          but not actively control the session; the user&#39;s permission
          is not required.)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TsWorkDirectory</maml:name>
				<maml:description>
					<maml:para>Set the Terminal Server working directory path for the user. To set an initial application to start when the user logs on to the Terminal Server, set both this parameter and the TsInitialProgram parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserMustChangePassword</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; to configure the user account so that the user is required to change the password upon the next logon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPassword</maml:name>
				<maml:description>
					<maml:para>Set the user password.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;userPrincipalName&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WebPage</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;wWWHomePage&#39; attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpires</maml:name>
			<maml:description>
				<maml:para>Set the account expiration date on the user account. Parameter value is a DateTime object that specifies the date you want. A null DateTime object configures the user account to never expire.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable`1[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable`1[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;l&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;company&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;department&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;description&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter on the command line if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see help on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;displayName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Email</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;mail&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;facsimileTelephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FirstName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;givenName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;homeDirectory&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;homeDrive&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;homePhone&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\UserName of the user account you want to modify.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.

The first argument on the cmdlet is assumed to be the value of the -Identity parameter when no parameter name is specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to update in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet update some attributes that would not be updated otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;initials&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;sn&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonScript</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;scriptPath&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;manager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;mobile&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Notes</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;info&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Specify an associative array that defines the attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set. Thus, passing the @{title=&#39;Associate&#39;;l=&#39;Paris&#39;} array to the ObjectAttributes parameter causes the cmdlet to set the &#39;Job Title&#39; attribute to &#39;Associate&#39; and the &#39;City&#39; attribute to &#39;Paris&#39;.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;physicalDeliveryOfficeName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Pager</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;pager&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; to configure the user account so that its password never expires.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PhoneNumber</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;telephoneNumber&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;postalCode&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostOfficeBox</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;postOfficeBox&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;profilePath&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;sAMAccountName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StateOrProvince</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;st&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;streetAddress&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;title&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsAllowLogon</maml:name>
			<maml:description>
				<maml:para>Specify whether the user is allowed to log on to the Terminal Server. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if logon is allowed
    &#39;false&#39; if logon is not allowed</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsBrokenConnectionAction</maml:name>
			<maml:description>
				<maml:para>Specify the action to take when a Terminal Services session limit is reached. Parameter value can be one of these integers:
    1  (The client session should be terminated.)
    0  (The client session should be disconnected.)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsConnectClientDrives</maml:name>
			<maml:description>
				<maml:para>Specify whether to reconnect to mapped client drives at logon. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if reconnection is enabled
    &#39;false&#39; if reconnection is disabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsConnectPrinterDrives</maml:name>
			<maml:description>
				<maml:para>Specify whether to reconnect to mapped client printers at logon. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if reconnection is enabled
    &#39;false&#39; if reconnection is disabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsDefaultToMainPrinter</maml:name>
			<maml:description>
				<maml:para>Specify whether to print automatically to the client&#39;s default printer. Parameter value can be &#39;true&#39; or &#39;false&#39;:
    &#39;true&#39; if printing to the client&#39;s default printer is enabled
    &#39;false&#39; if printing to the client&#39;s default printer is disabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsHomeDirectory</maml:name>
			<maml:description>
				<maml:para>Set the path to the Terminal Server home directory for the user. To set a home directory on the local computer, specify a local path; for example, C:\Path. To set a home directory in a network environment, set the TsHomeDrive parameter and specify a UNC path.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsHomeDrive</maml:name>
			<maml:description>
				<maml:para>Set a Terminal Server home drive for the user in a network environment. Parameter value is a string containing a drive letter followed by a colon, to which the UNC path for the Terminal Server home directory is mapped. To set a home directory in a network environment, set both this parameter and the TsHomeDirectory parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsInitialProgram</maml:name>
			<maml:description>
				<maml:para>Set the path and file name of the application that starts automatically when the user logs on to the Terminal Server. To set an initial application to start when the user logs on, set both this parameter and the TsWorkDirectory parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsMaxConnectionTime</maml:name>
			<maml:description>
				<maml:para>Set maximum duration of the Terminal Services session. After the specified time span has elapsed, the session can be disconnected or terminated. Parameter value is a TimeSpan object that specifies the duration you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsMaxDisconnectionTime</maml:name>
			<maml:description>
				<maml:para>Set maximum amount of time that a disconnected Terminal Services session remains active on the Terminal Server. After the specified time span has elapsed, the session is terminated. Parameter value is a TimeSpan object that specifies the amount of time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsMaxIdleTime</maml:name>
			<maml:description>
				<maml:para>Set maximum amount of time that the Terminal Services session can remain idle. After the specified time span has elapsed, the session can be disconnected or terminated. Parameter value is a TimeSpan object that specifies the amount of time you want.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsProfilePath</maml:name>
			<maml:description>
				<maml:para>Set a roaming or mandatory profile path to use when the user logs on to the Terminal Server. A valid parameter value is a string in the following network path format: \\ServerName\ProfilesFolderName\UserName</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsReconnectionAction</maml:name>
			<maml:description>
				<maml:para>Specify whether to allow reconnection to a disconnected Terminal Services session from any client computer. Parameter value can be one of these integers:
    1  (Reconnection is allowed from the original client computer only.)
    0  (Reconnection from any client computer is allowed.)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsRemoteControl</maml:name>
			<maml:description>
				<maml:para>Specify whether to allow remote observation or remote control of the user&#39;s Terminal Services session. Parameter value can be one of these integers:
    0  (Remote control is disabled.)
    1  (The user of remote control has full control of the user&#39;s session,
          with the user&#39;s permission.)
    2  (The user of remote control has full control of the user&#39;s session;
          the user&#39;s permission is not required.)
    3  (The user of remote control can view the session remotely,
          with the user&#39;s permission; the remote user cannot actively control
          the session.)
    4  (The user of remote control can view the session remotely,
          but not actively control the session; the user&#39;s permission
          is not required.)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TsWorkDirectory</maml:name>
			<maml:description>
				<maml:para>Set the Terminal Server working directory path for the user. To set an initial application to start when the user logs on to the Terminal Server, set both this parameter and the TsInitialProgram parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to update a certain pre-defined set of attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get-QADPSSnapinSettings or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserMustChangePassword</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; to configure the user account so that the user is required to change the password upon the next logon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPassword</maml:name>
			<maml:description>
				<maml:para>Set the user password.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;userPrincipalName&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WebPage</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;wWWHomePage&#39; attribute.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADUser &#39;CN=John Smith,OU=CompanyOU,DC=company,DC=com&#39; -description &#39;Sales person&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user, bind to a specific user account by DN, and modify the user description.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;server.company.com&#39; -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;set-QADUser -identity &#39;S-1-5-21-1279736177-1630491018-182859109-1305&#39; -description &#39;Service account&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to a specific domain controller with the credentials of a specific user, bind to a certain user account by SID, modify the user description, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$pw = read-host &quot;Enter password&quot; -AsSecureString

C:\PS&gt;connect-QADService -service &#39;localhost&#39; -proxy -ConnectionAccount &#39;company\administrator&#39; -ConnectionPassword $pw

C:\PS&gt;set-QADUser -identity &#39;company\jsmith&#39; -ObjectAttributes @{l=&#39;New York&#39;;description=&#39;&#39;} -UserPassword &#39;P@ssword&#39;

C:\PS&gt;disconnect-QADService                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the local Administration Service with the credentials of a specific user, bind to a certain user account by Domain\Name, set or clear certain attributes, and then disconnect.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADUser &#39;mycompany.com/usersOU/User1&#39; -objectAttributes @{otherTelephone=@(&#39;555-34-67&#39;,&#39;555-34-68&#39;)}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Assign two values to a multi-valued attribute such as &quot;otherTelephone&quot;. This replaces the current values of the attribute with the specified values.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADUser &#39;mycompany.com/usersOU/User1&#39; -objectAttributes @{otherTelephone=@{Append=@(&#39;555-34-67&#39;,&#39;555-34-68&#39;)}}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add two values to a multi-valued attribute such as &quot;otherTelephone&quot;. This appends the specified values to the existing values of the attribute. The existing values are not removed.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADUser &#39;mycompany.com/usersOU/User1&#39; -objectAttributes @{otherTelephone=@(Delete=@(&#39;555-34-67&#39;,&#39;555-34-68&#39;))}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Delete the specified values from a multi-valued attribute such as &quot;otherTelephone&quot;, leaving the other attribute values intact.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADUser &#39;mycompany.com/usersOU/User1&#39; -objectAttributes @{otherTelephone=&#39;&#39;}                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Delete all values from a multi-valued attribute such as &#39;otherTelephone&#39; (clear the attribute on the user object).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
set-QADUser &#39;&lt;DN of user object&gt;&#39; -Service &#39;server.domain.local:389&#39; -description &#39;My AD LDS user object&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, bind to a specific AD LDS user object by DN, and modify the description of the AD LDS user object.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QARSAccessTemplateLink
		</command:name>
		<maml:description>
			<maml:para>Make changes to existing links of Quest One ActiveRoles Access Templates. This cmdlet requires a connection to be established to the ActiveRoles Administration Service by supplying the Proxy parameter.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QARSAccessTemplateLink</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to modify existing links of Access Templates in Quest One ActiveRoles. This cmdlet takes Access Template links returned by the respective Get- cmdlet, makes changes to the link data, and commits the changes to Quest One ActiveRoles. Each Access Template link contains information on how a certain Access Template is applied to determine access rights of a certain security principal (Trustee) on a certain directory object (securable object). For background information about Access Templates, see the Quest One ActiveRoles Administrator Guide.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QARSAccessTemplateLink</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>You can specify the name, canonical name, or distinguished name (DN) of the link to modify (so as to identify the respective object located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace).

Normally, pipelining is used to identify links: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessTemplate</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template you want. The cmdlet configures the given link(s) to apply that Access Template.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AppliedTo</maml:name>
				<maml:description>
					<maml:para>Set permission inheritance options on the given link or links. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Set or clear the &#39;Description&#39; attribute on the given link or links.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeserializeValues</maml:name>
				<maml:description>
					<maml:para>Supply this parameter if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see documentation on the Get-QADUser cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Disabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to configure the given link(s) to have no effect in Quest One ActiveRoles (disabled links). If a given link is already disabled, this parameter does not take effect on that link.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Set the &#39;displayName&#39; attribute to this parameter value.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to configure the given link(s) to have effect in Quest One ActiveRoles (enabled links). If a given link is already enabled, this parameter does not take effect on that link.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExcludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to set in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludedProperties</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to set in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet set some attributes that would not be set otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute in the directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>ObjectAttributes</maml:name>
				<maml:description>
					<maml:para>Optionally, specify an associative array that defines the Access Template link attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SynchronizedToAD</maml:name>
				<maml:description>
					<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to configure the given link(s) so as to propagate permission settings to Active Directory. If you want the cmdlet to disable the propagation of the permission settings that result from the given link(s), set the value of this parameter to &#39;false&#39;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Trustee</maml:name>
				<maml:description>
					<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as a user or group) you want. The cmdlet configures the given link(s) to determine access rights of that security principal (set the specified object as Trustee).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDefaultExcludedProperties</maml:name>
				<maml:description>
					<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to make changes to certain attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccessTemplate</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, etc.) of an Access Template you want. The cmdlet configures the given link(s) to apply that Access Template.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AppliedTo</maml:name>
			<maml:description>
				<maml:para>Set permission inheritance options on the given link or links. Valid parameter values are:

  &#39;This&#39; - Indicates no inheritance. The Access Template link information is only used on the object to which the Access Template is applied. Access Template link information is not inherited by any descendents of the object.
  &#39;ThisObjectAndAllChildObjects&#39; - Indicates inheritance that includes the object to which the Access Template is applied, the object&#39;s immediate children, and the descendents of the object&#39;s children.
  &#39;ThisObjectAndImmediateChildObjects&#39; - Indicates inheritance that includes the object itself and its immediate children. It does not include the descendents of its children.
  &#39;AllChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children and the descendants of the object&#39;s children, but not the object itself.
  &#39;ImmediateChildObjects&#39; - Indicates inheritance that includes the object&#39;s immediate children only, not the object itself or the descendents of its children.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ATLinkFlags</command:parameterValue>
			<dev:type>
				<maml:name>ATLinkFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Set or clear the &#39;Description&#39; attribute on the given link or links.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeserializeValues</maml:name>
			<maml:description>
				<maml:para>Supply this parameter if the input you pass to the cmdlet contains serialized attribute values (for instance, when importing a directory object from a text file that was created using the Serialize parameter). For examples of how to export and import an object, see documentation on the Get-QADUser cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Disabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to configure the given link(s) to have no effect in Quest One ActiveRoles (disabled links). If a given link is already disabled, this parameter does not take effect on that link.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Set the &#39;displayName&#39; attribute to this parameter value.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to configure the given link(s) to have effect in Quest One ActiveRoles (enabled links). If a given link is already enabled, this parameter does not take effect on that link.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>ExcludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the attributes that you do not want the cmdlet to set in the directory. Supply a list of the attribute LDAP display names as the parameter value. You could use this parameter when importing attribute values from a text file, in order to prevent some attributes found in the file from being set in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>You can specify the name, canonical name, or distinguished name (DN) of the link to modify (so as to identify the respective object located in the &#39;Configuration/AT Links&#39; container in the Quest One ActiveRoles Configuration namespace).

Normally, pipelining is used to identify links: pass the output of the appropriate Get- cmdlet to this cmdlet. If you do so, the Identity parameter is not to be supplied on the command line.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludedProperties</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify explicitly the attributes that you want the cmdlet to set in the directory. Supply a list of the attribute LDAP display names as the parameter value. When used together with UseDefaultExcludedProperties, this parameter allows you to have the cmdlet set some attributes that would not be set otherwise.

Note: If a particular attribute is listed in both ExcludedProperties and IncludedProperties, the cmdlet does not set the value of that attribute in the directory.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>ObjectAttributes</maml:name>
			<maml:description>
				<maml:para>Optionally, specify an associative array that defines the Access Template link attributes to set. The array syntax:

@{attr1=&#39;val1&#39;;attr2=&#39;val2&#39;;...}

In this syntax, each of the key-value pairs is the LDAP display name and the value of an attribute to set.

For information about associative arrays, type the following command at the PowerShell command-prompt:

help about_associative_array</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectAttributesParameter</command:parameterValue>
			<dev:type>
				<maml:name>ObjectAttributesParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SynchronizedToAD</maml:name>
			<maml:description>
				<maml:para>Set the value of this parameter to &#39;true&#39; for the cmdlet to configure the given link(s) so as to propagate permission settings to Active Directory. If you want the cmdlet to disable the propagation of the permission settings that result from the given link(s), set the value of this parameter to &#39;false&#39;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Trustee</maml:name>
			<maml:description>
				<maml:para>Specify the identity (such as name, distinguished name, domain\name, etc.) of a security principal object (such as a user or group) you want. The cmdlet configures the given link(s) to determine access rights of that security principal (set the specified object as Trustee).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDefaultExcludedProperties</maml:name>
			<maml:description>
				<maml:para>When set to &#39;true&#39;, this parameter causes the cmdlet not to make changes to certain attributes in the directory. This pre-defined set of attributes (referred to as &quot;default excluded properties&quot;) can be viewed or modified by using the Get- or Set-QADPSSnapinSettings cmdlet, respectively.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Boolean</command:parameterValue>
			<dev:type>
				<maml:name>Boolean</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QARSAccessTemplateLink -DirectoryObject &#39;Configuration/Managed Units/ManagedUnitName&#39; -Predefined $false | set-QARSAccessTemplateLink -Trustee &#39;DomainName\GroupName&#39; | out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available Administration Service. Then, for every Access Template link on a given Quest One ActiveRoles Managed Unit, set a given group as Trustee. This ensures that only members of that group have access to that Managed Unit in Quest One ActiveRoles.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QADObject &#39;OrganizationalUnitName&#39; -Type organizationalUnit | %{get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -DirectoryObject $_ -Predefined $false} | set-QARSAccessTemplateLink -SynchronizedToAD $true -AppliedTo &#39;ThisObjectAndAllChildObjects&#39; | out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given organizational unit (OU) and a given Access Template applied on that OU, ensure that the permission settings defined by the Access Template on any object held in the OU are synchronized to Active Directory (on the respective Access Template link, enable the options to synchronize permission settings to AD and to apply them on both the OU and all child objects).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
connect-QADService -Proxy

C:\PS&gt;get-QADObject -SearchRoot &#39;OrganizationalUnitName&#39; | %{get-QARSAccessTemplateLink -AccessTemplate &#39;AccessTemplateName&#39; -DirectoryObject $_ -SynchronizedToAD $true -Predefined $false} | set-QARSAccessTemplateLink -SynchronizedToAD $false | out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given organizational unit (OU) and a given Access Template, ensure that the permission settings defined by the Access Template on any object held in the OU are not synchronized to Active Directory (disable the permission synchronization option for each link that is based on that Access Template and applied to any object held in that OU).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unlock-QADUser
		</command:name>
		<maml:description>
			<maml:para>Unlock a user account in Active Directory. Supported are both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unlock</command:verb>
		<command:noun>QADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to unlock a user account that has been locked out due to a number of failed logon attempts. You can unlock user accounts in both Active Directory Domain Services (AD DS) and Active Directory Lightweight Directory Services (AD LDS).

The cmdlet has optional parameters that determine the server and the security context for the operation. Normally, the connection parameters could be omitted so far as a connection to a server is established prior to using the cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unlock-QADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to unlock.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the DN, SID, GUID, UPN or Domain\Name of the user account you want to unlock.

This parameter is optional since you can pipe into this cmdlet the object returned by the Get-QADUser cmdlet, to have that object identify the user account to act upon.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
unlock-QADUser &#39;MyDomain\JSmith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to any available domain controller with the credentials of the locally logged on user and unlock the user account identified by Domain\Name.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
unlock-QADUser &#39;&lt;DN of user account&gt;&#39; -Service &#39;server.domain.local:389&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Connect to the AD LDS instance on &#39;server.domain.local:389&#39; with the credentials of the locally logged on user, and unlock the AD LDS user account that is identified by DN.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unpublish-QARSGroup
		</command:name>
		<maml:description>
			<maml:para>Stop publishing a group by clearing the edsvaPublished attribute.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unpublish</command:verb>
		<command:noun>QARSGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to clear the edsvaPublished attribute on a group, which causes the group not to be published. Publishing a group makes the group joinable by other people based on owner approval.

The cmdlet has optional parameters that determine the server and the security context for the operation. The connection parameters could be omitted since a connection to a server is normally established prior to using this cmdlet. In this case, the server and the security context are determined by the Connect-QADService cmdlet.

If you do not use Connect-QADService and have no connection established prior to using a cmdlet, then the connection settings, including the server and the security context, are determined by the connection parameters of the first cmdlet you use. Subsequent cmdlets will use those settings by default.

Note that this cmdlet requires a connection to the ActiveRoles Administration Service, so the Proxy parameter must be used to establish a connection.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unpublish-QARSGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of the group to un-publish. The cmdlet un-publishes the group specified by this parameter. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Specify the Distinguished Name (DN), Canonical Name, GUID, Domain\Name, UPN or SID of the group to un-publish. The cmdlet un-publishes the group specified by this parameter. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Unpublish-QARSGroup &#39;DomainName\GroupName&#39; -Proxy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Unpublish the specified group.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-QADLocalCertificateStore
		</command:name>
		<maml:description>
			<maml:para>Create an X.509 certificate store in a store location such as CurrentUser or LocalMachine.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>QADLocalCertificateStore</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a new certificate store. The output object can be used to identify the new store to which to add (import) certificates.

The cmdlet creates a certificate store in a specified store location. Certificate stores are physical stores in which certificates are saved and managed. Store locations are high-level containers that group the certificate stores for the current user and for all users. Each system has the CurrentUser store location and the LocalMachine (all users) store location.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-QADLocalCertificateStore</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>StoreName</maml:name>
				<maml:description>
					<maml:para>Specify the name to assign to the new certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>StoreLocation</maml:name>
				<maml:description>
					<maml:para>Specify the location in which to create a certificate store. Acceptable parameter values are:

 - CurrentUser   The store to hold certificates for the current user.
 - LocalMachine  The store to hold certificates for the local machine (all users).</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >CurrentUser</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >LocalMachine</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>StoreLocation</maml:name>
			<maml:description>
				<maml:para>Specify the location in which to create a certificate store. Acceptable parameter values are:

 - CurrentUser   The store to hold certificates for the current user.
 - LocalMachine  The store to hold certificates for the local machine (all users).</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StoreLocation</command:parameterValue>
			<dev:type>
				<maml:name>StoreLocation</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>CurrentUser</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>CurrentUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LocalMachine</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>StoreName</maml:name>
			<maml:description>
				<maml:para>Specify the name to assign to the new certificate store.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ARSPowerShellSnapIn.CertificateStoreUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
New-QADLocalCertificateStore &quot;MyCert&quot; -StoreLocation LocalMachine                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a certificate store called MyCert to hold certificates for the local machine (all users).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
New-QADLocalCertificateStore &quot;MyCert&quot;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a certificate store called MyCert to hold certificates for the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADLocalCertificateStore
		</command:name>
		<maml:description>
			<maml:para>Retrieve X.509 certificate stores held in a store location such as CurrentUser or LocalMachine.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADLocalCertificateStore</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve a certificate store by name. The output object can be used to identify the certificate store to search for certificates. 

The cmdlet retrieves certificate stores from a specified store location. Certificate stores are used to save certificates on local computers. The certificate stores include:
    - Physical stores, where certificates are physically stored on the local computer, in the system registry
    - Logical stores, to group certificates together in functional categories, by using pointers to the physical stores

The cmdlet supports both physical and logical certificate stores, allowing a store to be retrieved from a particular location. Store locations are high-level containers that hold the certificate stores for the current user and for all users. Each system has two store locations: CurrentUser and LocalMachine (all users).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADLocalCertificateStore</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>StoreName</maml:name>
				<maml:description>
					<maml:para>Specify the name of the certificate store to retrieve. Use a string array of names to retrieve more than one store at a time.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>StoreLocation</maml:name>
				<maml:description>
					<maml:para>Specify the location from which to retrieve a certificate store. The possible parameter values are:
   CurrentUser   The store holds certificates for the current user - default value.
   LocalMachine  The store holds certificates for the local machine (all users).</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >CurrentUser</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >LocalMachine</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>StoreLocation</maml:name>
			<maml:description>
				<maml:para>Specify the location from which to retrieve a certificate store. The possible parameter values are:
   CurrentUser   The store holds certificates for the current user - default value.
   LocalMachine  The store holds certificates for the local machine (all users).</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StoreLocation</command:parameterValue>
			<dev:type>
				<maml:name>StoreLocation</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>CurrentUser</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>CurrentUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LocalMachine</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>StoreName</maml:name>
			<maml:description>
				<maml:para>Specify the name of the certificate store to retrieve. Use a string array of names to retrieve more than one store at a time.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateStore</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the certificate stores that hold certificates for the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore -StoreLocation LocalMachine                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the certificate stores that hold certificates for the local machine.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore Root -StoreLocation LocalMachine                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the certificate store for trusted root certification authorities (CAs) held in the LocalMachine store location.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore &#39;MyTrustedStore&#39;,&#39;MyUntrustedStore&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve two certificate stores with the specified names that hold certificates for the current user.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Retrieve X.509 certificates that match the desired conditions.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve X.509 certificates from a certificate store or an Active Directory object. The cmdlet retrieves the certificates that satisfy the conditions you configure using the cmdlet parameters. Each of the output objects represents a certificate retrieved by this cmdlet, and can be passed to other cmdlets such as Export-QADCertificate, Edit-QADCertificate, or Show-QADCertificate.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store from which to retrieve certificates. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to retrieve only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to retrieve only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to retrieve. You can supply an array of strings each of which represents the friendly name of a single certificate, to retrieve the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certificates containing a private key. With this parameter, the cmdlet retrieves a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to retrieve only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to retrieve. You can supply an array of strings each of which represents the name of a single CA, to retrieve the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to retrieve the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to retrieve the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to retrieve. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to retrieve the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to retrieve. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to retrieve the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing an exportable private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to retrieve certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing a protected private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to retrieve certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to retrieve. You can supply an array of strings each of which represents the public key associated with a single certificate, to retrieve the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only revoked certificates. If you want to retrieve only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to retrieve. You can supply an array of strings each of which represents the serial number of a single certificate, to retrieve the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to retrieve. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to retrieve the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to retrieve the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to retrieve. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to retrieve. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to retrieve the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to retrieve. You can supply an array of strings each of which represents the thumbprint of a single certificate, to retrieve multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only valid certificates. If you want to retrieve only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to retrieve. For example, to search for X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to retrieve certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>NativeCertificate</maml:name>
				<maml:description>
					<maml:para>Parameter value is a native object provided by .NET Framework to represent X.509 certificates, such as an object of the X509Certificate2 class. The cmdlet retrieves the certificate data from that object if the certificate matches the conditions specified by the cmdlet parameters, and represents the certificate in the form of an object that could be recognized by ActiveRoles Management Shell cmdlets for certificate management.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509Certificate2</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to retrieve only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to retrieve only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to retrieve. You can supply an array of strings each of which represents the friendly name of a single certificate, to retrieve the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certificates containing a private key. With this parameter, the cmdlet retrieves a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to retrieve only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to retrieve. You can supply an array of strings each of which represents the name of a single CA, to retrieve the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to retrieve the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to retrieve the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to retrieve. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to retrieve the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to retrieve. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to retrieve the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing an exportable private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to retrieve certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing a protected private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to retrieve certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to retrieve. You can supply an array of strings each of which represents the public key associated with a single certificate, to retrieve the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only revoked certificates. If you want to retrieve only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to retrieve. You can supply an array of strings each of which represents the serial number of a single certificate, to retrieve the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to retrieve. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to retrieve the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to retrieve the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to retrieve. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to retrieve. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to retrieve the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to retrieve. You can supply an array of strings each of which represents the thumbprint of a single certificate, to retrieve multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only valid certificates. If you want to retrieve only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to retrieve. For example, to search for X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to retrieve certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>DirObj</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object representing the directory object, such as a user account, from which to retrieve certificates. To retrieve certificates that are assigned to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to retrieve only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to retrieve only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to retrieve. You can supply an array of strings each of which represents the friendly name of a single certificate, to retrieve the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certificates containing a private key. With this parameter, the cmdlet retrieves a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to retrieve only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to retrieve. You can supply an array of strings each of which represents the name of a single CA, to retrieve the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to retrieve the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to retrieve the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to retrieve. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to retrieve the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to retrieve. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to retrieve the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing an exportable private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to retrieve certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing a protected private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to retrieve certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to retrieve. You can supply an array of strings each of which represents the public key associated with a single certificate, to retrieve the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only revoked certificates. If you want to retrieve only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to retrieve. You can supply an array of strings each of which represents the serial number of a single certificate, to retrieve the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to retrieve. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to retrieve the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to retrieve the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to retrieve. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to retrieve. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to retrieve the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to retrieve. You can supply an array of strings each of which represents the thumbprint of a single certificate, to retrieve multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only valid certificates. If you want to retrieve only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to retrieve. For example, to search for X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to retrieve certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Signature</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive output objects of the Get-AuthenticodeSignature cmdlet. You can use this parameter, in conjunction with Get-AuthenticodeSignature, to retrieve certificates that were used to sign particular files: get information about the Authenticode signature in a file and then pass the corresponding object to the Signature parameter, thereby identifying the certificate to find.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Signature</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to retrieve only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to retrieve only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to retrieve. You can supply an array of strings each of which represents the friendly name of a single certificate, to retrieve the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only certificates containing a private key. With this parameter, the cmdlet retrieves a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to retrieve only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to retrieve. You can supply an array of strings each of which represents the name of a single CA, to retrieve the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to retrieve the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to retrieve the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to retrieve. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to retrieve the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to retrieve. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to retrieve the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing an exportable private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to retrieve certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve certificates containing a protected private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to retrieve certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to retrieve. You can supply an array of strings each of which represents the public key associated with a single certificate, to retrieve the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only revoked certificates. If you want to retrieve only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to retrieve. You can supply an array of strings each of which represents the serial number of a single certificate, to retrieve the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to retrieve. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to retrieve the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to retrieve the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to retrieve. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to retrieve. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to retrieve the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to retrieve. You can supply an array of strings each of which represents the thumbprint of a single certificate, to retrieve multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to retrieve only valid certificates. If you want to retrieve only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to retrieve. For example, to search for X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to retrieve certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllEnhancedKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyEnhancedKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to retrieve, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to retrieve a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to retrieve. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet retrieves a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CertificateAuthority</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to retrieve only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DirObj</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object representing the directory object, such as a user account, from which to retrieve certificates. To retrieve certificates that are assigned to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Expired</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to retrieve only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>FriendlyName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the friendly name associated with the certificate to retrieve. You can supply an array of strings each of which represents the friendly name of a single certificate, to retrieve the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HasPrivateKey</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve only certificates containing a private key. With this parameter, the cmdlet retrieves a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to retrieve only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedBy</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to retrieve. You can supply an array of strings each of which represents the name of a single CA, to retrieve the certificates that were issued by any of the certification authorities specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedTo</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to retrieve the certificates that were issued to any of the principals specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuerDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to retrieve the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to retrieve. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to retrieve the certificates that use any of the specified key algorithms.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithmParameters</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to retrieve. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to retrieve the certificates that have any of the specified key algorithm parameters.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>NativeCertificate</maml:name>
			<maml:description>
				<maml:para>Parameter value is a native object provided by .NET Framework to represent X.509 certificates, such as an object of the X509Certificate2 class. The cmdlet retrieves the certificate data from that object if the certificate matches the conditions specified by the cmdlet parameters, and represents the certificate in the form of an object that could be recognized by ActiveRoles Management Shell cmdlets for certificate management.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509Certificate2</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate2</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyExportable</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve certificates containing an exportable private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to retrieve certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyProtected</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve certificates containing a protected private key. With this parameter, the cmdlet retrieves a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to retrieve certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PublicKey</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to retrieve. You can supply an array of strings each of which represents the public key associated with a single certificate, to retrieve the certificates that contain any of the keys specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Revoked</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve only revoked certificates. If you want to retrieve only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerialNumber</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the serial number of the certificate to retrieve. You can supply an array of strings each of which represents the serial number of a single certificate, to retrieve the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Signature</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive output objects of the Get-AuthenticodeSignature cmdlet. You can use this parameter, in conjunction with Get-AuthenticodeSignature, to retrieve certificates that were used to sign particular files: get information about the Authenticode signature in a file and then pass the corresponding object to the Signature parameter, thereby identifying the certificate to find.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Signature</command:parameterValue>
			<dev:type>
				<maml:name>Signature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SignatureAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to retrieve. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to retrieve the certificates that use any of the algorithms specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store from which to retrieve certificates. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject distinguished name of the certificate to retrieve. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to retrieve the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectKeyIdentifier</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to retrieve. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate template of the certificate to retrieve. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to retrieve the certificates that are based on any of the templates specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Thumbprint</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the thumbprint of the certificate to retrieve. You can supply an array of strings each of which represents the thumbprint of a single certificate, to retrieve multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Valid</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to retrieve only valid certificates. If you want to retrieve only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Parameter value is the X.509 format version of the certificates to retrieve. For example, to search for X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to retrieve certificates whose X.509 format version matches any of the numbers specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			<dev:type>
				<maml:name>int[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateStorageUI, Quest.ActiveRoles.ArsPowerShellSnapIn.UI.GenericDirectoryObject, System.Security.Cryptography.X509Certificates.X509Certificate2</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore Root | Get-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all certificates from the Trusted Root Certification Authorities certificate store in the CurrentUser store location.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser domainName\userName | Get-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all certificates that are mapped to the specified user account in Active Directory.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Get-QADCertificate -IssuerDN &#39;*Micrsoft*&#39;,&#39;*VeriSign*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all certificates issued by Microsoft or VeriSign that are mapped to user accounts in your Active Directory domain.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Add X.509 certificates to a certificate store, or map X.509 certificates to a user account in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add X.509 certificates to a certificate store or map X.509 certificates to an Active Directory object, such as a user account. The cmdlet takes an output object of the Get-QADCertificate or Import-QADCertificate cmdlet, and updates the specified certificate store or Active Directory object with the certificate represented by that object.

Note:  If the certificate data to add to a user account in Active Directory contains private key information (for example, the data being imported from a .pfx file), the private key information is disregarded since it cannot be stored in Active Directory.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>DirObj</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object representing the Active Directory object, such as a user account, to which to map the certificates identified by the Certificate parameter. To map certificates to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to add. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store to which to add the certificates identified by the Certificate parameter. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to add. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to add. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DirObj</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object representing the Active Directory object, such as a user account, to which to map the certificates identified by the Certificate parameter. To map certificates to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store to which to add the certificates identified by the Certificate parameter. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateStoreUI,Quest.ActiveRoles.ArsPowerShellSnapIn.UI.IGenericDirectoryObject</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowershellSnapIn.X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cert = Get-QADLocalCertificateStore TrustedPublisher | Get-QADCertificate

C:\PS&gt;Get-QADUser domainName\userName | Add-QADCertificate -Certificate $cert                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a collection of objects ($cert) representing all the certificates found in the TrustedPublisher certificate store for the current user. Then, pass those objects to the Add-QADCertificate cmdlet to map the certificates to the specified user account in Active Directory. As a result, the certificates listed in the $cert variable are mapped to that user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cert = dir c:\cert | Import-QADCertificate

C:\PS&gt;Get-QADUser domainName\userName | Add-QADCertificate -Certificate $cert                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a collection of objects ($cert) representing the certificates found in the certificate files that are located in the specified folder (c:\cert). Then, pass those objects to the Add-QADCertificate cmdlet to identify the certificates to map to the specified user account. As a result, the certificates listed in the $cert variable are mapped to that user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cert = dir c:\cert | Import-QADCertificate | Where-QADCertificate -IssuerDN *Microsoft*,*VeriSign*

C:\PS&gt;Get-QADUser domainName\userName | Add-QADCertificate -Certificate $cert                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a collection of objects ($cert) representing the certificates found in the certificate files that are located in the specified folder (c:\cert). Apply a filter using Where-QADCertificate to ensure that the collection lists only the certificates issued by Microsoft or VeriSign. Then, pass the certificate objects to the Add-QADCertificate cmdlet to identify the certificates to map to the specified user account. As a result, the certificates listed in the $cert variable are mapped to that user account.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$store = Get-QADLocalCertificateStore Root

C:\PS&gt;Import-QADCertificate c:\cert.cer | Add-QADCertificate -Store $store                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add the certificate from file c:\cert.cer to the Trusted Root Certification Authorities certificate store in the CurrentUser store location.

The first command uses Get-QADLocalCertificateStore to populate the $store variable with the object representing the Trusted Root Certification Authorities certificate store. In the second command, Import-QADCertificate creates a certificate object based on the certificate data found in file c:\cert.cer and passes that object to Add-QADCertificate, causing the certificate to be added to the certificate store identified by the object held in the $store variable.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Remove X.509 certificates that match the desired conditions.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove X.509 certificates from a certificate store or an Active Directory object. The cmdlet removes the certificates that satisfy the conditions you configure using the cmdlet parameters.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>DirObj</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object representing the directory object, such as a user account, from which to remove certificates. To remove certificates that are assigned to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to remove. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to remove only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to remove only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to remove. You can supply an array of strings each of which represents the friendly name of a single certificate, to remove the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only certificates containing a private key. With this parameter, the cmdlet removes a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to remove only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to remove. You can supply an array of strings each of which represents the name of a single CA, to remove the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to remove the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to remove the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to remove. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to remove the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to remove. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to remove the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove certificates containing an exportable private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to remove certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove certificates containing a protected private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to remove certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to remove. You can supply an array of strings each of which represents the public key associated with a single certificate, to remove the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only revoked certificates. If you want to remove only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to remove. You can supply an array of strings each of which represents the serial number of a single certificate, to remove the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to remove. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to remove the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to remove the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to remove. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to remove. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to remove the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to remove. You can supply an array of strings each of which represents the thumbprint of a single certificate, to remove multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only valid certificates. If you want to remove only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to remove. For example, to remove X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to remove certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store from which to remove certificates. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to remove. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to remove only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to remove only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to remove. You can supply an array of strings each of which represents the friendly name of a single certificate, to remove the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only certificates containing a private key. With this parameter, the cmdlet removes a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to remove only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to remove. You can supply an array of strings each of which represents the name of a single CA, to remove the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to remove the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to remove the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to remove. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to remove the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to remove. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to remove the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove certificates containing an exportable private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to remove certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove certificates containing a protected private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to remove certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to remove. You can supply an array of strings each of which represents the public key associated with a single certificate, to remove the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only revoked certificates. If you want to remove only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to remove. You can supply an array of strings each of which represents the serial number of a single certificate, to remove the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to remove. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to remove the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to remove the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to remove. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to remove. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to remove the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to remove. You can supply an array of strings each of which represents the thumbprint of a single certificate, to remove multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to remove only valid certificates. If you want to remove only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to remove. For example, to remove X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to remove certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllEnhancedKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyEnhancedKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to remove, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to remove a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want to remove. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet removes a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to remove. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CertificateAuthority</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to remove only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect if an Active Directory object passed to the DirObj parameter is retrieved through Quest One ActiveRoles. For example, you could retrieve the object by using Get-QADUser with the Proxy connection parameter. In this case, the request to update the corresponding user account is processed by Quest One ActiveRoles, so the Control parameter passes the request controls to Quest One ActiveRoles. If the input object is retrieved through a direct connection to the directory (the Proxy connection parameter was not used), the Control parameter has no effect.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DirObj</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object representing the directory object, such as a user account, from which to remove certificates. To remove certificates that are assigned to a particular user in Active Directory, retrieve the corresponding user account by using Get-QADUser and then pass the output object to this parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Expired</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to remove only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>FriendlyName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the friendly name associated with the certificate to remove. You can supply an array of strings each of which represents the friendly name of a single certificate, to remove the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HasPrivateKey</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove only certificates containing a private key. With this parameter, the cmdlet removes a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want to remove only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedBy</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to remove. You can supply an array of strings each of which represents the name of a single CA, to remove the certificates that were issued by any of the certification authorities specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedTo</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to remove the certificates that were issued to any of the principals specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuerDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to remove the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want to remove. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to remove the certificates that use any of the specified key algorithms.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithmParameters</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to remove. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to remove the certificates that have any of the specified key algorithm parameters.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyExportable</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove certificates containing an exportable private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want to remove certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyProtected</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove certificates containing a protected private key. With this parameter, the cmdlet removes a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want to remove certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PublicKey</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to remove. You can supply an array of strings each of which represents the public key associated with a single certificate, to remove the certificates that contain any of the keys specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Revoked</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove only revoked certificates. If you want to remove only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerialNumber</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the serial number of the certificate to remove. You can supply an array of strings each of which represents the serial number of a single certificate, to remove the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SignatureAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to remove. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to remove the certificates that use any of the algorithms specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store from which to remove certificates. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject distinguished name of the certificate to remove. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to remove the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectKeyIdentifier</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate to remove. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate template of the certificate to remove. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to remove the certificates that are based on any of the templates specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Thumbprint</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the thumbprint of the certificate to remove. You can supply an array of strings each of which represents the thumbprint of a single certificate, to remove multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Valid</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to remove only valid certificates. If you want to remove only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Parameter value is the X.509 format version of the certificates to remove. For example, to remove X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to remove certificates whose X.509 format version matches any of the numbers specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			<dev:type>
				<maml:name>int[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.UI.GenericDirectoryObject, Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateStorageUI</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser domainName\userName | Remove-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all certificates from the specified user account in Active Directory.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore | Remove-QADCertificate -Expired                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all expired certificates from all the certificate stores held in the CurrentUser store location.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Remove-QADCertificate -IssuerDN &#39;*Microsoft*&#39;,&#39;*VeriSign*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all certificates issued by Microsoft or VeriSign from all user accounts in your Active Directory domain.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cert = dir c:\cert | Import-QADCertificate

C:\PS&gt;Get-QADUser domainName\userName | Remove-QADCertificate -Certificate $cert                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a collection of objects ($cert) representing the certificates found in the X.509 certificate files that are located in the specified folder (c:\cert). Then, pass those objects to the Remove-QADCertificate cmdlet to remove the corresponding certificates rom the specified user account. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Import-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Create a certificate object and populate the object with the X.509 certificate data from a byte array or a file.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Import</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a certificate object populated with the X.509 certificate data found in a byte array or a file. The cmdlet can take an output object of the Get-Content cmdlet containing the data found in a certificate file, and return a certificate object that represents the corresponding certificate. Another option is to have the cmdlet import the certificate data directly from a certificate file specified (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Import-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive a FileInfo object that identifies the file containing the X.509 certificate data to import. If you need to supply the path and name of the file, use the FileName parameter.

With this parameter, the cmdlet takes a certificate file that represents an X.509 certificate, and populates the output object with the certificate the file contains. The cmdlet supports all the certificate file types that could be created by Export-QADCertificate, including DER- or Base64-encoded X.509 certificate files (.CER), PKCS7 (.P7B) and PKCS12 (.PFX) certificate files, and Microsoft serialized certificate store (.SST) files.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ImportFlags</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify where and how to import the private key associated with the certificate. Parameter value can be a member of the X509KeyStorageFlags enumeration, such as UserKeySet, MachineKeySet, Exportable or UserProtected. For a complete list of the enumeration members, see the &quot;X509KeyStorageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx </maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >DefaultKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >MachineKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Exportable</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserProtected</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >PersistKeySet</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the password required to access the X.509 certificate data.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Import-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>FileName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply the path and name of the file containing the X.509 certificate data to import. The path can be an absolute path, such as C:\MyCertificates\Cert.cer, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.

With this parameter, the cmdlet takes a certificate file that represents an X.509 certificate, and populates the output object with the certificate the file contains. The cmdlet supports all the certificate file types that could be created by Export-QADCertificate, including DER- or Base64-encoded X.509 certificate files (.CER), PKCS7 (.P7B) and PKCS12 (.PFX) certificate files, and Microsoft serialized certificate store (.SST) files.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ImportFlags</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify where and how to import the private key associated with the certificate. Parameter value can be a member of the X509KeyStorageFlags enumeration, such as UserKeySet, MachineKeySet, Exportable or UserProtected. For a complete list of the enumeration members, see the &quot;X509KeyStorageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx </maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >DefaultKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >MachineKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Exportable</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserProtected</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >PersistKeySet</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the password required to access the X.509 certificate data.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Import-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>RawData</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object that contains the X.509 certificate data to import. This could be, for example, an output object of the Get-Content cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ImportFlags</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify where and how to import the private key associated with the certificate. Parameter value can be a member of the X509KeyStorageFlags enumeration, such as UserKeySet, MachineKeySet, Exportable or UserProtected. For a complete list of the enumeration members, see the &quot;X509KeyStorageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx </maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >DefaultKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >MachineKeySet</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >Exportable</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >UserProtected</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >PersistKeySet</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the password required to access the X.509 certificate data.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive a FileInfo object that identifies the file containing the X.509 certificate data to import. If you need to supply the path and name of the file, use the FileName parameter.

With this parameter, the cmdlet takes a certificate file that represents an X.509 certificate, and populates the output object with the certificate the file contains. The cmdlet supports all the certificate file types that could be created by Export-QADCertificate, including DER- or Base64-encoded X.509 certificate files (.CER), PKCS7 (.P7B) and PKCS12 (.PFX) certificate files, and Microsoft serialized certificate store (.SST) files.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			<dev:type>
				<maml:name>FileInfo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>FileName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply the path and name of the file containing the X.509 certificate data to import. The path can be an absolute path, such as C:\MyCertificates\Cert.cer, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.

With this parameter, the cmdlet takes a certificate file that represents an X.509 certificate, and populates the output object with the certificate the file contains. The cmdlet supports all the certificate file types that could be created by Export-QADCertificate, including DER- or Base64-encoded X.509 certificate files (.CER), PKCS7 (.P7B) and PKCS12 (.PFX) certificate files, and Microsoft serialized certificate store (.SST) files.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ImportFlags</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify where and how to import the private key associated with the certificate. Parameter value can be a member of the X509KeyStorageFlags enumeration, such as UserKeySet, MachineKeySet, Exportable or UserProtected. For a complete list of the enumeration members, see the &quot;X509KeyStorageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx </maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyStorageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyStorageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>DefaultKeySet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UserKeySet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>MachineKeySet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Exportable</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UserProtected</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>PersistKeySet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the password required to access the X.509 certificate data.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>RawData</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object that contains the X.509 certificate data to import. This could be, for example, an output object of the Get-Content cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">object</command:parameterValue>
			<dev:type>
				<maml:name>object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>object[]</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Import-QADCertificate c:\cert.cer                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a certificate object that represents a certificate found in the specified X.509 certificate file (c:\cert.cer).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\cert | Import-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a set of certificate objects each of which represents one of the certificates found in the X.509 certificate files that are located in the specified folder (c:\cert).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Import-QADCertificate c:\cert.pfx -Password (ConvertTo-SecureString &#39;P@ssw0rd&#39; -asplaintext -force)                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a certificate object that represents a certificate found in the specified password-protected certificate file (c:\cert.pfx) containing the certificate&#39;s private key data.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Import-QADCertificate c:\cert.pfx -Password (ConvertTo-SecureString &#39;P@ssw0rd&#39; -asplaintext -force) -ImportFlags UserProtected,Exportable                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a certificate object that represents a certificate found in the specified password-protected certificate file (c:\cert.pfx) containing the certificate&#39;s private key data, and configure the certificate in the certificate object to enable strong protection for the private key and mark the private key as exportable.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Export-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Export an X.509 certificate to a byte array or a file.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to export the X.509 certificate represented by a given certificate object, to a byte array or a file using the specified format. The cmdlet can take an output object of the Get-QADCertificate cmdlet, and return a byte array containing the certificate data found in that object. Another option is to have the cmdlet export the certificate directly to a file specified (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to export. This could be output objects of the Get-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Encoding</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify how to encode the export data. The possible parameter values are:
    Binary    The export data is a pure binary sequence
    Base64    The export data is base64-encoded
The default parameter value is Binary for the Pkcs12 (Pfx) export format and Base64 for any other export format.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">CertificateEncoding</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the path and name of a file to which you want to export the certificates. The path can be an absolute path, such as C:\MyCertificates\Cert.cer, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Format</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify how to format the export data. The possible parameter values are the following members of the X509ContentType enumeration:
    Cert
    SerializedCert
    Pfx
    Pkcs12 (same as Pfx)
    SerializedStore
    Pkcs7
If this parameter is omitted, the Cert format is used. For descriptions of these enumeration members, see the &quot;X509ContentType Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509contenttype.aspx</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ExportFormat</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Mode</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether you want the export data to include a single certificate, the certificate chain (that is, all certificates in the certification path for a given certificate), or a collection of certificates (see examples). The corresponding parameter values are:
    Single        Exports each input certificate separately
    Chain         Exports the entire certificate chain for each input certificate;
                  not supported for the Cert and SerializedCert export formats
    Collection    Exports all input certificates as a single bulk;
                  not supported for the Cert and SerializedCert export formats</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ExportMode</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the password required to access the X.509 certificate export data. A password is required to export a certificate with both the public and private keys. In this case the certificate should be exported using the Pkcs12 (Pfx) export format.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to export. This could be output objects of the Get-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Encoding</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify how to encode the export data. The possible parameter values are:
    Binary    The export data is a pure binary sequence
    Base64    The export data is base64-encoded
The default parameter value is Binary for the Pkcs12 (Pfx) export format and Base64 for any other export format.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">CertificateEncoding</command:parameterValue>
			<dev:type>
				<maml:name>CertificateEncoding</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the path and name of a file to which you want to export the certificates. The path can be an absolute path, such as C:\MyCertificates\Cert.cer, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Format</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify how to format the export data. The possible parameter values are the following members of the X509ContentType enumeration:
    Cert
    SerializedCert
    Pfx
    Pkcs12 (same as Pfx)
    SerializedStore
    Pkcs7
If this parameter is omitted, the Cert format is used. For descriptions of these enumeration members, see the &quot;X509ContentType Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509contenttype.aspx</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ExportFormat</command:parameterValue>
			<dev:type>
				<maml:name>ExportFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Cert</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Mode</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether you want the export data to include a single certificate, the certificate chain (that is, all certificates in the certification path for a given certificate), or a collection of certificates (see examples). The corresponding parameter values are:
    Single        Exports each input certificate separately
    Chain         Exports the entire certificate chain for each input certificate;
                  not supported for the Cert and SerializedCert export formats
    Collection    Exports all input certificates as a single bulk;
                  not supported for the Cert and SerializedCert export formats</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ExportMode</command:parameterValue>
			<dev:type>
				<maml:name>ExportMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Single</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the password required to access the X.509 certificate export data. A password is required to export a certificate with both the public and private keys. In this case the certificate should be exported using the Pkcs12 (Pfx) export format.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>byte[]</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser domainName\userName | Get-QADCertificate | %{Export-QADCertificate $_ -File &quot;c:\cert\$($_.IssuedTo)-$($_.Thumbprint).cer&quot;} | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>In this command: Get-QADCertificate generates certificate objects representing the X.509 certificates mapped to the specified user in Active Directory, and Export-QADCertificate exports each certificate to a separate file using the Cert (default) export format. For each certificate, the file name is composed of the certificate&#39;s properties &quot;Issued To&quot; and &quot;Thumbprint.&quot;</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore MyStore | Get-QADCertificate | %{Export-QADCertificate $_ -Format Pkcs7 -Mode Chain -File &quot;c:\cert\$($_.SerialNumber).p7b&quot;} | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>In this command: Get-QADLocalCertificateStore retrieves a certain certificate store by name from the CurrentUser store location and passes the corresponding object to Get-QADCertificate; Get-QADCertificate retrieves the certificates from that store and passes the certificate objects to Export-QADCertificate; for each certificate object, Export-QADCertificate exports the entire certificate chain of the corresponding certificate to a separate file using the Pkcs7 export format, with the file name composed of the certificate&#39;s serial number.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore MyStore | Get-QADCertificate | Export-QADCertificate -Mode Collection -Format Pfx -Password (ConvertTo-SecureString &lt;Password&gt; -asplaintext -force) -File c:\MyCerts.pfx | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>In this command: Get-QADLocalCertificateStore retrieves a certain certificate store by name from the CurrentUser store location and passes the corresponding object to Get-QADCertificate; Get-QADCertificate retrieves the certificates from that store and passes the certificate objects to Export-QADCertificate; Export-QADCertificate exports all the certificates, along with their private keys, to a single file using the Pfx export format. This export operation requires the export data to be protected by a password, so the Password parameter is used to set a password.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Edit-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Open a dialog box that contains the properties of an X.509 certificate.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Edit</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to display a dialog box with detailed information about the specified X.509 certificate. The cmdlet takes an output object of the Get-QADCertificate or Import-QADCertificate cmdlet, and opens a dialog box that contains the properties of the certificate.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Edit-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to edit. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to edit. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser domainName\userName | Get-QADcertificate | Edit-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the certificates that are mapped to the specified user account in Active Directory, and then, for each certificate, open a dialog box that contains the properties of the certificate.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Show-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Display a textual representation of an X.509 certificate.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Show</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to view X.509 certificates in a text format. The cmdlet takes an output object of the Get-QADCertificate or Import-QADCertificate cmdlet, and displays a textual representation of the certificate represented by that object.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Show-QADCertificate</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to display. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to display. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateUI</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser domainName\userName | Get-QADcertificate | Show-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the certificates that are mapped to the specified user account in Active Directory, and view a textual representation of each certificate.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Where-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Create a filter that determines which objects to pass along a command pipeline depending upon properties of X.509 certificates held in, or mapped to, input objects. 

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Where</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>This cmdlet selects objects from the set of objects passed to it, based on properties of X.509 certificates held in, or mapped to, input objects. When the cmdlet receives an object, it checks to see whether the object contains, or is associated with, an X.509 certificate that matches the filter conditions specified by cmdlet parameters. If such a certificate exists, and is held in, or mapped to, an input object, the object is returned; otherwise, the object is ignored (filtered out).

An input object may represent a certificate store, an Active Directory object (for example, a user account), or a certificate. In case of a certificate store object, the cmdlet allows the object to pass if the certificate store contains a certificate that matches the filter conditions. In case of an Active Directory object, the cmdlet allows the object to pass if a certificate that matches the filter conditions is mapped to that object in Active Directory. In case of a certificate object, the cmdlet allows the object to pass if the certificate represented by that object matches the filter conditions.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Where-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply the certificate objects representing the certificates to filter. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples). If the certificate represented by a given object matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want the cmdlet to take account of only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want the cmdlet to take account of only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to match. You can supply an array of strings each of which represents the friendly name of a single certificate, for the cmdlet to take account of the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certificates containing a private key. With this parameter, the cmdlet takes account of a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want the cmdlet to take account of only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to match. You can supply an array of strings each of which represents the name of a single CA, for the cmdlet to take account of the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, for the cmdlet to take account of the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, for the cmdlet to take account of the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want the cmdlet to take account of when filtering input objects. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, for the cmdlet to take account of the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to match. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, for the cmdlet to take account of the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing an exportable private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want the cmdlet to take account of certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing a protected private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want the cmdlet to take account of certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to match. You can supply an array of strings each of which represents the public key associated with a single certificate, for the cmdlet to take account of the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only revoked certificates. If you want the cmdlet to take account of only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to match. You can supply an array of strings each of which represents the serial number of a single certificate, for the cmdlet to take account of the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to match. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, for the cmdlet to take account of the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, for the cmdlet to take account of the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate you want the cmdlet to take account of when filtering input objects. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, for the cmdlet to take account of the certificates that have any of the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to match. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, for the cmdlet to take account of the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to match. You can supply an array of strings each of which represents the thumbprint of a single certificate, for the cmdlet to take account of the certificates that have any of the specified thumbprints.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only valid certificates. If you want the cmdlet to take account of only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to match. For example, if you want the cmdlet to take account of only X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to take account of certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Where-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>DirObj</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply the Active Directory objects, such as user accounts, to filter. This could be output objects of the Get-QADUser cmdlet (see examples). If a given Active Directory object is associated with a certificate that matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want the cmdlet to take account of only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want the cmdlet to take account of only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to match. You can supply an array of strings each of which represents the friendly name of a single certificate, for the cmdlet to take account of the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certificates containing a private key. With this parameter, the cmdlet takes account of a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want the cmdlet to take account of only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to match. You can supply an array of strings each of which represents the name of a single CA, for the cmdlet to take account of the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, for the cmdlet to take account of the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, for the cmdlet to take account of the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want the cmdlet to take account of when filtering input objects. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, for the cmdlet to take account of the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to match. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, for the cmdlet to take account of the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing an exportable private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want the cmdlet to take account of certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing a protected private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want the cmdlet to take account of certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to match. You can supply an array of strings each of which represents the public key associated with a single certificate, for the cmdlet to take account of the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only revoked certificates. If you want the cmdlet to take account of only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to match. You can supply an array of strings each of which represents the serial number of a single certificate, for the cmdlet to take account of the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to match. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, for the cmdlet to take account of the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, for the cmdlet to take account of the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate you want the cmdlet to take account of when filtering input objects. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, for the cmdlet to take account of the certificates that have any of the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to match. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, for the cmdlet to take account of the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to match. You can supply an array of strings each of which represents the thumbprint of a single certificate, for the cmdlet to take account of the certificates that have any of the specified thumbprints.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only valid certificates. If you want the cmdlet to take account of only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to match. For example, if you want the cmdlet to take account of only X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to take account of certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Where-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply the certificate store objects to filter. This could be output objects of the Get-QADLocalCertificateStore cmdlet (see examples). If the certificate store represented by a given object contains a certificate that matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want the cmdlet to take account of only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want the cmdlet to take account of only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate to match. You can supply an array of strings each of which represents the friendly name of a single certificate, for the cmdlet to take account of the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HasPrivateKey</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only certificates containing a private key. With this parameter, the cmdlet takes account of a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want the cmdlet to take account of only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to match. You can supply an array of strings each of which represents the name of a single CA, for the cmdlet to take account of the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, for the cmdlet to take account of the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, for the cmdlet to take account of the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want the cmdlet to take account of when filtering input objects. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, for the cmdlet to take account of the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to match. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, for the cmdlet to take account of the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing an exportable private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want the cmdlet to take account of certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of certificates containing a protected private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want the cmdlet to take account of certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to match. You can supply an array of strings each of which represents the public key associated with a single certificate, for the cmdlet to take account of the certificates that contain any of the keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only revoked certificates. If you want the cmdlet to take account of only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate to match. You can supply an array of strings each of which represents the serial number of a single certificate, for the cmdlet to take account of the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to match. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, for the cmdlet to take account of the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, for the cmdlet to take account of the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate you want the cmdlet to take account of when filtering input objects. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, for the cmdlet to take account of the certificates that have any of the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate to match. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, for the cmdlet to take account of the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate to match. You can supply an array of strings each of which represents the thumbprint of a single certificate, for the cmdlet to take account of the certificates that have any of the specified thumbprints.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter for the cmdlet to take account of only valid certificates. If you want the cmdlet to take account of only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificates to match. For example, if you want the cmdlet to take account of only X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to take account of certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllEnhancedKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyEnhancedKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate to match, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to take account of a certificate when filtering input objects if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates you want the cmdlet to take account of when filtering input objects. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet takes account of a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply the certificate objects representing the certificates to filter. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples). If the certificate represented by a given object matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CertificateAuthority</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of only certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want the cmdlet to take account of only the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DirObj</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply the Active Directory objects, such as user accounts, to filter. This could be output objects of the Get-QADUser cmdlet (see examples). If a given Active Directory object is associated with a certificate that matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Expired</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of only expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want the cmdlet to take account of only the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>FriendlyName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the friendly name associated with the certificate to match. You can supply an array of strings each of which represents the friendly name of a single certificate, for the cmdlet to take account of the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HasPrivateKey</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of only certificates containing a private key. With this parameter, the cmdlet takes account of a certificate only if the certificate has a private key associated with it. Without this parameter, the cmdlet does not consider the presence of a private key. If you want the cmdlet to take account of only the certificates that do not contain a private key, use the following syntax: -HasPrivateKey:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedBy</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate to match. You can supply an array of strings each of which represents the name of a single CA, for the cmdlet to take account of the certificates that were issued by any of the certification authorities specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedTo</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the principal to which the sought-for certificate was issued. You can supply an array of strings each of which represents a single principal&#39;s name, for the cmdlet to take account of the certificates that were issued to any of the principals specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuerDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the issuer distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, for the cmdlet to take account of the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate you want the cmdlet to take account of when filtering input objects. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, for the cmdlet to take account of the certificates that use any of the specified key algorithms.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithmParameters</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate to match. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, for the cmdlet to take account of the certificates that have any of the specified key algorithm parameters.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyExportable</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of certificates containing an exportable private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate can be exported. Without this parameter, the cmdlet does not consider whether the private key can be exported. If you want the cmdlet to take account of certificates whose private key cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyProtected</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of certificates containing a protected private key. With this parameter, the cmdlet takes account of a certificate if the private key associated with the certificate is protected. Without this parameter, the cmdlet does not consider whether the private key is protected. If you want the cmdlet to take account of certificates whose private key is not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PublicKey</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate to match. You can supply an array of strings each of which represents the public key associated with a single certificate, for the cmdlet to take account of the certificates that contain any of the keys specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Revoked</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of only revoked certificates. If you want the cmdlet to take account of only the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerialNumber</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the serial number of the certificate to match. You can supply an array of strings each of which represents the serial number of a single certificate, for the cmdlet to take account of the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SignatureAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate to match. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, for the cmdlet to take account of the certificates that use any of the algorithms specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply the certificate store objects to filter. This could be output objects of the Get-QADLocalCertificateStore cmdlet (see examples). If the certificate store represented by a given object contains a certificate that matches the conditions specified by the cmdlet parameters, the object is allowed to pass; otherwise, the object is filtered out.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject distinguished name of the certificate to match. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, for the cmdlet to take account of the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectKeyIdentifier</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate you want the cmdlet to take account of when filtering input objects. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, for the cmdlet to take account of the certificates that have any of the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate template of the certificate to match. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, for the cmdlet to take account of the certificates that are based on any of the templates specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Thumbprint</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the thumbprint of the certificate to match. You can supply an array of strings each of which represents the thumbprint of a single certificate, for the cmdlet to take account of the certificates that have any of the specified thumbprints.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Valid</maml:name>
			<maml:description>
				<maml:para>Supply this parameter for the cmdlet to take account of only valid certificates. If you want the cmdlet to take account of only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Parameter value is the X.509 format version of the certificates to match. For example, if you want the cmdlet to take account of only X.509 version 3 certificates, supply the parameter value of 3. An array of numbers causes the cmdlet to take account of certificates whose X.509 format version matches any of the numbers specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			<dev:type>
				<maml:name>int[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Quest.ActiveRoles.ArsPowerShellSnapIn.X509CertificateStorageUI, Quest.ActiveRoles.ArsPowerShellSnapIn.UI.GenericDirectoryObject, System.Security.Cryptography.X509Certificates.X509Certificate2</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore | Where-QADCertificate -Expired                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the certificate stores from the CurrentUser store location that contain any expired certificates. The output of this command is a set of objects each of which represents one of the certificate stores containing expired certificates.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Where-QADCertificate -IssuerDN &#39;*Microsoft*&#39;,&#39;*VeriSign*&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all user accounts from your Active Directory domain that are associated with certificates issued by Microsoft or VeriSign. The output of this command is a set of objects each of which represents one of the user accounts to which the sought-for certificates are mapped in Active Directory.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$cert = dir c:\cert | Import-QADCertificate | Where-QADCertificate -Expired:$false

C:\PS&gt;Get-QADUser domainName\userName | Add-QADCertificate $cert                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a collection of objects ($cert) representing all the non-expired certificates found in the certificate files that are located in the specified folder (c:\cert). Then, pass those objects to the Add-QADCertificate cmdlet to map the corresponding certificates to the specified user account in Active Directory.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Where-QADCertificate -AllKeyUsages None                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve users whose certificates in Active Directory have no key usage purpose specified.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Where-QADCertificate -AllEnhancedKeyUsages &#39;&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve users whose certificates in Active Directory have no key intended purpose specified.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADPrivateKey
		</command:name>
		<maml:description>
			<maml:para>Delete the private keys that correspond to the X.509 certificates that match the desired conditions.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADPrivateKey</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>For a given certificate held in a local certificate store, you can use this cmdlet to delete the private key that corresponds to the certificate, from the local computer. The cmdlet deletes the private key for each of the certificates that satisfy the conditions you configure using the cmdlet parameters. A typical use of this cmdlet is to delete the certificate&#39;s private key after exporting a certificate (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADPrivateKey</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store that holds the certificate whose private key you want to delete. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllEnhancedKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate whose private key you want to delete, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at http://msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to delete the private key associated with a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllKeyUsages</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates whose private keys you want to delete. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet deletes the private key associated with a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyEnhancedKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate whose private key you want to delete, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at http://msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to delete the private key associated with a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AnyKeyUsage</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key usage purpose for the certificates whose private keys you want to delete. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet deletes the private key associated with a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >None</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >EncipherOnly</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >CrlSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyCertSign</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyAgreement</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DataEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >KeyEncipherment</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >NonRepudiation</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DigitalSignature</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >DecipherOnly</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CertificateAuthority</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete only the private keys that are associated with certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to delete only the private keys associated with the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expired</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete only the private keys that are associated with expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to delete only the private keys that are associated with the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>FriendlyName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the friendly name associated with the certificate whose private key you want to delete. You can supply an array of strings each of which represents the friendly name of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedBy</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate whose private key you want to delete. You can supply an array of strings each of which represents the name of a single CA, to delete the private keys corresponding to the certificates that were issued by any of the certification authorities specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuedTo</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the name of the principal to which the sought-for private key was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to delete the private keys corresponding to the certificates that were issued to any of the principals specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>IssuerDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the issuer distinguished name of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to delete the private keys that correspond to the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate whose private key you want to delete. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to delete the private keys corresponding to the certificates that use any of the specified key algorithms.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>KeyAlgorithmParameters</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified key algorithm parameters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyExportable</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete the private keys associated with the certificates that have their private key marked as exportable. With this parameter, the cmdlet only the private keys that can be exported. Without this parameter, the cmdlet does not consider whether a private key can be exported. If you want to delete only private keys that cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PrivateKeyProtected</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete the private keys associated with the certificates that have their private key marked as protected. With this parameter, the cmdlet deletes only the protected private keys. Without this parameter, the cmdlet does not consider whether a private key is protected. If you want to delete only private keys that are not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>PublicKey</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the public key associated with a single certificate, to remove the private keys corresponding to the certificates that contain any of the public keys specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revoked</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete only private keys corresponding to revoked certificates. If you want to remove only private keys corresponding to the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SerialNumber</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the serial number of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the serial number of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SignatureAlgorithm</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate whose private key you want to delete. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to delete the private keys corresponding to the certificates that use any of the algorithms specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectDN</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject distinguished name of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to delete the private keys corresponding to the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>SubjectKeyIdentifier</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate whose private key you want to delete. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, to delete the private keys that correspond to the certificates with the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Template</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate template of the certificate whose private key you want to delete. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to delete the private keys for the certificates that are based on any of the templates specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Thumbprint</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the thumbprint of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the thumbprint of a single certificate, to delete the private keys for multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Valid</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete only private keys associated with valid certificates. If you want to delete private keys for only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Parameter value is the X.509 format version of the certificate whose private key you want to delete. For example, to delete the private key for an X.509 version 3 certificate, supply the parameter value of 3. An array of numbers causes the cmdlet to remove private keys for certificates whose X.509 format version matches any of the numbers specified.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllEnhancedKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate whose private key you want to delete, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at http://msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to delete the private key associated with a certificate if the intended purposes of the certificate&#39;s key match all of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllKeyUsages</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates whose private keys you want to delete. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet deletes the private key associated with a certificate if the certificate&#39;s key is intended for each of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyEnhancedKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifiers (OIDs) that indicate the intended purposes of the public key contained in the certificate whose private key you want to delete, in addition to or in place of the key usage setting. Parameter value can be one or more OIDs or OID friendly names separated by commas. A list of some enhanced key usage OIDs can be found in Microsoft&#39;s article &quot;IX509ExtensionEnhancedKeyUsage Interface&quot; at http://msdn.microsoft.com/en-us/library/aa378132.aspx

This parameter causes the cmdlet to delete the private key associated with a certificate if the intended purposes of the certificate&#39;s key match any of the OIDs specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AnyKeyUsage</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key usage purpose for the certificates whose private keys you want to delete. Parameter value can be any member of the X509KeyUsageFlags enumeration, such as EncipherOnly or DigitalSignature. For a complete list of the enumeration members, see the &quot;X509KeyUsageFlags Enumeration&quot; article in Microsoft&#39;s .NET Framework Class Library at http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keyusageflags.aspx

You can supply multiple members as an attribute value, separating them by commas. In this case, the cmdlet deletes the private key associated with a certificate if the certificate&#39;s key is intended for any of the purposes defined by the members you specified.</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509KeyUsageFlags</command:parameterValue>
			<dev:type>
				<maml:name>X509KeyUsageFlags</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>None</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>EncipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>CrlSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyCertSign</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyAgreement</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DataEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>KeyEncipherment</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>NonRepudiation</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DigitalSignature</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>DecipherOnly</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CertificateAuthority</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete only the private keys that are associated with certification authority (CA) certificates. (CA certificates are certificates that are issued by a CA to itself or to a second CA for the purpose of creating a defined relationship between the two certification authorities.) If you want to delete only the private keys associated with the certificates that are not CA certificates, use the following syntax: -CertificateAuthority:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Expired</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete only the private keys that are associated with expired certificates (a certificate is considered expired after the certificate&#39;s expiration date). If you want to delete only the private keys that are associated with the certificates that are not expired, use the following syntax: -Expired:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>FriendlyName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the friendly name associated with the certificate whose private key you want to delete. You can supply an array of strings each of which represents the friendly name of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified names.

Friendly name is an optional property of a certificate that can be set on an as-needed basis. It is possible to assign a friendly name to a certificate so the certificate can be easily identified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedBy</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the certification authority (CA) that issued the certificate whose private key you want to delete. You can supply an array of strings each of which represents the name of a single CA, to delete the private keys corresponding to the certificates that were issued by any of the certification authorities specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuedTo</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the name of the principal to which the sought-for private key was issued. You can supply an array of strings each of which represents a single principal&#39;s name, to delete the private keys corresponding to the certificates that were issued to any of the principals specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>IssuerDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the issuer distinguished name of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s issuer, to delete the private keys that correspond to the certificates issued by any of the issuers specified.

The issuer distinguished name identifies the certification authority (CA) that issued the certificate. A distinguished name consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the key algorithm information, in string format, for the certificate whose private key you want to delete. Parameter value is the object identifier (OID) or OID&#39;s friendly name that identifies the algorithm. You can specify an array of strings each of which identifies a certificate&#39;s key algorithm, to delete the private keys corresponding to the certificates that use any of the specified key algorithms.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>KeyAlgorithmParameters</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the key algorithm parameters of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the key algorithm parameters of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified key algorithm parameters.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyExportable</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete the private keys associated with the certificates that have their private key marked as exportable. With this parameter, the cmdlet only the private keys that can be exported. Without this parameter, the cmdlet does not consider whether a private key can be exported. If you want to delete only private keys that cannot be exported, use the following syntax: -PrivateKeyExportable:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PrivateKeyProtected</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete the private keys associated with the certificates that have their private key marked as protected. With this parameter, the cmdlet deletes only the protected private keys. Without this parameter, the cmdlet does not consider whether a private key is protected. If you want to delete only private keys that are not protected, use the following syntax: -PrivateKeyProtected:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>PublicKey</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the hexadecimal string representing the public key of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the public key associated with a single certificate, to remove the private keys corresponding to the certificates that contain any of the public keys specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Revoked</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete only private keys corresponding to revoked certificates. If you want to remove only private keys corresponding to the certificates that are not revoked, use the following syntax: -Revoked:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SerialNumber</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the serial number of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the serial number of a single certificate, to delete the private keys corresponding to the certificates that have any of the specified serial numbers.

The serial number of a certificate is a unique number assigned to the certificate by the certification authority (CA) that issued the certificate.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SignatureAlgorithm</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object identifier (OID) or OID&#39;s friendly name that identifies the type of the encryption algorithm used to create the signature of the certificate whose private key you want to delete. You can supply an array of strings each of which identifies a single certificate&#39;s signature algorithm, to delete the private keys corresponding to the certificates that use any of the algorithms specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store that holds the certificate whose private key you want to delete. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectDN</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject distinguished name of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the distinguished name of a single certificate&#39;s subject, to delete the private keys corresponding to the certificates issued to any of the subjects specified.

The subject distinguished name is a textual representation of the certificate&#39;s subject. This representation consists of name attributes, for example, &quot;CN=Name,OU=OrgUnit,C=US&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>SubjectKeyIdentifier</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the subject key identifier (SKI) of the certificate whose private key you want to delete. You can supply an array of strings each of which represents a single certificate&#39;s SKI encoded in hexadecimal format, to delete the private keys that correspond to the certificates with the specified subject key identifiers.

The subject key identifier can be used to differentiate between multiple public keys held by the certificate subject. The SKI value is typically an SHA-1 hash of the key.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Template</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate template of the certificate whose private key you want to delete. Parameter value is the name of a certificate template. You can supply an array of strings each of which represents the name of a certificate template, to delete the private keys for the certificates that are based on any of the templates specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Thumbprint</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the thumbprint of the certificate whose private key you want to delete. You can supply an array of strings each of which represents the thumbprint of a single certificate, to delete the private keys for multiple certificates at a time.

The thumbprint is a hash value generated using the SHA-1 algorithm that uniquely identifies the certificate. As such, the thumbprint of a certificate is commonly used to find the certificate in a certificate store.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Valid</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete only private keys associated with valid certificates. If you want to delete private keys for only the certificates that are not valid, use the following syntax: -Valid:$false.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Parameter value is the X.509 format version of the certificate whose private key you want to delete. For example, to delete the private key for an X.509 version 3 certificate, supply the parameter value of 3. An array of numbers causes the cmdlet to remove private keys for certificates whose X.509 format version matches any of the numbers specified.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">int[]</command:parameterValue>
			<dev:type>
				<maml:name>int[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$store = Get-QADLocalCertificateStore MyStore

C:\PS&gt;$store | Get-QADCertificate -IssuedTo &#39;John Smith&#39; | Export-QADCertificate -Format Pfx -Mode Collection -Password (ConvertTo-SecureString &lt;Password&gt; -asplaintext -force) -File &#39;John Smith.pfx&#39; | Out-Null

C:\PS&gt;$store | Remove-QADPrivateKey -IssuedTo &#39;John Smith&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>This example illustrates how to export certificates and then delete the private keys that correspond to those certificates.

In this example: Get-QADLocalCertificateStore retrieves the certificate store named MyStore, from the CurrentUser store location; Get-QADCertificate retrieves the certificates from that store that are issued to John Smith, and passes the certificate objects to Export-QADCertificate, which exports the certificates, along with their private keys, to a single file using the Pfx export format; then, Remove-QADPrivateKey deletes the private keys that correspond to the exported certificates. Note than the export operation requires the export data to be protected by a password, so the Password parameter of the Export-QADCertificate cmdlet is used to set a password.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADPKIObject
		</command:name>
		<maml:description>
			<maml:para>Retrieve objects from PKI-related containers in Active Directory, such as the Certification Authorities, AIA or CDP container, or NTAuthCertificates object.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADPKIObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve objects from PKI-related containers that are used by certification authorities (CAs) to publish certificates, certificate revocation lists (CRLs), and other data to Active Directory. This cmdlet is intended to retrieve objects held in those containers. Output objects of this cmdlet could be passed, for example, to cmdlets for retrieving certificates or certificate revocation lists published in Active Directory.

The cmdlet can retrieve data from the following Active Directory containers:

    Certification Authorities (RootCA)  This is the publication point for the trusted root certification authorities&#39; (CA) certificates. Publishing a root CA&#39;s certificate to the Certification Authorities container causes all domain members to import the root CA&#39;s certificate into their own trusted root CA stores. Objects in this container hold certificates for trusted root CAs in the forest. Root CA certificates are added automatically when an enterprise admin sets up an enterprise root CA or stand-alone root CA that is joined to the domain. Root CA certificates can also be added or removed from this container by using the Publish- or Unpublish-QADCertificate cmdlet.

    Authority information access (AIA)  This is the publication point for the most currently published CA certificates for root and intermediate certification authorities. Publishing CA certificates to the AIA container helps clients find CA certificates dynamically during certificate chain building. The CA certificates that are available in the AIA container are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store. Objects in this container hold CA certificates that can be retrieved by clients using the authority information access (AIA) certificate extension to build a valid certificate chain and to retrieve any cross-certificates issued by the CA. The Publish- or Unpublish-QADCertificate cmdlet can be used to add or remove certificates from this container.

    NTAuthCertificates (NTAuthCA)  Publishing CA certificates to the NTAuthCertificates object indicates that these CAs are trusted to both (1) issue authentication (logon) certificates for any user in the forest and (2) enable logon for smart cards, IIS mapping, and Extensible Authentication Protocol-Transport Layer Security (EAP-TLS). The CA certificates that are available in the NTAuthCertificates object are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store. Normally, this object contains all of the CA certificates in the current forest. Certificates are added automatically when a new CA is installed by an enterprise admin. Certificates can also be added or removed from this object by using the Publish- or Unpublish-QADCertificate cmdlet.

    CRL distribution point (CDP)  This is the publication point for the certification authorities&#39; (CA) certificate revocation lists (CRL). Publishing a CA&#39;s certificate revocation list to the CDP container enables all domain members to verify the revocation status of certificates issued by the CA. Objects in this container hold all base CRLs and delta CRLs published in the forest. Certificate revocation lists can be added or removed from this container by using the Publish- or Unpublish-QADCertificateRevocationList cmdlet.

For every Active Directory forest, these containers are located in the forest&#39;s Configuration naming context under Services/Public Key Services, and are therefore replicated to every domain controller in the forest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADPKIObject</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Container</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the PKI-related containers from which you want to retrieve data. The possible parameter values are:

    RootCA    IIdentifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    CDP       Identifies the CRL distribution point container
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">PKIContainerType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Forest</maml:name>
				<maml:description>
					<maml:para>Use this parameter to identify the Active Directory forest of the PKI-related containers from which you want to retrieve data. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the target PKI-related containers, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Container</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the PKI-related containers from which you want to retrieve data. The possible parameter values are:

    RootCA    IIdentifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    CDP       Identifies the CRL distribution point container
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">PKIContainerType[]</command:parameterValue>
			<dev:type>
				<maml:name>PKIContainerType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Forest</maml:name>
			<maml:description>
				<maml:para>Use this parameter to identify the Active Directory forest of the PKI-related containers from which you want to retrieve data. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the target PKI-related containers, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPKIObject RootCA,AIA | Get-QADCertificate                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the certificates that are published in the Certification Authorities (RootCA) or AIA container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPKIObject CDP | Get-QADCertificateRevocationList                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve all the certificate revocation lists that are published in the forest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Publish-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Publish X.509 certificates to PKI-related containers in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Publish</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to publish X.509 certificates to PKI-related containers in the Active Directory configuration naming context. The following containers are supported:

    Certification Authorities (RootCA)  This is the publication point for the trusted root certification authorities&#39; (CA) certificates. Publishing a root CA&#39;s certificate to the Certification Authorities container causes all domain members to import the root CA&#39;s certificate into their own trusted root CA stores.

    Authority information access (AIA)  This is the publication point for the most currently published CA certificates for root and intermediate certification authorities. Publishing CA certificates to the AIA container helps clients find CA certificates dynamically during certificate chain building. The CA certificates that are available in the AIA container are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store.

    NTAuthCertificates (NTAuthCA)  Publishing CA certificates to the NTAuthCertificates object indicates that these CAs are trusted to both (1) issue authentication (logon) certificates for any user in the forest and (2) enable logon for smart cards, IIS mapping, and Extensible Authentication Protocol-Transport Layer Security (EAP-TLS). The CA certificates that are available in the NTAuthCertificates object are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store.

For every Active Directory forest, these containers are located in the forest&#39;s Configuration naming context under Services/Public Key Services, and are therefore replicated to every domain controller in the forest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Publish-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Container</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the PKI containers where you want to publish certificates. The possible parameter values are:

    RootCA    Identifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CAContainerType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to publish. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CrossCertificate</maml:name>
				<maml:description>
					<maml:para>Supply this parameter when publishing cross-certificates.

A cross-certificate is a certificate issued by one Certification Authority (CA) that signs the public key for the root certificate of another Certification Authority. Cross-certificates provide a means to create a chain of trust from a single, trusted, root CA to multiple other CAs.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Forest</maml:name>
				<maml:description>
					<maml:para>Use this parameter to identify the Active Directory forest where you want to publish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to publish. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Container</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the PKI containers where you want to publish certificates. The possible parameter values are:

    RootCA    Identifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CAContainerType[]</command:parameterValue>
			<dev:type>
				<maml:name>CAContainerType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CrossCertificate</maml:name>
			<maml:description>
				<maml:para>Supply this parameter when publishing cross-certificates.

A cross-certificate is a certificate issued by one Certification Authority (CA) that signs the public key for the root certificate of another Certification Authority. Cross-certificates provide a means to create a chain of trust from a single, trusted, root CA to multiple other CAs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Forest</maml:name>
			<maml:description>
				<maml:para>Use this parameter to identify the Active Directory forest where you want to publish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>X509CertificateUI,CAContainerType</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>X509CertificateUI</maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\cert | Import-QADCertificate | Publish-QADCertificate -Container AIA                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Publish the certificates from the files located in the c:\cert folder to the authority information access (AIA) container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unpublish-QADCertificate
		</command:name>
		<maml:description>
			<maml:para>Remove X.509 certificates from PKI-related containers in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unpublish</command:verb>
		<command:noun>QADCertificate</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove X.509 certificates from Certification Authority objects held in PKI-related containers in the Active Directory configuration naming context. The following containers are supported:

    Certification Authorities (RootCA)  This is the publication point for the trusted root certification authorities&#39; (CA) certificates. Publishing a root CA&#39;s certificate to the Certification Authorities container causes all domain members to import the root CA&#39;s certificate into their own trusted root CA stores.

    Authority information access (AIA)  This is the publication point for the most currently published CA certificates for root and intermediate certification authorities. Publishing CA certificates to the AIA container helps clients find CA certificates dynamically during certificate chain building. The CA certificates that are available in the AIA container are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store.

    NTAuthCertificates (NTAuthCA)  Publishing CA certificates to the NTAuthCertificates object indicates that these CAs are trusted to both (1) issue authentication (logon) certificates for any user in the forest and (2) enable logon for smart cards, IIS mapping, and Extensible Authentication Protocol-Transport Layer Security (EAP-TLS). The CA certificates that are available in the NTAuthCertificates object are also deployed with group policies into every client computer&#39;s Intermediate Certification Authorities store.

For every Active Directory forest, these containers are located in the forest&#39;s Configuration naming context under Services/Public Key Services, and are therefore replicated to every domain controller in the forest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unpublish-QADCertificate</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Container</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the PKI containers from which you want to remove certificates. The possible parameter values are:

    RootCA    Identifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CAContainerType[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
				<maml:name>Certificate</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the certificate objects representing the certificates to remove. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CrossCertificate</maml:name>
				<maml:description>
					<maml:para>Supply this parameter when removing cross-certificates.

A cross-certificate is a certificate issued by one Certification Authority (CA) that signs the public key for the root certificate of another Certification Authority. Cross-certificates provide a means to create a chain of trust from a single, trusted, root CA to multiple other CAs.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete the Certification Authority object from which all certificates have been removed by the unpublish operation. Without this parameter, the cmdlet does not delete the Certification Authority object, even though all certificates are removed from that object.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Forest</maml:name>
				<maml:description>
					<maml:para>Use this parameter to identify the Active Directory forest where you want to unpublish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="2">
			<maml:name>Certificate</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the certificate objects representing the certificates to remove. This could be output objects of the Get-QADCertificate or Import-QADCertificate cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509CertificateUI[]</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Container</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the PKI containers from which you want to remove certificates. The possible parameter values are:

    RootCA    Identifies the Certification Authorities (trusted root CA) container
    AIA       Identifies the authority information access container
    SubCA     Same as AIA
    NTAuthCA  Identifies the NTAuthCertificates object
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CAContainerType[]</command:parameterValue>
			<dev:type>
				<maml:name>CAContainerType[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CrossCertificate</maml:name>
			<maml:description>
				<maml:para>Supply this parameter when removing cross-certificates.

A cross-certificate is a certificate issued by one Certification Authority (CA) that signs the public key for the root certificate of another Certification Authority. Cross-certificates provide a means to create a chain of trust from a single, trusted, root CA to multiple other CAs.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete the Certification Authority object from which all certificates have been removed by the unpublish operation. Without this parameter, the cmdlet does not delete the Certification Authority object, even though all certificates are removed from that object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Forest</maml:name>
			<maml:description>
				<maml:para>Use this parameter to identify the Active Directory forest where you want to unpublish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>X509CertificateUI,CAContainerType</maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\cert | Import-QADCertificate | Unpublish-QADCertificate AIA,RootCA                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove the certificates found in the certificate files held in the c:\cert folder, from the authority information access (AIA) and trusted root CA (RootCA) containers.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADLocalCertificateStore
		</command:name>
		<maml:description>
			<maml:para>Delete X.509 certificate stores held in a store location such as CurrentUser or LocalMachine.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADLocalCertificateStore</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to delete a certificate store. You can identify the certificate store either by name and location or by using an output object of the Get-QADLocalCertificateStore cmdlet (see examples).

The cmdlet allows you to specify a store location from which to remove certificate stores. Certificate stores are physical stores in which certificates are saved and managed. Store locations are high-level containers that group the certificate stores for the current user and for all users. Each system has the CurrentUser store location and the LocalMachine (all users) store location.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADLocalCertificateStore</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>StoreName</maml:name>
				<maml:description>
					<maml:para>Specify the name of the certificate store to remove. Use a string array of names to remove more than one store at a time.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>StoreLocation</maml:name>
				<maml:description>
					<maml:para>Specify the location from which to remove a certificate store. The possible parameter values are:
   CurrentUser   The store holds certificates for the current user - default value.
   LocalMachine  The store holds certificates for the local machine (all users).</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false"  variableLength="false" >CurrentUser</command:parameterValue>
				<command:parameterValue required="false"  variableLength="false" >LocalMachine</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-QADLocalCertificateStore</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply an object representing the certificate store to remove. This could be an object output by the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply an object representing the certificate store to remove. This could be an object output by the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>StoreLocation</maml:name>
			<maml:description>
				<maml:para>Specify the location from which to remove a certificate store. The possible parameter values are:
   CurrentUser   The store holds certificates for the current user - default value.
   LocalMachine  The store holds certificates for the local machine (all users).</maml:para>
				<maml:para>The following values are permitted for this object type.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">StoreLocation</command:parameterValue>
			<dev:type>
				<maml:name>StoreLocation</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>CurrentUser</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>CurrentUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LocalMachine</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>StoreName</maml:name>
			<maml:description>
				<maml:para>Specify the name of the certificate store to remove. Use a string array of names to remove more than one store at a time.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore MyStore* | Remove-QADLocalCertificateStore                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all certificate stores whose name begins with MyStore, from the CurrentUser store location.

In this command, the target certificate stores are retrieved by Get-QADLocalCertificateStore. Since the StoreLocation parameter is not supplied, the cmdlet retrieves certificate stores from the CurrentUser store location. The output objects are passed to Remove-QADLocalCertificateStore through the Store parameter, which is designed to accept parameter values from the pipeline.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Remove-QADLocalCertificateStore MyStore*                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all certificate stores whose name begins with MyStore, from the CurrentUser store location.

In this command, the target certificate stores are identified by name and location through the StoreName and StoreLocation parameters. Since the StoreLocation parameter is not supplied, the cmdlet looks for certificate stores in the CurrentUser store location.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Retrieve certificate revocation lists from a certificate store or Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to retrieve certificate revocation lists from a particular location, which could be either a certificate store on the local computer or a CRL distribution point (cRLDistributionPoint) object in Active Directory. Each of the objects output by this cmdlet represents a certificate revocation list found in the specified location, and can be passed to other *-QADCertificateRevocationList cmdlets intended to manage certificate revocation lists.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store from which to retrieve certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>DirObj</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object representing the CRL distribution point (cRLDistributionPoint) object from which to a retrieve certificate revocation list. To retrieve the certificate revocation lists that are published to a particular CRL distribution point in Active Directory, you could first retrieve the corresponding cRLDistributionPoint objects by using Get-QADPKIObject and then pass the output objects to this parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>DirObj</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object representing the CRL distribution point (cRLDistributionPoint) object from which to a retrieve certificate revocation list. To retrieve the certificate revocation lists that are published to a particular CRL distribution point in Active Directory, you could first retrieve the corresponding cRLDistributionPoint objects by using Get-QADPKIObject and then pass the output objects to this parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store from which to retrieve certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore CA | Get-QADCertificateRevocationList                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the certificate revocation lists from the Intermediate Certification Authorities certificate store in the CurrentUser store location.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPKIObject CDP | Get-QADCertificateRevocationList                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Retrieve the certificate revocation lists from the CRL distribution point (CDP) container in Active Directory.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Import-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Create a certificate revocation list (CRL) object and populate the object with the CRL data from a byte array or a file.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Import</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to create a certificate revocation list (CRL) object populated with the CRL data found in a byte array or a file. The cmdlet can take an output object of the Get-Content cmdlet containing the data found in a CRL file, and return a CRL object that represents the corresponding certificate revocation list. Another option is to have the cmdlet import the certificate revocation list directly from a CRL file specified (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Import-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive a FileInfo object that identifies the file containing the certificate revocation list (CRL) data to import. If you need to supply the path and name of the file, use the FileName parameter.

With this parameter, the cmdlet takes a CRL file that represents a certificate revocation list, and populates the output object with the CRL the file contains. This could be, for example, a file created by using the Export-QADCertificateRevocationList cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Import-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>FileName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to supply the path and name of the file containing the certificate revocation list (CRL) data to import. The path can be an absolute path, such as c:\export.crl, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.

With this parameter, the cmdlet takes a CRL file that represents a certificate revocation list, and populates the output object with the CRL the file contains. This could be, for example, a file created by using the Export-QADCertificateRevocationList cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Import-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>RawData</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the object that contains the certificate revocation list (CRL) data to import. This could be, for example, an output object of the Get-Content cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive a FileInfo object that identifies the file containing the certificate revocation list (CRL) data to import. If you need to supply the path and name of the file, use the FileName parameter.

With this parameter, the cmdlet takes a CRL file that represents a certificate revocation list, and populates the output object with the CRL the file contains. This could be, for example, a file created by using the Export-QADCertificateRevocationList cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
			<dev:type>
				<maml:name>FileInfo</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>FileName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to supply the path and name of the file containing the certificate revocation list (CRL) data to import. The path can be an absolute path, such as c:\export.crl, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.

With this parameter, the cmdlet takes a CRL file that represents a certificate revocation list, and populates the output object with the CRL the file contains. This could be, for example, a file created by using the Export-QADCertificateRevocationList cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>RawData</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the object that contains the certificate revocation list (CRL) data to import. This could be, for example, an output object of the Get-Content cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">object</command:parameterValue>
			<dev:type>
				<maml:name>object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Import-QADCertificateRevocationList c:\export.crl                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a CRL object that represents a certificate revocation list found in the specified CRL file (c:\export.crl).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\crl | Import-QADCertificateRevocationList                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Create a set of CRL objects each of which represents one of the certificate revocation lists found in the CRL files that are located in the specified folder (c:\crl).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Add certificate revocation lists to a local certificate store.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add the certificate revocation list (CRL) represented by a given CRL object to a local certificate store. The cmdlet takes an output object of the Get-QADCertificateRevocationList or Import-QADCertificateRevocationList cmdlet, and updates the specified certificate store with the certificate revocation list represented by that object.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store to which to add certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>CRL</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to add. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>CRL</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to add. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			<dev:type>
				<maml:name>CertificateRevocationListUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store to which to add certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$crl = dir c:\crl | Import-QADCertificateRevocationList

C:\PS&gt;Get-QADLocalCertificateStore MyStore | Add-QADCertificateRevocationList -CRL $crl                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Import the certificate revocation lists from the files located in a certain folder to a particular local certificate store.

The first command populates the $crl variable with the objects representing the certificate revocation lists found in the files that are located in the specified folder (c:\crl). In the second command, Get-QADLocalCertificateStore MyStore retrieves the certificate store and passes the output object to Add-QADCertificateRevocationList whose CRL parameter takes the $crl variable, thereby causing the certificate revocation lists from the $crl variable to be added to the certificate store identified by the output object of Get-QADLocalCertificateStore MyStore.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Export-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Export a certificate revocation list (CRL) to a byte array or a file.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Export</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to export the certificate revocation list (CRL) represented by a given CRL object, to a byte array or a file. The cmdlet can take an output object of the Get-QADCertificateRevocationList cmdlet, and return a byte array containing the CRL data found in that object. Another option is to have the cmdlet export the certificate revocation list directly to a file specified (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Export-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>CRL</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to export. This could be output objects of the Get-QADCertificateRevocationList cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Encoding</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify how to encode the export data. The possible parameter values are:
    Binary    The export data is a pure binary sequence
    Base64    The export data is base64-encoded (default value)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">CertificateEncoding</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the path and name of a file to which you want to export the certificate revocation lists. The path can be an absolute path, such as c:\export.crl, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>CRL</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to export. This could be output objects of the Get-QADCertificateRevocationList cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			<dev:type>
				<maml:name>CertificateRevocationListUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Encoding</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify how to encode the export data. The possible parameter values are:
    Binary    The export data is a pure binary sequence
    Base64    The export data is base64-encoded (default value)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">CertificateEncoding</command:parameterValue>
			<dev:type>
				<maml:name>CertificateEncoding</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>File</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the path and name of a file to which you want to export the certificate revocation lists. The path can be an absolute path, such as c:\export.crl, or a relative path. If the path or file name includes spaces, enclose the parameter value in quotation marks.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore CertificateAuthority | Get-QADCertificateRevocationList | %{$count++; Export-QADCertificateRevocationList $_ -File &quot;C:\crl\local-$($count).crl&quot;} | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>In this command, the Get-QADLocalCertificateStore CertificateAuthority | Get-QADCertificateRevocationList pipeline retrieves the certificate revocation lists from the Intermediate Certification Authorities certificate store in the CurrentUser store location and passes the CRL objects to a script block where Export-QADCertificateRevocationList exports each CRL to a separate file. The export files are base64-encoded since the Encoding parameter is omitted.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADPKIObject CDP | Get-QADCertificateRevocationList | %{$count++; Export-QADCertificateRevocationList $_ -File &quot;C:\crl\ad-$($count).crl&quot; -Encoding Binary} | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>In this command, the Get-QADPKIObject CDP | Get-QADCertificateRevocationList pipeline retrieves the certificate revocation lists from the CRL distribution point (CDP) container in Active Directory and passes the CRL objects to a script block where Export-QADCertificateRevocationList exports each CRL to a separate file. The export files are binary-encoded, which is due to the Encoding parameter value of Binary.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Publish-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Publish certificate revocation lists to the CRL distribution point (CDP) container in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Publish</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to publish certificate revocation lists to the CRL distribution point (CDP) container in the Active Directory configuration naming context. The CDP container is the publication point for the certification authorities&#39; (CA) certificate revocation lists (CRL). Publishing a CA&#39;s certificate revocation list to the CDP container enables all domain members to verify the revocation status of certificates issued by the CA. For every Active Directory forest, the CDP container is located in the forest&#39;s Configuration naming context, and is therefore replicated to every domain controller in the forest. Note that the CRLs that are available in the CDP container are not automatically deployed into client computers, so CRLs in this container have an effect only on certificates whose CRL distribution points setting specifies the CDP container as a CRL location.

Publication of a CRL effectively adds the CRL to a certain CRL distribution point (cRLDistributionPoint) object held in a sub-container of the CDP container, with the sub-container normally identified by the NetBIOS name of a particular CA server computer. The cmdlet allows you to specify one or more CA names for a single publish operation.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Publish-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>CAName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the Certification Authority name for the publish operation. When publishing a certificate revocation list (CRL), the cmdlet adds the CRL to a certain CRL distribution point (cRLDistributionPoint) object in a sub-container of the CDP container, with the sub-container&#39;s name identified by the value of this parameter. A parameter value could be the NetBIOS name of the server running the Certification Authority for which you want to publish a certificate revocation list (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>CRL</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to publish. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Forest</maml:name>
				<maml:description>
					<maml:para>Use this parameter to identify the Active Directory forest where you want to publish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>CAName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the Certification Authority name for the publish operation. When publishing a certificate revocation list (CRL), the cmdlet adds the CRL to a certain CRL distribution point (cRLDistributionPoint) object in a sub-container of the CDP container, with the sub-container&#39;s name identified by the value of this parameter. A parameter value could be the NetBIOS name of the server running the Certification Authority for which you want to publish a certificate revocation list (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>CRL</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to publish. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			<dev:type>
				<maml:name>CertificateRevocationListUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Forest</maml:name>
			<maml:description>
				<maml:para>Use this parameter to identify the Active Directory forest where you want to publish certificates. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the PKI containers to act upon, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\crl | Import-QADCertificateRevocationList | Publish-QADCertificateRevocationList -CAName CA3SRV                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Publish the certificate revocation lists from the files located in the c:\crl folder to a CRL distribution point object for the CA server named CA3SRV.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unpublish-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Remove certificate revocation lists from the CRL distribution point (CDP) container in Active Directory.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unpublish</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to unpublish certificate revocation lists from the CRL distribution point (CDP) container in the Active Directory configuration naming context. The CDP container is the publication point for the certification authorities&#39; (CA) certificate revocation lists (CRL). Publishing a CA&#39;s certificate revocation list to the CDP container enables all domain members to verify the revocation status of certificates issued by the CA. For every Active Directory forest, the CDP container is located in the forest&#39;s Configuration naming context, and is therefore replicated to every domain controller in the forest. Note that the CRLs that are available in the CDP container are not automatically deployed into client computers, so CRLs in this container have an effect only on certificates whose CRL distribution points setting specifies the CDP container as a CRL location.

Unpublishing a CRL effectively removes the CRL from a certain CRL distribution point (cRLDistributionPoint) object held in a sub-container of the CDP container, with the sub-container normally identified by the NetBIOS name of a particular CA server computer. The cmdlet allows you to specify one or more CA names for a single unpublish operation.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unpublish-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>CAName</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the Certification Authority name for the unpublish operation. When unpublishing a certificate revocation list (CRL), the cmdlet removes the CRL to a certain CRL distribution point (cRLDistributionPoint) object in a sub-container of the CDP container, with the sub-container&#39;s name identified by the value of this parameter. A parameter value could be the NetBIOS name of the server running the Certification Authority for which you want to unpublish a certificate revocation list (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>CRL</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to remove. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to delete the CRL distribution point (cRLDistributionPoint) object from which all certificate revocation lists have been removed by the unpublish operation. Without this parameter, the cmdlet does not delete the cRLDistributionPoint object, even though all certificate revocation lists are removed from that object. This parameter also causes the cmdlet to delete the container that held the deleted cRLDistributionPoint object, if the container is empty.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Forest</maml:name>
				<maml:description>
					<maml:para>Use this parameter to identify the Active Directory forest where you want to unpublish certificate revocation lists. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the target CDP container, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>CAName</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the Certification Authority name for the unpublish operation. When unpublishing a certificate revocation list (CRL), the cmdlet removes the CRL to a certain CRL distribution point (cRLDistributionPoint) object in a sub-container of the CDP container, with the sub-container&#39;s name identified by the value of this parameter. A parameter value could be the NetBIOS name of the server running the Certification Authority for which you want to unpublish a certificate revocation list (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>CRL</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to remove. This could be output objects of the Import-QADCertificateRevocationList cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			<dev:type>
				<maml:name>CertificateRevocationListUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to delete the CRL distribution point (cRLDistributionPoint) object from which all certificate revocation lists have been removed by the unpublish operation. Without this parameter, the cmdlet does not delete the cRLDistributionPoint object, even though all certificate revocation lists are removed from that object. This parameter also causes the cmdlet to delete the container that held the deleted cRLDistributionPoint object, if the container is empty.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Forest</maml:name>
			<maml:description>
				<maml:para>Use this parameter to identify the Active Directory forest where you want to unpublish certificate revocation lists. Parameter value is the fully qualified distinguished name of the forest root domain. This parameter only has an effect on the operations being performed through Quest One ActiveRoles (connection established using the Proxy parameter). In case of a proxy connection, the Forest parameter is required to identify the forest of the target CDP container, since Quest One ActiveRoles could be configured to manage domains from more than one forest.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
dir c:\crl | Import-QADCertificateRevocationList | Unpublish-QADCertificateRevocationList CAName CA3SRV -Force                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove the certificate revocation lists found in the files held in the c:\crl folder, from a CRL distribution point object for the CA server named CA3SRV. The Force parameter in this command causes the cmdlet to delete the CRL distribution point object from which all certificate revocation lists are removed.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADCertificateRevocationList
		</command:name>
		<maml:description>
			<maml:para>Remove certificate revocation lists from a local certificate store.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADCertificateRevocationList</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove the certificate revocation list (CRL) represented by a given CRL object from a local certificate store. The cmdlet takes an output object of the Get-QADCertificateRevocationList or Import-QADCertificateRevocationList cmdlet, and updates the specified certificate store to remove the certificate revocation list represented by that object.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADCertificateRevocationList</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Store</maml:name>
				<maml:description>
					<maml:para>Parameter value is an object that identifies the certificate store from which to remove certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>CRL</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to remove. This could be output objects of the Import-QADCertificateRevocationList cmdlet. If this parameter is omitted, the cmdlet removes all certificate revocation lists from the certificate store specified by the Store parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>CRL</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the CRL objects representing the certificate revocation lists to remove. This could be output objects of the Import-QADCertificateRevocationList cmdlet. If this parameter is omitted, the cmdlet removes all certificate revocation lists from the certificate store specified by the Store parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">CertificateRevocationListUI[]</command:parameterValue>
			<dev:type>
				<maml:name>CertificateRevocationListUI[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Store</maml:name>
			<maml:description>
				<maml:para>Parameter value is an object that identifies the certificate store from which to remove certificate revocation lists. Normally, this is an output object of the Get-QADLocalCertificateStore cmdlet (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">X509CertificateStoreUI</command:parameterValue>
			<dev:type>
				<maml:name>X509CertificateStoreUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
$crl = dir c:\crl | Import-QADCertificateRevocationList

C:\PS&gt;Get-QADLocalCertificateStore MyStore | Remove-QADCertificateRevocationList -CRL $crl                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Import the certificate revocation lists from the files located in a certain folder to a particular local certificate store.

The first command populates the $crl variable with the objects representing the certificate revocation lists found in the files that are located in the specified folder (c:\crl). In the second command, Get-QADLocalCertificateStore MyStore retrieves the certificate store and passes the output object to Remove-QADCertificateRevocationList whose CRL parameter takes the $crl variable, thereby causing the certificate revocation lists found in the $crl variable to be removed from the certificate store identified by the output object of Get-QADLocalCertificateStore MyStore.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADLocalCertificateStore MyStore | Remove-QADCertificateRevocationList                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Remove all certificate revocation lists held in the specified local certificate store.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADProgressPolicy
		</command:name>
		<maml:description>
			<maml:para>View the user preference on whether to display a progress bar for long-running commands.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADProgressPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to examine the settings that were specified by using Set-QADProgressPolicy, and are in effect for the current user session. These settings control whether the QAD and QARS cmdlets that support the ShowProgress parameter display a progress bar by default. When performing a lengthy operation (that is, an operation that lasts longer than a certain threshold time), such a cmdlet may display a progress bar to depict the status of the operation. Whether a progress bar is displayed, depends upon the ShowProgress setting. The threshold time is controlled by the Threshold setting. These settings only affect the current user, and can be overridden on a per-cmdlet basis. For details regarding the ShowProgress or Threshold setting, see the corresponding parameter description for the Set-QADProgressPolicy cmdlet.

Note that the progress bar feature is based on the Write-Progress function that was first introduced in version 2.0 of Windows PowerShell. With Windows PowerShell 1.0 this feature is not available.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADProgressPolicy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>View the ShowProgress and Threshold settings that are in effect for the current user session.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADProgressPolicy
		</command:name>
		<maml:description>
			<maml:para>Set the user preference on whether to display a progress bar for long-running commands.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADProgressPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to specify whether you want the QAD and QARS cmdlets that support the ShowProgress parameter, to display a progress bar by default. When performing a lengthy operation (that is, an operation that lasts longer than a certain threshold time), such a cmdlet may display a progress bar to depict the status of the operation. Whether a progress bar is displayed, depends upon the ShowProgress setting. A threshold time can be set by using the Threshold parameter. These settings only affect the current user, and can be overridden on a per-cmdlet basis.

Note that the progress bar feature is based on the Write-Progress function that was first introduced in version 2.0 of Windows PowerShell. With Windows PowerShell 1.0 this feature is not available.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADProgressPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowProgress</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify whether you want QAD and QARS cmdlets to display a progress bar that depicts the status of the running command in case of a lengthy operation. This setting has an effect only on the cmdlets that support the ShowProgress and ProgressThreshold parameters to control the appearance of a progress bar.

The ShowProgress setting of TRUE causes a cmdlet that supports the ShowProgress parameter to display a progress bar, even if the ShowProgress parameter is omitted. The ShowProgress setting of FALSE suppresses a progress bar unless the ShowProgress parameter is supplied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Threshold</maml:name>
				<maml:description>
					<maml:para>Use this parameter to set the default delay, in seconds, before a cmdlet that performs a lengthy operation displays a progress bar to depict the status of the running command. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. This threshold time setting is used as the default threshold time setting by the QAD and QARS cmdlets that support the ShowProgress and ProgressThreshold parameters to control the appearance of a progress bar.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowProgress</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify whether you want QAD and QARS cmdlets to display a progress bar that depicts the status of the running command in case of a lengthy operation. This setting has an effect only on the cmdlets that support the ShowProgress and ProgressThreshold parameters to control the appearance of a progress bar.

The ShowProgress setting of TRUE causes a cmdlet that supports the ShowProgress parameter to display a progress bar, even if the ShowProgress parameter is omitted. The ShowProgress setting of FALSE suppresses a progress bar unless the ShowProgress parameter is supplied.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Threshold</maml:name>
			<maml:description>
				<maml:para>Use this parameter to set the default delay, in seconds, before a cmdlet that performs a lengthy operation displays a progress bar to depict the status of the running command. If the running command finishes before the threshold time has elapsed, a progress bar does not appear. This threshold time setting is used as the default threshold time setting by the QAD and QARS cmdlets that support the ShowProgress and ProgressThreshold parameters to control the appearance of a progress bar.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADProgressPolicy -ShowProgress $true -ProgressThreshold 2 | Out-Null                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Set the user preference for the progress bar appearance policy, to cause a progress bar to appear by default when a command takes longer than 2 seconds to finish.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-QADInactiveAccountsPolicy
		</command:name>
		<maml:description>
			<maml:para>View the current user preference on what accounts to consider inactive by default.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>QADInactiveAccountsPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to examine the settings that were specified by using Set-QADInactiveAccountsPolicy, and are in effect for the current user session. These settings specify the default conditions that must be met for a user or computer account to be considered inactive. The inactivity conditions are specific to the current user, and have an effect on the cmdlets that support the Inactive parameter (such as Get-QADUser or Get-QADComputer). If no account-inactivity related parameters other than Inactive are supplied, then the Inactive parameter retrieves the accounts that meet the conditions defined by the AccountExpiredPeriod, AccountNotLoggedOnPeriod, and PasswordNotChangedPeriod settings that you can examine using this cmdlet. For details regarding each of these settings, see the corresponding parameter description for the Set-QADInactiveAccountsPolicy cmdlet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADInactiveAccountsPolicy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>View the default account inactivity conditions that are in effect for the current user session.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADInactiveAccountsPolicy
		</command:name>
		<maml:description>
			<maml:para>Set the current user preference on what accounts to consider inactive by default.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADInactiveAccountsPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to specify the default conditions that must be met for a user or computer account to be considered inactive. The inactivity conditions are specific to the current user, and have an effect on the cmdlets that support the Inactive parameter (such as Get-QADUser or Get-QADComputer). If no account-inactivity related parameters other than Inactive are supplied, then the Inactive parameter retrieves the accounts that meet the conditions defined by this cmdlet. To view the inactivity conditions that are currently in effect, use the Get-QADInactiveAccountsPolicy cmdlet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADInactiveAccountsPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiredPeriod</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the number of days after which an expired account is considered inactive by default. Thus, an account is considered inactive if the account remains in the expired state for more days than specified by this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotLoggedOnPeriod</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the period, in days, that an account is not used to log on, after which the account is considered inactive by default. Thus, an account is considered inactive if no successful logons to that account occur for more days than specified by this parameter.

The last time that a given user or computer successfully logged on to the domain is retrieved from the lastLogonTimeStamp attribute of the user or computer object. This requires the domain functional level of Windows 2003 or higher. Also note that Active Directory updates this attribute only periodically, rather than every time that a user or computer logs on. The period of update is configurable, and defaults to 14 days. This means that lastLogonTimeStamp for any given user or computer could be off by as much as 14 days, so the true last logon time is later than lastLogonTimeStamp. Hence, it is advisable to choose AccountNotLoggedOnPeriod of more than 14 days.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotChangedPeriod</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the password age, in days, after which an account is considered inactive by default. Thus, an account is considered inactive if the password of the account remains unchanged for more days than specified by this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiredPeriod</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the number of days after which an expired account is considered inactive by default. Thus, an account is considered inactive if the account remains in the expired state for more days than specified by this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotLoggedOnPeriod</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the period, in days, that an account is not used to log on, after which the account is considered inactive by default. Thus, an account is considered inactive if no successful logons to that account occur for more days than specified by this parameter.

The last time that a given user or computer successfully logged on to the domain is retrieved from the lastLogonTimeStamp attribute of the user or computer object. This requires the domain functional level of Windows 2003 or higher. Also note that Active Directory updates this attribute only periodically, rather than every time that a user or computer logs on. The period of update is configurable, and defaults to 14 days. This means that lastLogonTimeStamp for any given user or computer could be off by as much as 14 days, so the true last logon time is later than lastLogonTimeStamp. Hence, it is advisable to choose AccountNotLoggedOnPeriod of more than 14 days.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotChangedPeriod</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the password age, in days, after which an account is considered inactive by default. Thus, an account is considered inactive if the password of the account remains unchanged for more days than specified by this parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Set-QADInactiveAccountsPolicy -AccountExpiredPeriod 0 -AccountNotLoggedOnPeriod 30 -PasswordNotChangedPeriod 120                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Set the default inactivity conditions so that an account is considered inactive if any of the following is true:
 - The account is expired
 - The account was not used to log on for at least 30 days
 - The password of the account remains unchanged for at least 120 days</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-QADProxyAddress
		</command:name>
		<maml:description>
			<maml:para>Add e-mail addresses for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>QADProxyAddress</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to add an e-mail address for an Exchange recipient. You can add an SMTP e-mail address (default), or you can an e-mail address of a custom type, such as an X400, GroupWise, or Lotus Notes address type. It is also possible to specify an arbitrary custom e-mail address type. Since Exchange does not validate custom addresses for proper formatting, you must ensure that the custom address you specify complies with the format requirements for that address type. Because X.400 addresses are considered custom addresses in Exchange, they are also not validated. Therefore, you must provide the correct syntax when specifying an X.400 address.

The cmdlet allows you to identify the Exchange recipient by passing through the pipeline the corresponding output object of a Get-QAD* cmdlet. In this case, the DirObject parameter is used to receive the output object. Another way to identify the Exchange recipient is by passing the output of an *-QADProxyAddress cmdlet, in which case it is the CurrentAddresses parameter that receives the output object (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Address</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address to add, such as &#39;jsmith@company.com&#39;. You could prepend the address with a prefix to specify the address type, such as &#39;X400:C=US;A=;O=Exchange;S=Smith;G=John&#39;. If you do not add a prefix, you can specify the address type through the Type or CustomType parameter. By default, the address type is set to SMTP.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>CurrentAddresses</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CustomType</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify an arbitrary custom address type. The e-mail address type is the identifying proxy information for the e-mail address. Exchange uses this information to determine how to process the e-mail address. The e-mail address type cannot exceed 9 characters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Primary</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to set the e-mail address as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the address type of the e-mail address to add. The possible parameter values are:
    - SMTP (this address type is used if the Type and CustomType parameters are omitted)
    - X400
    - MS (MS Mail address type)
    - CCMAIL (ccMail address type)
    - MSA (MS Mail address type)
    - NOTES (Lotus Notes address type)
    - GWISE (Novell GroupWise address type)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Address</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address to add, such as &#39;jsmith@company.com&#39;. You could prepend the address with a prefix to specify the address type, such as &#39;X400:C=US;A=;O=Exchange;S=Smith;G=John&#39;. If you do not add a prefix, you can specify the address type through the Type or CustomType parameter. By default, the address type is set to SMTP.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>DirObject</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CustomType</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify an arbitrary custom address type. The e-mail address type is the identifying proxy information for the e-mail address. Exchange uses this information to determine how to process the e-mail address. The e-mail address type cannot exceed 9 characters.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Primary</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to set the e-mail address as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the address type of the e-mail address to add. The possible parameter values are:
    - SMTP (this address type is used if the Type and CustomType parameters are omitted)
    - X400
    - MS (MS Mail address type)
    - CCMAIL (ccMail address type)
    - MSA (MS Mail address type)
    - NOTES (Lotus Notes address type)
    - GWISE (Novell GroupWise address type)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressType</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Address</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the e-mail address to add, such as &#39;jsmith@company.com&#39;. You could prepend the address with a prefix to specify the address type, such as &#39;X400:C=US;A=;O=Exchange;S=Smith;G=John&#39;. If you do not add a prefix, you can specify the address type through the Type or CustomType parameter. By default, the address type is set to SMTP.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>CurrentAddresses</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			<dev:type>
				<maml:name>ProxyAddressChangesUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CustomType</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify an arbitrary custom address type. The e-mail address type is the identifying proxy information for the e-mail address. Exchange uses this information to determine how to process the e-mail address. The e-mail address type cannot exceed 9 characters.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DirObject</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Primary</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to set the e-mail address as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the address type of the e-mail address to add. The possible parameter values are:
    - SMTP (this address type is used if the Type and CustomType parameters are omitted)
    - X400
    - MS (MS Mail address type)
    - CCMAIL (ccMail address type)
    - MSA (MS Mail address type)
    - NOTES (Lotus Notes address type)
    - GWISE (Novell GroupWise address type)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyAddressType</command:parameterValue>
			<dev:type>
				<maml:name>ProxyAddressType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser company\jsmith | Add-QADProxyAddress -Address &#39;smtp:jsmith@company.com&#39; | Add-QADProxyAddress -Type SMTP -Address &#39;john.smith@company.com&#39; -Primary | Add-QADProxyAddress -CustomType &#39;sip&#39; -Address &#39;john.smith@company.com&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Add three e-mail addresses for a particular user mailbox. This command adds two SMTP addresses, one of which is set as the primary SMTP address, and a single e-mail address of a custom type. The first instance of Add-QADProxyAddress receives the user object through the DirObject parameter, whereas the other Add-QADProxyAddress instances rely on the CurrentAddresses parameter to receive the object that identifies the recipient.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser company\jsmith | Clear-QADProxyAddress | Add-QADProxyAddress -Address &#39;smtp:jsmith@company.com&#39; | Add-QADProxyAddress -Type SMTP -Address &#39;john.smith@company.com&#39; -Primary | Add-QADProxyAddress -CustomType &#39;sip&#39; -Address &#39;john.smith@company.com&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a particular user mailbox, replace all the existing e-mail addresses with three other e-mail addresses. In this command, Clear-QADProxyAddress removes the existing addresses, and then Add-QADProxyAddress adds two SMTP addresses, one of which is set as the primary SMTP address, and a single e-mail address of a custom type. Clear-QADProxyAddress receives the user object through the DirObject parameter, whereas the Add-QADProxyAddress instances rely on the CurrentAddresses parameter to receive the object that identifies the recipient.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser company\jsmith | Add-QADProxyAddress -Address &#39;smtp:john.smith@company.com&#39; -Primary | Remove-QADProxyAddress -Pattern &#39;*@company.com&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For a given user mailbox, replace the e-mail addresses that match a particular pattern with a new primary SMTP address.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-QADProxyAddress
		</command:name>
		<maml:description>
			<maml:para>Change existing e-mail addresses for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>QADProxyAddress</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to change an existing e-mail address, or a set of e-mail addresses, for an Exchange recipient. You can set a particular address as the primary or &quot;reply to&quot; address. It is also possible to edit an address, which effectively replaces the old address with the new one. Multiple addresses can be changed at a time by using the asterisk (*) wildcard to represent any string of characters in an e-mail address. This allows you, for example, to change the address suffix for all addresses at a time by identifying the target set of addresses as &#39;*@OldSuffix&#39; and using a pattern of &#39;*@NewSuffix&#39; to specify the desired changes.

The cmdlet allows you to identify the Exchange recipient by passing through the pipeline the corresponding output object of a Get-QAD* cmdlet. In this case, the DirObject parameter is used to receive the output object. Another way to identify the Exchange recipient is by passing the output of an *-QADProxyAddress cmdlet, in which case it is the CurrentAddresses parameter that receives the output object (see examples for the Add-QADProxyAddress cmdlet).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>From</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to change. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>To</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the new address to which you want to change the address specified by the From parameter. You can use the asterisk (*) wildcard in this parameter provided that the asterisk wildcard is also used in the From parameter. The characters that are represented by the asterisk wildcard in this parameter will be identical to the corresponding characters in the From parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>CurrentAddresses</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MakePrimary</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to set each of the e-mail addresses specified by the From parameter, as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>From</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to change. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>To</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the new address to which you want to change the address specified by the From parameter. You can use the asterisk (*) wildcard in this parameter provided that the asterisk wildcard is also used in the From parameter. The characters that are represented by the asterisk wildcard in this parameter will be identical to the corresponding characters in the From parameter (see examples).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>DirObject</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MakePrimary</maml:name>
				<maml:description>
					<maml:para>Supply this parameter to set each of the e-mail addresses specified by the From parameter, as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>CurrentAddresses</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			<dev:type>
				<maml:name>ProxyAddressChangesUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DirObject</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>From</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to change. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MakePrimary</maml:name>
			<maml:description>
				<maml:para>Supply this parameter to set each of the e-mail addresses specified by the From parameter, as the primary or &quot;reply to&quot; address. When the recipient sends an e-mail message, this is the e-mail address that is seen by other users and is the address to which they reply.

A recipient can have multiple e-mail addresses for a specific address type. This allows the recipient to receive messages that are addressed to any one of these e-mail addresses. However, a single address must be designated as the &quot;reply to&quot; address for each address type. An e-mail address that is designated as the &quot;reply to&quot; address is also considered the primary address for the specific address type.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>To</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the new address to which you want to change the address specified by the From parameter. You can use the asterisk (*) wildcard in this parameter provided that the asterisk wildcard is also used in the From parameter. The characters that are represented by the asterisk wildcard in this parameter will be identical to the corresponding characters in the From parameter (see examples).</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Set-QADProxyAddress -From &#39;*@source.com&#39; -MakePrimary                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For all mailbox users, set the e-mail address with a particular suffix as the primary address.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Set-QADProxyAddress -From &#39;*@before.com&#39; -To &#39;*@after.com&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For all mailbox users, change the e-mail addresses with a particular suffix to replace the existing suffix with a new one.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-QADProxyAddress
		</command:name>
		<maml:description>
			<maml:para>Remove e-mail addresses for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>QADProxyAddress</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove an e-mail address, or a set of e-mail addresses, for an Exchange recipient. Multiple addresses can be removed at a time by using the asterisk (*) wildcard to represent any string of characters in an e-mail address. This allows you, for example, to remove all e-mail addresses that have a particular suffix, by identifying the target set of addresses as &#39;*@Suffix&#39;.

The cmdlet allows you to identify the Exchange recipient by passing through the pipeline the corresponding output object of a Get-QAD* cmdlet. In this case, the DirObject parameter is used to receive the output object. Another way to identify the Exchange recipient is by passing the output of an *-QADProxyAddress cmdlet, in which case it is the CurrentAddresses parameter that receives the output object (see examples for the Add-QADProxyAddress cmdlet).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Pattern</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to remove. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus, a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>CurrentAddresses</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Pattern</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to remove. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus, a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>DirObject</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>CurrentAddresses</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			<dev:type>
				<maml:name>ProxyAddressChangesUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DirObject</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Pattern</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the e-mail address or set of e-mail addresses to remove. Parameter value can include the asterisk (*) wildcard to match any string of characters. Thus, a parameter value of &#39;*@company.com&#39; specifies a set of addresses each of which ends in @company.com.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser | Remove-QADProxyAddress -Pattern &#39;*@company.com&#39;                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>For all mailbox users, remove the e-mail addresses that have a particular suffix.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-QADProxyAddress
		</command:name>
		<maml:description>
			<maml:para>Remove all e-mail addresses for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>QADProxyAddress</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to remove all e-mail addresses for an Exchange recipient. This cmdlet is instrumental in a scenario where you need to replace all the existing addresses. In this case, you could use a pipeline in which Clear-QADProxyAddress removes the existing addresses and then passes the output object through the pipeline for Add-QADProxyAddress to configure new addresses.

The cmdlet allows you to identify the Exchange recipient by passing through the pipeline the corresponding output object of a Get-QAD* cmdlet. In this case, the DirObject parameter is used to receive the output object. Another way to identify the Exchange recipient is by passing the output of an *-QADProxyAddress cmdlet, in which case it is the CurrentAddresses parameter that receives the output object (see examples).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>CurrentAddresses</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Clear-QADProxyAddress</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>DirObject</maml:name>
				<maml:description>
					<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>CurrentAddresses</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive an output object of an *-QADProxyAddress cmdlet, and is instrumental in a scenario where multiple e-mail address changes need to be applied to a single recipient.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ProxyAddressChangesUI</command:parameterValue>
			<dev:type>
				<maml:name>ProxyAddressChangesUI</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>DirObject</maml:name>
			<maml:description>
				<maml:para>This parameter is intended to receive the object that represents the Exchange recipient. This could be an output object of a Get-QAD* cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IGenericDirectoryObject</command:parameterValue>
			<dev:type>
				<maml:name>IGenericDirectoryObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser company\jsmith | Clear-QADProxyAddress | Add-QADProxyAddress &#39;smtp:john.smith@company.com&#39; -Primary                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Replace all e-mail addresses for a particular user mailbox with a single, primary SMTP address. In this example, Clear-QADProxyAddress receives the user object through the DirObject parameter, whereas Add-QADProxyAddress relies on the CurrentAddresses parameter to receive the object that identifies the recipient.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-QADEmailAddressPolicy
		</command:name>
		<maml:description>
			<maml:para>Enable the e-mail address policy for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>QADEmailAddressPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to configure an Exchange recipient to have the recipient&#39;s e-mail addresses automatically updated based on changes made to e-mail address policies in your Exchange organization. To specify the recipient object, such as a mailbox user or a mail-enabled (distribution) group, use the Identity parameter. For example, you can retrieve a mailbox user by means of Get-QADUser, and then pipe the output user object into this cmdlet in order to enable the effect of the e-mail address policies on the user&#39;s mailbox.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-QADEmailAddressPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the recipient object. You can supply the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the recipient object. You can supply the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser DomainName\UserName | Enable-QADEmailAddressPolicy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Enable the e-mail address policy for a particular user mailbox.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v  0.0.0.0  -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-QADEmailAddressPolicy
		</command:name>
		<maml:description>
			<maml:para>Disable the e-mail address policy for an Exchange recipient.

This cmdlet is part of the Quest One ActiveRoles product. Use Get-QARSProductInfo to view information about Quest One ActiveRoles.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>QADEmailAddressPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Use this cmdlet to configure an Exchange recipient so that the recipient&#39;s e-mail addresses are not affected by the changes made to e-mail address policies in your Exchange organization. To specify the recipient object, such as a mailbox user or a mail-enabled (distribution) group, use the Identity parameter. For example, you can retrieve a mailbox user by means of Get-QADUser, and then pipe the output user object into this cmdlet in order to remove the user&#39;s mailbox from the effect of the e-mail address policies.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-QADEmailAddressPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Use this parameter to specify the recipient object. You can supply the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Connection</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionAccount</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ConnectionPassword</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Control</maml:name>
				<maml:description>
					<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Proxy</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseGlobalCatalog</maml:name>
				<maml:description>
					<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Connection</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ArsConnection</command:parameterValue>
			<dev:type>
				<maml:name>ArsConnection</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionAccount</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ConnectionPassword</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Control</maml:name>
			<maml:description>
				<maml:para>Use this parameter to pass request controls (in-controls) to Quest One ActiveRoles as part of an operation request. In Quest One ActiveRoles, request controls are used to send extra information along with an operation request, to control how Quest One ActiveRoles performs the request.

The parameter value is a hash table that defines the names and values of the request controls to be passed to Quest One ActiveRoles. The parameter syntax is as follows:

    -Control @{&lt;name&gt; = &lt;value&gt;; [&lt;name&gt; = &lt;value&gt;] ...}

In this syntax, each of the name-value pairs is the name and the value of a single control. For instructions on how to create and use hash tables, see topic &quot;about_associative_array&quot; or &quot;about_hash_tables&quot; in Windows PowerShell Help. For information about Quest One ActiveRoles request controls, refer to Quest One ActiveRoles SDK documentation.

Note that this parameter only has an effect on the operations that are performed through Quest One ActiveRoles (connection established using the Proxy parameter); otherwise, this parameter causes an error condition in ActiveRoles Management Shell.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Use this parameter to specify the recipient object. You can supply the Distinguished Name (DN), Canonical Name, GUID or, if applicable, the Domain\Name, UPN or SID of the object. When you pipe an object into the cmdlet, this parameter is used to receive the object.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">IdentityParameter</command:parameterValue>
			<dev:type>
				<maml:name>IdentityParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Proxy</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseGlobalCatalog</maml:name>
			<maml:description>
				<maml:para>For parameter description, see help on the Connect-QADService cmdlet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Prompts you for confirmation before executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Describes what would happen if you executed the command without actually executing the command.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri /> 
					</dev:type>
 			<dev:defaultValue /> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description />
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri />
				<maml:description />
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors />
	<command:nonTerminatingErrors />
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- EXAMPLE 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>
Get-QADUser DomainName\UserName | Disable-QADEmailAddressPolicy                        </dev:code>
       			<dev:remarks>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Disable the e-mail address policy for a particular user mailbox.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

</helpItems>
